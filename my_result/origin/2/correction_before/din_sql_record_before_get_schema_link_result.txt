index: 0
Gold SQL: SELECT count(*) FROM singer
schema_links: [COUNT(singer.Singer_ID)]
Correct: 1

index: 1
Gold SQL: SELECT count(*) FROM singer
schema_links: [singer.*]
Correct: 1

index: 2
Gold SQL: SELECT name ,  country ,  age FROM singer ORDER BY age DESC
schema_links: [singer.Name, singer.Country, singer.Age, ORDER BY singer.Age DESC]
Correct: 1

index: 3
Gold SQL: SELECT name ,  country ,  age FROM singer ORDER BY age DESC
schema_links: [singer.Name, singer.Country, singer.Age]
Correct: 1

index: 4
Gold SQL: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
schema_links: [singer.Age, singer.Country, 'France']
Correct: 1

index: 5
Gold SQL: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
schema_links: [singer.Age, singer.Country, 'French']
Correct: 0

index: 6
Gold SQL: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
schema_links: [singer.Song_Name, singer.Song_release_year, singer.Age]
Correct: 1

index: 7
Gold SQL: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
schema_links: [singer.Song_Name, singer.Song_release_year, singer.Age]
Correct: 1

index: 8
Gold SQL: SELECT DISTINCT country FROM singer WHERE age  >  20
schema_links: [singer.Country,singer.Age,20]
Correct: 1

index: 9
Gold SQL: SELECT DISTINCT country FROM singer WHERE age  >  20
schema_links: [singer.Country, singer.Age, 20]
Correct: 1

index: 10
Gold SQL: SELECT country ,  count(*) FROM singer GROUP BY country
schema_links: [singer.Country, COUNT(singer.Singer_ID)]
Correct: 1

index: 11
Gold SQL: SELECT country ,  count(*) FROM singer GROUP BY country
schema_links: [COUNT(singer.Singer_ID),singer.Country]
Correct: 1

index: 12
Gold SQL: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
schema_links: [singer.Song_Name,singer.Age,average age]
Correct: 1

index: 13
Gold SQL: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
schema_links: [singer.Song_Name, singer.Age, average]
Correct: 1

index: 14
Gold SQL: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
schema_links: [stadium.Location, stadium.Name, stadium.Capacity, 5000, 10000]
Correct: 1

index: 15
Gold SQL: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
schema_links: [stadium.Location, stadium.Name, stadium.Capacity]
Correct: 1

index: 16
Gold SQL: select max(capacity), average from stadium
schema_links: [stadium.Capacity, stadium.Average]
Correct: 0

index: 17
Gold SQL: select avg(capacity) ,  max(capacity) from stadium
schema_links: [stadium.Capacity, stadium.Highest]
Correct: 0

index: 18
Gold SQL: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
schema_links: [stadium.Name, stadium.Capacity, stadium.Highest, stadium.Lowest, stadium.Average]
Correct: 1

index: 19
Gold SQL: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
schema_links: [stadium.Name, stadium.Capacity, stadium.Highest, stadium.Average]
Correct: 1

index: 20
Gold SQL: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
schema_links: [concert.*, concert.Year, 2014, 2015]
Correct: 1

index: 21
Gold SQL: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
schema_links: [concert.*, concert.Year, 2014, 2015]
Correct: 1

index: 22
Gold SQL: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
schema_links: [stadium.Name, concert.Stadium_ID = stadium.Stadium_ID, concert.*]
Correct: 1

index: 23
Gold SQL: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
schema_links: [stadium.Stadium_ID, concert.concert_ID, concert.Stadium_ID = stadium.Stadium_ID]
Correct: 0

index: 24
Gold SQL: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1
schema_links: [stadium.Name, stadium.Capacity, concert.concert_ID, concert.Year, concert.Stadium_ID = stadium.Stadium_ID, 2014]
Correct: 0

index: 25
Gold SQL: select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1
schema_links: [stadium.Name, stadium.Capacity, concert.Year, concert.Stadium_ID = stadium.Stadium_ID, 2013]
Correct: 1

index: 26
Gold SQL: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
schema_links: [concert.Year, concert.concert_ID]
Correct: 0

index: 27
Gold SQL: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
schema_links: [concert.Year]
Correct: 1

index: 28
Gold SQL: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
schema_links: [stadium.Name, concert.Stadium_ID = stadium.Stadium_ID]
Correct: 1

index: 29
Gold SQL: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
schema_links: [stadium.Name, concert.Stadium_ID]
Correct: 1

index: 30
Gold SQL: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30
schema_links: [singer.Country, singer.Age, 40, 30]
Correct: 1

index: 31
Gold SQL: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
schema_links: [stadium.Name,concert.Stadium_ID = stadium.Stadium_ID,concert.Year,2014]
Correct: 1

index: 32
Gold SQL: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
schema_links: [stadium.Name,concert.Year,concert.Stadium_ID = stadium.Stadium_ID,2014]
Correct: 1

index: 33
Gold SQL: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id
schema_links: [concert.concert_Name, concert.Theme, singer_in_concert.concert_ID]
Correct: 0

index: 34
Gold SQL: select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id
schema_links: [concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID)]
Correct: 1

index: 35
Gold SQL: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
schema_links: [singer.Name, COUNT(singer_in_concert.Singer_ID)]
Correct: 0

index: 36
Gold SQL: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
schema_links: [singer.Name, singer_in_concert.*, COUNT(singer_in_concert.concert_ID)]
Correct: 1

index: 37
Gold SQL: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
schema_links: [singer.Name, singer_in_concert.concert_ID, concert.Year, singer_in_concert.Singer_ID = singer.Singer_ID, singer_in_concert.concert_ID = concert.concert_ID, 2014]
Correct: 1

index: 38
Gold SQL: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
schema_links: [singer.Name,singer_in_concert.Singer_ID,singer_in_concert.concert_ID = concert.concert_ID,concert.Year,2014]
Correct: 1

index: 39
Gold SQL: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
schema_links: [singer.Name, singer.Country, singer.Song_Name, 'Hey']
Correct: 1

index: 40
Gold SQL: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
schema_links: [singer.Name, singer.Country, singer.Song_Name, 'Hey']
Correct: 1

index: 41
Gold SQL: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
schema_links: [stadium.Name, stadium.Location, concert.Year, concert.Stadium_ID = stadium.Stadium_ID, 2014, 2015]
Correct: 1

index: 42
Gold SQL: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
schema_links: [stadium.Name, stadium.Location, concert.Stadium_ID = stadium.Stadium_ID, concert.Year, 2014, 2015]
Correct: 1

index: 43
Gold SQL: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
schema_links: [concert.concert_ID,concert.Stadium_ID = stadium.Stadium_ID,stadium.Capacity]
Correct: 1

index: 44
Gold SQL: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
schema_links: [COUNT(concert.concert_ID),stadium.Capacity,concert.Stadium_ID = stadium.Stadium_ID]
Correct: 1

index: 45
Gold SQL: SELECT count(*) FROM pets WHERE weight  >  10
schema_links: [COUNT(Pets.PetID),Pets.weight,10]
Correct: 1

index: 46
Gold SQL: SELECT count(*) FROM pets WHERE weight  >  10
schema_links: [Pets.weight, 10]
Correct: 1

index: 47
Gold SQL: SELECT weight FROM pets ORDER BY pet_age LIMIT 1
schema_links: [Pets.weight, Pets.pet_age, Pets.PetType = 'dog']
Correct: 1

index: 48
Gold SQL: SELECT weight FROM pets ORDER BY pet_age LIMIT 1
schema_links: [Pets.weight,Pets.pet_age,'dog']
Correct: 1

index: 49
Gold SQL: SELECT max(weight) ,  petType FROM pets GROUP BY petType
schema_links: [Pets.PetType, Pets.weight, Has_Pet.PetID = Pets.PetID]
Correct: 1

index: 50
Gold SQL: SELECT max(weight) ,  petType FROM pets GROUP BY petType
schema_links: [Pets.PetType, Pets.weight, Has_Pet.PetID = Pets.PetID]
Correct: 1

index: 51
Gold SQL: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
schema_links: [COUNT(Has_Pet.PetID),Has_Pet.StuID = Student.StuID,Student.Age,20]
Correct: 1

index: 52
Gold SQL: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
schema_links: [COUNT(Pets.PetID),Has_Pet.StuID,Student.Age,20]
Correct: 1

index: 53
Gold SQL: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
schema_links: [Pets.PetID, Has_Pet.PetID = Pets.PetID, Has_Pet.StuID = Student.StuID, Student.Sex, Dog]
Correct: 0

index: 54
Gold SQL: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
schema_links: [Pets.PetType, Student.Sex, Has_Pet.StuID = Student.StuID, Has_Pet.PetID = Pets.PetID, dog, female]
Correct: 0

index: 55
Gold SQL: SELECT count(DISTINCT pettype) FROM pets
schema_links: [Pets.PetType]
Correct: 1

index: 56
Gold SQL: SELECT count(DISTINCT pettype) FROM pets
schema_links: [Pets.PetType]
Correct: 1

index: 57
Gold SQL: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
schema_links: [Student.Fname, Has_Pet.StuID = Student.StuID, Has_Pet.PetID = Pets.PetID, Pets.PetType, 'cat', 'dog']
Correct: 0

index: 58
Gold SQL: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
schema_links: [Student.Fname, Pets.PetType, 'cat', 'dog']
Correct: 1

index: 59
Gold SQL: select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'
schema_links: [Student.Fname, Has_Pet.StuID = Student.StuID, Has_Pet.PetID = Pets.PetID, Pets.PetType = 'cat', Pets.PetType = 'dog']
Correct: 1

index: 60
Gold SQL: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
schema_links: [Student.Fname, Has_Pet.StuID = Student.StuID, Has_Pet.PetID = Pets.PetID, Pets.PetType, 'cat', 'dog']
Correct: 1

index: 61
Gold SQL: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
schema_links: [Student.Major, Student.Age, Pets.PetType != 'cat']
Correct: 1

index: 62
Gold SQL: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
schema_links: [Student.Major,Has_Pet.StuID = Student.StuID,Has_Pet.PetID = Pets.PetID,Pets.PetType,'cat',Student.Age]
Correct: 1

index: 63
Gold SQL: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
schema_links: [Student.StuID, Has_Pet.StuID = Student.StuID, Has_Pet.PetID, Pets.PetID, Pets.PetType, 'cat']
Correct: 1

index: 64
Gold SQL: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
schema_links: [Student.StuID, Pets.PetType, 'cat']
Correct: 1

index: 65
Gold SQL: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
schema_links: [Student.Fname, Student.Age, Pets.PetType, Has_Pet.StuID = Student.StuID, Has_Pet.PetID = Pets.PetID, 'dog', 'cat']
Correct: 0

index: 66
Gold SQL: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
schema_links: [Student.Fname, Pets.PetType, Has_Pet.StuID = Student.StuID, Has_Pet.PetID = Pets.PetID, 'dog', 'cat']
Correct: 0

index: 67
Gold SQL: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
schema_links: [Pets.PetType, Pets.weight, Pets.pet_age]
Correct: 1

index: 68
Gold SQL: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
schema_links: [Pets.pet_age,Pets.PetType,Pets.weight]
Correct: 1

index: 69
Gold SQL: SELECT petid ,  weight FROM pets WHERE pet_age  >  1
schema_links: [Pets.PetID, Pets.weight, Pets.pet_age, 1]
Correct: 1

index: 70
Gold SQL: SELECT petid ,  weight FROM pets WHERE pet_age  >  1
schema_links: [Pets.PetID, Pets.weight, Pets.pet_age, 1]
Correct: 1

index: 71
Gold SQL: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
schema_links: [Pets.pet_age, Pets.PetType]
Correct: 1

index: 72
Gold SQL: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
schema_links: [Pets.pet_age,Pets.PetType]
Correct: 1

index: 73
Gold SQL: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
schema_links: [Pets.weight,Pets.PetType]
Correct: 1

index: 74
Gold SQL: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
schema_links: [Pets.weight, Pets.PetType]
Correct: 1

index: 75
Gold SQL: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
schema_links: [Student.Fname, Student.Age, Has_Pet.StuID]
Correct: 1

index: 76
Gold SQL: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
schema_links: [Student.Fname,Student.Age,Has_Pet.StuID = Student.StuID]
Correct: 1

index: 77
Gold SQL: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
schema_links: [Pets.PetID, Has_Pet.StuID = Student.StuID, Has_Pet.PetID = Pets.PetID, Student.LName, 'Smith']
Correct: 1

index: 78
Gold SQL: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
schema_links: [Pets.PetID,Has_Pet.StuID,Student.LName,'Smith']
Correct: 1

index: 79
Gold SQL: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid
schema_links: [COUNT(Pets.PetID), Student.StuID, Has_Pet.PetID, Has_Pet.StuID, Pets.PetID]
Correct: 1

index: 80
Gold SQL: select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid
schema_links: [Student.StuID, Has_Pet.StuID = Student.StuID, Has_Pet.PetID = Pets.PetID, COUNT(Has_Pet.PetID)]
Correct: 1

index: 81
Gold SQL: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
schema_links: [Student.Fname, Student.Sex, Has_Pet.StuID = Student.StuID, Has_Pet.PetID = Pets.PetID, >1]
Correct: 0

index: 82
Gold SQL: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
schema_links: [Student.Fname, Student.Sex, Has_Pet.StuID = Student.StuID]
Correct: 1

index: 83
Gold SQL: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
schema_links: [Student.LName,Has_Pet.PetID,Pets.pet_age,'cat',3]
Correct: 1

index: 84
Gold SQL: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
schema_links: [Student.LName,Has_Pet.PetID = Pets.PetID,Pets.pet_age,cat,3]
Correct: 1

index: 85
Gold SQL: select avg(age) from student where stuid not in (select stuid from has_pet)
schema_links: [Student.Age, Has_Pet.StuID, Student.StuID = Has_Pet.StuID]
Correct: 1

index: 86
Gold SQL: select avg(age) from student where stuid not in (select stuid from has_pet)
schema_links: [Student.Age,Has_Pet.StuID]
Correct: 1

index: 87
Gold SQL: SELECT count(*) FROM CONTINENTS;
schema_links: [continents.Continent]
Correct: 1

index: 88
Gold SQL: SELECT count(*) FROM CONTINENTS;
schema_links: [count(continents.ContId)]
Correct: 1

index: 89
Gold SQL: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
schema_links: [continents.ContId, continents.Continent, countries.Continent]
Correct: 0

index: 90
Gold SQL: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
schema_links: [continents.ContId, continents.Continent, countries.CountryName, countries.Continent = continents.ContId]
Correct: 1

index: 91
Gold SQL: SELECT count(*) FROM COUNTRIES;
schema_links: [countries.CountryName,countries.*,countries.Continent = continents.ContId]
Correct: 1

index: 92
Gold SQL: SELECT count(*) FROM COUNTRIES;
schema_links: [countries.CountryName]
Correct: 1

index: 93
Gold SQL: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
schema_links: [model_list.Model, car_makers.Maker, car_makers.FullName, car_makers.Id]
Correct: 1

index: 94
Gold SQL: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
schema_links: [car_makers.FullName,car_makers.Id,model_list.Model,COUNT(model_list.Model)]
Correct: 1

index: 95
Gold SQL: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
schema_links: [model_list.Model,cars_data.Horsepower,model_list.ModelId = car_names.Model,car_names.MakeId = cars_data.Id]
Correct: 0

index: 96
Gold SQL: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
schema_links: [model_list.Model, cars_data.Horsepower, car_names.MakeId = cars_data.Id, model_list.ModelId = car_names.Model]
Correct: 0

index: 97
Gold SQL: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
schema_links: [model_list.Model,model_list.ModelId = car_names.Model,car_names.MakeId = cars_data.Id,cars_data.Weight,average weight]
Correct: 0

index: 98
Gold SQL: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
schema_links: [model_list.Model, car_names.Model, cars_data.Weight, model_list.ModelId = car_names.Model, car_names.MakeId = cars_data.Id, average weight]
Correct: 0

index: 99
Gold SQL: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
schema_links: [car_makers.Maker, cars_data.Year, 1970, car_makers.Id = cars_data.Id]
Correct: 0

index: 100
Gold SQL: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
schema_links: [car_makers.Maker, cars_data.Year, car_makers.Id = cars_data.Id, 1970]
Correct: 0

index: 101
Gold SQL: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
schema_links: [car_makers.Maker, cars_data.Year, car_makers.Id = car_names.MakeId, car_names.Model = model_list.Model, model_list.Maker = car_makers.Id]
Correct: 0

index: 102
Gold SQL: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
schema_links: [car_makers.Maker,cars_data.Year]
Correct: 0

index: 103
Gold SQL: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
schema_links: [car_names.Model, cars_data.Year, 1980]
Correct: 1

index: 104
Gold SQL: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
schema_links: [model_list.Model,cars_data.Year,cars_data.Id = car_names.MakeId,model_list.Maker = car_makers.Id,1980]
Correct: 1

index: 105
Gold SQL: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
schema_links: [car_makers.Maker, countries.Continent = continents.ContId, car_makers.Country = countries.CountryId]
Correct: 0

index: 106
Gold SQL: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
schema_links: [continents.Continent, car_makers.*]
Correct: 0

index: 107
Gold SQL: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
schema_links: [countries.CountryName,car_makers.Country = countries.CountryId]
Correct: 0

index: 108
Gold SQL: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
schema_links: [countries.CountryName, car_makers.Country = countries.CountryId]
Correct: 1

index: 109
Gold SQL: select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;
schema_links: [car_names.Model,car_makers.FullName,car_makers.Id = car_names.MakeId]
Correct: 0

index: 110
Gold SQL: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;
schema_links: [COUNT(car_names.Model), car_makers.Id, car_makers.FullName, car_makers.Id = model_list.Maker, car_names.MakeId = model_list.ModelId]
Correct: 0

index: 111
Gold SQL: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
schema_links: [cars_data.Accelerate, model_list.Maker = car_makers.Id, car_names.Model = model_list.Model, 'amc hornet sportabout (sw)']
Correct: 0

index: 112
Gold SQL: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
schema_links: [cars_data.Accelerate, car_makers.Maker, car_names.Model, car_makers.Id = car_names.MakeId, car_names.MakeId = cars_data.Id, "amc hornet sportabout (sw)"]
Correct: 0

index: 113
Gold SQL: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
schema_links: [car_makers.*,car_makers.Country = countries.CountryId,countries.CountryName,'France']
Correct: 0

index: 114
Gold SQL: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
schema_links: [car_makers.Id,car_makers.Country = countries.CountryId,countries.CountryName,'France']
Correct: 0

index: 115
Gold SQL: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
schema_links: [model_list.ModelId, car_makers.Id = car_names.MakeId, car_names.Model = model_list.Model, car_makers.Country = countries.CountryId, countries.CountryName = 'USA']
Correct: 0

index: 116
Gold SQL: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
schema_links: [COUNT(model_list.Model),countries.CountryName,countries.CountryId = car_makers.Country,'United States']
Correct: 0

index: 117
Gold SQL: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
schema_links: [cars_data.MPG, cars_data.Cylinders, 4]
Correct: 1

index: 118
Gold SQL: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
schema_links: [cars_data.MPG,cars_data.Cylinders,4]
Correct: 1

index: 119
Gold SQL: select min(weight) from cars_data where cylinders  =  8 and year  =  1974
schema_links: [cars_data.Weight, cars_data.Cylinders, cars_data.Year, 8, 1974]
Correct: 1

index: 120
Gold SQL: select min(weight) from cars_data where cylinders  =  8 and year  =  1974
schema_links: [cars_data.Weight, cars_data.Cylinders, cars_data.Year, 8, 1974]
Correct: 1

index: 121
Gold SQL: SELECT Maker ,  Model FROM MODEL_LIST;
schema_links: [car_makers.Maker,model_list.Model,car_makers.Id = model_list.Maker]
Correct: 0

index: 122
Gold SQL: SELECT Maker ,  Model FROM MODEL_LIST;
schema_links: [car_makers.Maker,model_list.Model,car_makers.Id = model_list.Maker,car_names.Model = model_list.Model,car_names.MakeId = cars_data.Id]
Correct: 0

index: 123
Gold SQL: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
schema_links: [countries.CountryName, countries.CountryId, car_makers.Country = countries.CountryId]
Correct: 0

index: 124
Gold SQL: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
schema_links: [countries.CountryName, countries.CountryId, car_makers.Country = countries.CountryId]
Correct: 0

index: 125
Gold SQL: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
schema_links: [cars_data.*, cars_data.Horsepower, 150]
Correct: 1

index: 126
Gold SQL: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
schema_links: [COUNT(cars_data.Id),cars_data.Horsepower,150]
Correct: 1

index: 127
Gold SQL: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
schema_links: [cars_data.Weight, cars_data.Year]
Correct: 1

index: 128
Gold SQL: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
schema_links: [cars_data.Weight, cars_data.Year]
Correct: 1

index: 129
Gold SQL: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
schema_links: [countries.CountryName, car_makers.Id, countries.Continent = continents.ContId, car_makers.Country = countries.CountryId, Europe, 3]
Correct: 0

index: 130
Gold SQL: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
schema_links: [countries.CountryName,countries.Continent = continents.ContId,car_makers.Country = countries.CountryId,car_makers.*,'Europe',3]
Correct: 0

index: 131
Gold SQL: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
schema_links: [cars_data.Horsepower,car_makers.Maker,cars_data.Cylinders,car_makers.Id = cars_data.Id,3]
Correct: 0

index: 132
Gold SQL: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
schema_links: [cars_data.Horsepower,cars_data.Cylinders,car_makers.Maker,car_makers.Id = cars_data.Id,3]
Correct: 0

index: 133
Gold SQL: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;
schema_links: [model_list.Model, cars_data.MPG, model_list.ModelId = car_names.Model, car_names.MakeId = cars_data.Id]
Correct: 0

index: 134
Gold SQL: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;
schema_links: [model_list.Model]
Correct: 0

index: 135
Gold SQL: SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;
schema_links: [cars_data.Horsepower, cars_data.Year, 1980]
Correct: 1

index: 136
Gold SQL: select avg(horsepower) from cars_data where year  <  1980;
schema_links: [cars_data.Horsepower,cars_data.Year,1980]
Correct: 1

index: 137
Gold SQL: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
schema_links: [cars_data.Edispl, car_names.Model, model_list.Maker, 'volvo']
Correct: 0

index: 138
Gold SQL: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
schema_links: [cars_data.Edispl, model_list.Maker = car_makers.Id, car_names.Model = model_list.Model, car_names.MakeId = cars_data.Id, 'volvo']
Correct: 1

index: 139
Gold SQL: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
schema_links: [cars_data.Accelerate,cars_data.Cylinders]
Correct: 1

index: 140
Gold SQL: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
schema_links: [cars_data.Accelerate, cars_data.Cylinders]
Correct: 1

index: 141
Gold SQL: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
schema_links: [model_list.Model,car_makers.Maker,model_list.Maker = car_makers.Id]
Correct: 0

index: 142
Gold SQL: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
schema_links: [model_list.Model]
Correct: 0

index: 143
Gold SQL: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
schema_links: [cars_data.*, cars_data.Cylinders, 4]
Correct: 1

index: 144
Gold SQL: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
schema_links: [COUNT(cars_data.Id), cars_data.Cylinders, 4]
Correct: 1

index: 145
Gold SQL: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
schema_links: [COUNT(cars_data.Id),cars_data.Year,1980]
Correct: 1

index: 146
Gold SQL: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
schema_links: [cars_data.Year,cars_data.*]
Correct: 1

index: 147
Gold SQL: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
schema_links: [model_list.*,car_makers.FullName,model_list.Maker = car_makers.Id,'American Motor Company']
Correct: 1

index: 148
Gold SQL: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
schema_links: [COUNT(model_list.ModelId),model_list.Maker,car_makers.Id = model_list.Maker,'American Motor Company']
Correct: 0

index: 149
Gold SQL: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
schema_links: [car_makers.Id, car_makers.FullName, model_list.Maker, 3]
Correct: 0

index: 150
Gold SQL: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
schema_links: [car_makers.Maker, car_makers.Id, model_list.Maker, 3]
Correct: 0

index: 151
Gold SQL: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
schema_links: [model_list.Model,car_makers.FullName,car_makers.Id = model_list.Maker,cars_data.Weight,cars_data.Id = car_names.MakeId,'General Motors',3500]
Correct: 0

index: 152
Gold SQL: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
schema_links: [model_list.Model, car_makers.Maker = car_makers.Id, car_names.Model = model_list.Model, cars_data.Weight, cars_data.Id = car_names.MakeId, car_makers.Id = model_list.Maker, 'General Motors', 3500]
Correct: 0

index: 153
Gold SQL: select distinct year from cars_data where weight between 3000 and 4000;
schema_links: [cars_data.Year, cars_data.Weight, 3000, 4000]
Correct: 1

index: 154
Gold SQL: select distinct year from cars_data where weight between 3000 and 4000;
schema_links: [cars_data.Year, cars_data.Weight, 4000, 3000]
Correct: 0

index: 155
Gold SQL: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
schema_links: [cars_data.Horsepower, cars_data.Accelerate]
Correct: 1

index: 156
Gold SQL: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
schema_links: [cars_data.Horsepower, cars_data.Accelerate]
Correct: 1

index: 157
Gold SQL: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
schema_links: [car_names.Model,car_makers.Maker,model_list.Model,cars_data.Cylinders,cars_data.Accelerate,car_names.MakeId = cars_data.Id,car_makers.Id = model_list.Maker,'volvo']
Correct: 0

index: 158
Gold SQL: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
schema_links: [car_makers.Maker, model_list.Model, cars_data.Cylinders, cars_data.Accelerate, car_makers.Id = model_list.Maker, car_names.MakeId = model_list.Model, cars_data.Id = car_names.MakeId]
Correct: 0

index: 159
Gold SQL: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
schema_links: [cars_data.Accelerate,cars_data.Horsepower]
Correct: 0

index: 160
Gold SQL: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
schema_links: [COUNT(cars_data.Id),MAX(cars_data.Horsepower)]
Correct: 0

index: 161
Gold SQL: select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
schema_links: [countries.CountryName,car_makers.Country = countries.CountryId,2]
Correct: 1

index: 162
Gold SQL: select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
schema_links: [countries.CountryName,car_makers.Id,car_makers.Country = countries.CountryId,2]
Correct: 1

index: 163
Gold SQL: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
schema_links: [cars_data.*,cars_data.Cylinders,6]
Correct: 1

index: 164
Gold SQL: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
schema_links: []
Correct: 1

index: 165
Gold SQL: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
schema_links: [cars_data.Cylinders,cars_data.Horsepower,4]
Correct: 0

index: 166
Gold SQL: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
schema_links: [cars_data.Cylinders,cars_data.Horsepower,4]
Correct: 0

index: 167
Gold SQL: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;
schema_links: [cars_data.Horsepower, cars_data.Cylinders, car_makers.Id, car_makers.Maker, lowest horsepower, cylinders <= 3]
Correct: 1

index: 168
Gold SQL: select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;
schema_links: [car_makers.Id = model_list.Maker, model_list.Model = car_names.Model, car_names.MakeId = cars_data.Id, cars_data.Horsepower, cars_data.Cylinders, minimum horsepower, 4]
Correct: 0

index: 169
Gold SQL: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
schema_links: [cars_data.MPG, cars_data.Cylinders, cars_data.Year, 8, 1980]
Correct: 1

index: 170
Gold SQL: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
schema_links: [cars_data.MPG, cars_data.Cylinders, cars_data.Year, 8, 1980]
Correct: 1

index: 171
Gold SQL: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
schema_links: [model_list.Model,cars_data.Weight,car_makers.Maker,model_list.Maker = car_makers.Id,3500,'Ford Motor Company']
Correct: 0

index: 172
Gold SQL: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
schema_links: [model_list.Model, cars_data.Weight, car_makers.Maker, model_list.Maker = car_makers.Id, 3500, 'Ford Motor Company']
Correct: 0

index: 173
Gold SQL: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
schema_links: [countries.CountryName,car_makers.Country = countries.CountryId]
Correct: 0

index: 174
Gold SQL: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
schema_links: [countries.CountryName,car_makers.Country = countries.CountryId]
Correct: 1

index: 175
Gold SQL: select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;
schema_links: [car_makers.Id, car_makers.Maker, model_list.Maker, 2, 3]
Correct: 0

index: 176
Gold SQL: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;
schema_links: [car_makers.Id = model_list.Maker, car_makers.Maker, model_list.Maker, COUNT(model_list.Model) >= 2, car_names.Model = model_list.Model, car_names.Make, COUNT(car_names.Model) > 3, car_names.MakeId = cars_data.Id]
Correct: 0

index: 177
Gold SQL: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';
schema_links: [countries.CountryId, countries.CountryName, car_makers.Id, car_names.Model, model_list.Maker, car_makers.Country = countries.CountryId, car_names.Model = model_list.Model]
Correct: 0

index: 178
Gold SQL: select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';
schema_links: [countries.CountryId, countries.CountryName, car_makers.Id, model_list.Maker, 3, "fiat"]
Correct: 0

index: 179
Gold SQL: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
schema_links: [airlines.Country,'JetBlue Airways']
Correct: 1

index: 180
Gold SQL: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
schema_links: [airlines.Country,'Jetblue Airways']
Correct: 0

index: 181
Gold SQL: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
schema_links: [airlines.Abbreviation,airlines.Airline,"JetBlue Airways"]
Correct: 1

index: 182
Gold SQL: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
schema_links: [airlines.Abbreviation,airlines.Airline,'Jetblue Airways']
Correct: 0

index: 183
Gold SQL: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
schema_links: [airlines.Airline, airlines.Abbreviation, airports.Country, airports.CountryAbbrev = airlines.uid, "USA"]
Correct: 0

index: 184
Gold SQL: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
schema_links: [airlines.Airline, airlines.Abbreviation, airlines.Country = airports.Country, airports.Country, 'USA']
Correct: 0

index: 185
Gold SQL: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
schema_links: [airports.AirportCode, airports.AirportName, airports.City, 'Anthony']
Correct: 1

index: 186
Gold SQL: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
schema_links: [airports.AirportCode, airports.AirportName, airports.City, 'Anthony']
Correct: 1

index: 187
Gold SQL: SELECT count(*) FROM AIRLINES
schema_links: [airlines.Airline]
Correct: 1

index: 188
Gold SQL: SELECT count(*) FROM AIRLINES
schema_links: [COUNT(airlines.uid)]
Correct: 1

index: 189
Gold SQL: SELECT count(*) FROM AIRPORTS
schema_links: [COUNT(airports.*)]
Correct: 1

index: 190
Gold SQL: SELECT count(*) FROM AIRPORTS
schema_links: [COUNT(airports.*)]
Correct: 1

index: 191
Gold SQL: SELECT count(*) FROM FLIGHTS
schema_links: [COUNT(flights.*)]
Correct: 1

index: 192
Gold SQL: SELECT count(*) FROM FLIGHTS
schema_links: [COUNT(flights.*)]
Correct: 1

index: 193
Gold SQL: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
schema_links: [airlines.Airline,'UAL']
Correct: 1

index: 194
Gold SQL: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
schema_links: [airlines.Airline, airlines.Abbreviation, 'UAL']
Correct: 1

index: 195
Gold SQL: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
schema_links: [airlines.Airline,airlines.Country,'USA']
Correct: 1

index: 196
Gold SQL: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
schema_links: [airlines.uid, airlines.Country, 'USA']
Correct: 1

index: 197
Gold SQL: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
schema_links: [airports.City, airports.Country, 'Alton']
Correct: 1

index: 198
Gold SQL: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
schema_links: [airports.City,airports.Country,airports.AirportName,'Alton']
Correct: 1

index: 199
Gold SQL: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
schema_links: [airports.AirportName, airports.AirportCode = 'AKO']
Correct: 1

index: 200
Gold SQL: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
schema_links: [airports.AirportName,airports.AirportCode,'AKO']
Correct: 1

index: 201
Gold SQL: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
schema_links: [airports.AirportName,airports.City,'Aberdeen']
Correct: 1

index: 202
Gold SQL: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
schema_links: [airports.AirportName, airports.City, "Aberdeen"]
Correct: 1

index: 203
Gold SQL: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
schema_links: [flights.*,flights.SourceAirport = airports.AirportCode,'APG']
Correct: 1

index: 204
Gold SQL: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
schema_links: [flights.FlightNo,flights.SourceAirport,flights.SourceAirport = airports.AirportCode,'APG']
Correct: 1

index: 205
Gold SQL: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
schema_links: [flights.DestAirport = airports.AirportCode,'ATO']
Correct: 1

index: 206
Gold SQL: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
schema_links: [flights.*,flights.DestAirport = airports.AirportCode,'ATO']
Correct: 1

index: 207
Gold SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
schema_links: [flights.*,flights.SourceAirport = airports.AirportCode,airports.City,Aberdeen]
Correct: 1

index: 208
Gold SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
schema_links: [COUNT(flights.FlightNo), flights.SourceAirport = airports.AirportCode, Aberdeen]
Correct: 1

index: 209
Gold SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
schema_links: [flights.*,flights.DestAirport = airports.AirportCode,Aberdeen]
Correct: 1

index: 210
Gold SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
schema_links: [flights.*, airports.City, airports.AirportName, flights.DestAirport = airports.AirportCode, Aberdeen]
Correct: 0

index: 211
Gold SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
schema_links: [flights.FlightNo, flights.SourceAirport = airports.AirportCode, flights.DestAirport = airports.AirportCode, 'Ashley']
Correct: 1

index: 212
Gold SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
schema_links: [flights.FlightNo, flights.SourceAirport = airports.AirportCode, flights.DestAirport = airports.AirportCode, airports.AirportName = 'Aberdeen', airports.AirportName = 'Ashley']
Correct: 0

index: 213
Gold SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
schema_links: [COUNT(flights.FlightNo),flights.Airline = airlines.Abbreviation,'JetBlue Airways']
Correct: 1

index: 214
Gold SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
schema_links: [COUNT(flights.FlightNo), flights.Airline = airlines.Abbreviation, 'Jetblue Airways']
Correct: 0

index: 215
Gold SQL: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
schema_links: [flights.FlightNo, airlines.Airline, flights.Airline = airlines.uid, flights.DestAirport = airports.AirportCode, airports.AirportCode]
Correct: 1

index: 216
Gold SQL: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
schema_links: [flights.FlightNo, flights.DestAirport, flights.DestAirport = airports.AirportCode, United Airlines, ASY]
Correct: 0

index: 217
Gold SQL: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
schema_links: [flights.*, flights.Airline = 'United Airlines', flights.SourceAirport, flights.SourceAirport = airports.AirportCode, airports.AirportCode]
Correct: 1

index: 218
Gold SQL: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
schema_links: [flights.FlightNo, flights.SourceAirport, 'United Airlines', 'AHD']
Correct: 1

index: 219
Gold SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
schema_links: [flights.*, flights.Airline = airlines.Abbreviation, flights.DestAirport = airports.AirportCode, 'United Airlines', 'Aberdeen']
Correct: 1

index: 220
Gold SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
schema_links: [COUNT(flights.FlightNo), flights.DestAirport = airports.AirportCode, airlines.uid = flights.Airline, "United Airlines", "Aberdeen"]
Correct: 1

index: 221
Gold SQL: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
schema_links: [airports.City, flights.DestAirport = airports.AirportCode, flights.*]
Correct: 0

index: 222
Gold SQL: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
schema_links: [airports.City,flights.DestAirport = airports.AirportCode]
Correct: 1

index: 223
Gold SQL: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
schema_links: [airports.City, flights.SourceAirport]
Correct: 1

index: 224
Gold SQL: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
schema_links: [airports.City, flights.SourceAirport]
Correct: 1

index: 225
Gold SQL: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
schema_links: [airports.AirportCode, flights.SourceAirport = airports.AirportCode, flights.DestAirport = airports.AirportCode, flights.*]
Correct: 1

index: 226
Gold SQL: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
schema_links: [airports.AirportCode, flights.SourceAirport = airports.AirportCode, flights.DestAirport = airports.AirportCode]
Correct: 0

index: 227
Gold SQL: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
schema_links: [airports.AirportCode, flights.SourceAirport = airports.AirportCode, flights.DestAirport = airports.AirportCode, flights.*]
Correct: 0

index: 228
Gold SQL: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
schema_links: []
Correct: 0

index: 229
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
schema_links: [airlines.Airline,flights.Airline]
Correct: 0

index: 230
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
schema_links: [airlines.Airline,flights.Airline = airlines.Abbreviation]
Correct: 0

index: 231
Gold SQL: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
schema_links: [airlines.Abbreviation, airlines.Country, flights.Airline]
Correct: 0

index: 232
Gold SQL: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
schema_links: [airlines.Abbreviation,flights.Airline = airlines.uid,airlines.Country]
Correct: 0

index: 233
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
schema_links: [airlines.Airline,airports.AirportCode,flights.SourceAirport,'AHD']
Correct: 1

index: 234
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
schema_links: [airlines.Airline,flights.SourceAirport = airports.AirportCode,AHD]
Correct: 1

index: 235
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
schema_links: [airlines.Airline,flights.DestAirport = airports.AirportCode,flights.Airline = airlines.uid,'AHD']
Correct: 1

index: 236
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
schema_links: [airlines.Airline, flights.DestAirport = airports.AirportCode, 'AHD']
Correct: 0

index: 237
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
schema_links: [airlines.Airline, flights.SourceAirport = airports.AirportCode, flights.DestAirport = airports.AirportCode, 'APG', 'CVO']
Correct: 0

index: 238
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
schema_links: [airlines.Airline, flights.SourceAirport = airports.AirportCode, APG, CVO]
Correct: 0

index: 239
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
schema_links: [airlines.Airline, flights.SourceAirport = airports.AirportCode, flights.DestAirport = airports.AirportCode, 'CVO', 'APG']
Correct: 1

index: 240
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
schema_links: [flights.Airline, flights.SourceAirport = airports.AirportCode, 'CVO', 'APG']
Correct: 1

index: 241
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
schema_links: [airlines.Airline,flights.Airline,flights.Airline = airlines.Abbreviation,10]
Correct: 0

index: 242
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
schema_links: [airlines.Airline,flights.Airline,10]
Correct: 1

index: 243
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
schema_links: [airlines.Airline,flights.Airline = airlines.Abbreviation,flights.*]
Correct: 1

index: 244
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
schema_links: [airlines.Airline,flights.Airline = airlines.uid,flights.*]
Correct: 1

index: 245
Gold SQL: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
schema_links: [flights.FlightNo,flights.Airline = airlines.uid,airlines.Airline,'United Airlines']
Correct: 1

index: 246
Gold SQL: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
schema_links: [flights.FlightNo,flights.Airline = airlines.Abbreviation,'United Airlines']
Correct: 0

index: 247
Gold SQL: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
schema_links: [flights.FlightNo,flights.SourceAirport,flights.SourceAirport = airports.AirportCode,'APG']
Correct: 1

index: 248
Gold SQL: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
schema_links: [flights.FlightNo,flights.SourceAirport,flights.SourceAirport = airports.AirportCode,'APG']
Correct: 1

index: 249
Gold SQL: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
schema_links: [flights.FlightNo,flights.DestAirport = airports.AirportCode,airports.AirportCode,"APG"]
Correct: 1

index: 250
Gold SQL: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
schema_links: [flights.FlightNo, flights.DestAirport = airports.AirportCode, APG]
Correct: 1

index: 251
Gold SQL: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
schema_links: [flights.FlightNo, flights.SourceAirport = airports.AirportCode, 'Aberdeen']
Correct: 1

index: 252
Gold SQL: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
schema_links: [flights.FlightNo, flights.SourceAirport = airports.AirportCode, airports.AirportName, 'Aberdeen']
Correct: 1

index: 253
Gold SQL: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
schema_links: [flights.FlightNo,flights.DestAirport = airports.AirportCode,airports.City,'Aberdeen']
Correct: 1

index: 254
Gold SQL: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
schema_links: [flights.FlightNo, flights.DestAirport = airports.AirportCode, 'Aberdeen']
Correct: 0

index: 255
Gold SQL: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
schema_links: [flights.*, airports.City, flights.DestAirport = airports.AirportCode, 'Aberdeen', 'Abilene']
Correct: 0

index: 256
Gold SQL: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
schema_links: [flights.DestAirport = airports.AirportCode, 'Aberdeen', 'Abilene']
Correct: 1

index: 257
Gold SQL: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
schema_links: [airports.AirportName, flights.SourceAirport = airports.AirportCode, flights.DestAirport = airports.AirportCode]
Correct: 1

index: 258
Gold SQL: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
schema_links: [airports.AirportCode, flights.SourceAirport = airports.AirportCode, flights.DestAirport = airports.AirportCode]
Correct: 0

index: 259
Gold SQL: SELECT count(*) FROM employee
schema_links: [employee.Employee_ID]
Correct: 1

index: 260
Gold SQL: SELECT count(*) FROM employee
schema_links: [employee.Employee_ID]
Correct: 1

index: 261
Gold SQL: SELECT name FROM employee ORDER BY age
schema_links: [employee.Name, employee.Age]
Correct: 0

index: 262
Gold SQL: SELECT name FROM employee ORDER BY age
schema_links: [employee.Name,employee.Age]
Correct: 1

index: 263
Gold SQL: SELECT count(*) ,  city FROM employee GROUP BY city
schema_links: [COUNT(employee.Employee_ID),employee.City]
Correct: 1

index: 264
Gold SQL: SELECT count(*) ,  city FROM employee GROUP BY city
schema_links: [employee.Employee_ID, employee.City]
Correct: 1

index: 265
Gold SQL: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
schema_links: [employee.City, employee.Age, 30]
Correct: 1

index: 266
Gold SQL: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
schema_links: [employee.City,employee.Age,30]
Correct: 1

index: 267
Gold SQL: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
schema_links: [COUNT(shop.Shop_ID), shop.Location]
Correct: 1

index: 268
Gold SQL: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
schema_links: [shop.Shop_ID,shop.Location]
Correct: 1

index: 269
Gold SQL: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
schema_links: [shop.Manager_name, shop.District, shop.Number_products]
Correct: 1

index: 270
Gold SQL: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
schema_links: [shop.Manager_name, shop.District, shop.Number_products]
Correct: 1

index: 271
Gold SQL: SELECT min(Number_products) ,  max(Number_products) FROM shop
schema_links: [shop.Number_products,shop.*]
Correct: 1

index: 272
Gold SQL: SELECT min(Number_products) ,  max(Number_products) FROM shop
schema_links: [shop.Number_products]
Correct: 1

index: 273
Gold SQL: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
schema_links: [shop.Name, shop.Location, shop.District, shop.Number_products]
Correct: 1

index: 274
Gold SQL: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
schema_links: [shop.Number_products, shop.Name, shop.Location, shop.District]
Correct: 1

index: 275
Gold SQL: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
schema_links: [shop.Name, shop.Number_products, Average(shop.Number_products)]
Correct: 1

index: 276
Gold SQL: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
schema_links: [shop.Name, shop.Number_products]
Correct: 1

index: 277
Gold SQL: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
schema_links: [employee.Name, evaluation.Employee_ID = employee.Employee_ID, evaluation.*]
Correct: 0

index: 278
Gold SQL: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
schema_links: [evaluation.Employee_ID = employee.Employee_ID, employee.Name]
Correct: 0

index: 279
Gold SQL: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
schema_links: [employee.Name,evaluation.Bonus,evaluation.Employee_ID = employee.Employee_ID]
Correct: 1

index: 280
Gold SQL: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
schema_links: [evaluation.Employee_ID, evaluation.Bonus, employee.Name]
Correct: 0

index: 281
Gold SQL: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
schema_links: [employee.Name, evaluation.Employee_ID = employee.Employee_ID]
Correct: 1

index: 282
Gold SQL: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
schema_links: [employee.Name, evaluation.Employee_ID = employee.Employee_ID]
Correct: 1

index: 283
Gold SQL: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
schema_links: [shop.Name,hiring.Shop_ID = shop.Shop_ID]
Correct: 1

index: 284
Gold SQL: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
schema_links: [shop.Shop_ID, shop.Name, hiring.Shop_ID]
Correct: 0

index: 285
Gold SQL: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
schema_links: [shop.Name,hiring.Employee_ID,hiring.Shop_ID = shop.Shop_ID]
Correct: 1

index: 286
Gold SQL: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
schema_links: [shop.Name, hiring.Shop_ID = shop.Shop_ID]
Correct: 1

index: 287
Gold SQL: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
schema_links: [COUNT(hiring.Employee_ID),shop.Name,hiring.Shop_ID = shop.Shop_ID]
Correct: 1

index: 288
Gold SQL: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
schema_links: [shop.*,COUNT(employee.Employee_ID)]
Correct: 0

index: 289
Gold SQL: SELECT sum(bonus) FROM evaluation
schema_links: [evaluation.Bonus]
Correct: 1

index: 290
Gold SQL: SELECT sum(bonus) FROM evaluation
schema_links: [evaluation.Bonus]
Correct: 1

index: 291
Gold SQL: SELECT * FROM hiring
schema_links: [hiring.*]
Correct: 1

index: 292
Gold SQL: SELECT * FROM hiring
schema_links: [hiring.*]
Correct: 1

index: 293
Gold SQL: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
schema_links: [shop.District, shop.Number_products, 3000, 10000]
Correct: 1

index: 294
Gold SQL: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
schema_links: [shop.District, shop.Number_products, 3000, 10000]
Correct: 1

index: 295
Gold SQL: SELECT count(DISTINCT LOCATION) FROM shop
schema_links: [shop.Location]
Correct: 1

index: 296
Gold SQL: SELECT count(DISTINCT LOCATION) FROM shop
schema_links: [shop.Location]
Correct: 1

index: 297
Gold SQL: SELECT count(*) FROM Documents
schema_links: [Documents.Document_ID]
Correct: 1

index: 298
Gold SQL: SELECT count(*) FROM Documents
schema_links: [Documents.*]
Correct: 1

index: 299
Gold SQL: SELECT document_id ,  document_name ,  document_description FROM Documents
schema_links: [Documents.Document_ID, Documents.Document_Name, Documents.Document_Description]
Correct: 1

index: 300
Gold SQL: SELECT document_id ,  document_name ,  document_description FROM Documents
schema_links: [Documents.Document_ID, Documents.Document_Name, Documents.Document_Description]
Correct: 1

index: 301
Gold SQL: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
schema_links: [Documents.Document_Name,Documents.Template_ID,Documents.Document_Description,'w']
Correct: 1

index: 302
Gold SQL: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
schema_links: [Documents.Document_Name, Documents.Template_ID, Documents.Document_Description, 'w']
Correct: 1

index: 303
Gold SQL: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
schema_links: [Documents.Document_ID, Documents.Template_ID, Documents.Document_Description, 'Robbin CV']
Correct: 1

index: 304
Gold SQL: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
schema_links: [Documents.Document_ID, Documents.Template_ID, Documents.Document_Description, Documents.Document_Name, "Robbin CV"]
Correct: 0

index: 305
Gold SQL: SELECT count(DISTINCT template_id) FROM Documents
schema_links: [Templates.Template_ID,Documents.Document_ID,Documents.Template_ID = Templates.Template_ID]
Correct: 1

index: 306
Gold SQL: SELECT count(DISTINCT template_id) FROM Documents
schema_links: [Templates.Template_ID, Documents.Template_ID = Templates.Template_ID]
Correct: 0

index: 307
Gold SQL: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
schema_links: [Documents.*, Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code, Documents.Template_ID = Templates.Template_ID, 'PPT']
Correct: 0

index: 308
Gold SQL: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
schema_links: [COUNT(Documents.Document_ID), Ref_Template_Types.Template_Type_Description, Documents.Template_ID = Templates.Template_ID, Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code, 'PPT']
Correct: 0

index: 309
Gold SQL: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
schema_links: [Templates.Template_ID,Documents.Template_ID = Templates.Template_ID]
Correct: 1

index: 310
Gold SQL: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
schema_links: [Documents.Template_ID = Templates.Template_ID]
Correct: 0

index: 311
Gold SQL: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Templates.Template_ID, Templates.Template_Type_Code, Documents.Template_ID]
Correct: 0

index: 312
Gold SQL: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Templates.Template_ID, Templates.Template_Type_Code, Documents.Template_ID]
Correct: 0

index: 313
Gold SQL: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
schema_links: [Templates.Template_ID,Documents.Template_ID = Templates.Template_ID]
Correct: 1

index: 314
Gold SQL: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
schema_links: [Templates.Template_ID,Documents.Document_ID,Documents.Template_ID = Templates.Template_ID]
Correct: 1

index: 315
Gold SQL: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
schema_links: [Templates.Template_ID, Documents.Template_ID]
Correct: 1

index: 316
Gold SQL: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
schema_links: [Templates.Template_ID = Documents.Template_ID]
Correct: 1

index: 317
Gold SQL: SELECT count(*) FROM Templates
schema_links: [Templates.Template_ID]
Correct: 1

index: 318
Gold SQL: SELECT count(*) FROM Templates
schema_links: [Templates.Template_ID]
Correct: 1

index: 319
Gold SQL: SELECT template_id ,  version_number ,  template_type_code FROM Templates
schema_links: [Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code, Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code]
Correct: 0

index: 320
Gold SQL: SELECT template_id ,  version_number ,  template_type_code FROM Templates
schema_links: [Templates.Template_ID,Templates.Version_Number,Templates.Template_Type_Code,Ref_Template_Types.Template_Type_Code]
Correct: 0

index: 321
Gold SQL: SELECT DISTINCT template_type_code FROM Templates
schema_links: [Ref_Template_Types.Template_Type_Code,Templates.Template_ID]
Correct: 1

index: 322
Gold SQL: SELECT DISTINCT template_type_code FROM Templates
schema_links: [Ref_Template_Types.Template_Type_Code]
Correct: 0

index: 323
Gold SQL: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
schema_links: [Templates.Template_ID, Templates.Template_Type_Code, Ref_Template_Types.Template_Type_Code, PP, PPT]
Correct: 1

index: 324
Gold SQL: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
schema_links: [Templates.Template_ID, Templates.Template_Type_Code, Ref_Template_Types.Template_Type_Code, 'PP', 'PPT']
Correct: 1

index: 325
Gold SQL: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
schema_links: [Templates.Template_ID,Templates.Template_Type_Code,Ref_Template_Types.Template_Type_Code,'CV']
Correct: 1

index: 326
Gold SQL: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
schema_links: [COUNT(Templates.Template_ID),Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code,Ref_Template_Types.Template_Type_Description,'CV']
Correct: 1

index: 327
Gold SQL: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
schema_links: [Templates.Version_Number, Templates.Template_Type_Code, Templates.Version_Number > 5]
Correct: 1

index: 328
Gold SQL: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
schema_links: [Templates.Version_Number, Templates.Template_Type_Code, Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code, 5]
Correct: 1

index: 329
Gold SQL: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
schema_links: [Ref_Template_Types.Template_Type_Code, COUNT(Templates.Template_ID)]
Correct: 0

index: 330
Gold SQL: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
schema_links: [Ref_Template_Types.Template_Type_Code,Templates.Template_ID,Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code]
Correct: 1

index: 331
Gold SQL: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
schema_links: [Ref_Template_Types.Template_Type_Code,Templates.Template_Type_Code]
Correct: 0

index: 332
Gold SQL: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
schema_links: [Ref_Template_Types.Template_Type_Code, Templates.Template_Type_Code]
Correct: 1

index: 333
Gold SQL: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
schema_links: [Ref_Template_Types.Template_Type_Code,Templates.Template_Type_Code,Templates.Template_ID = Documents.Template_ID,3]
Correct: 1

index: 334
Gold SQL: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
schema_links: [Ref_Template_Types.Template_Type_Code,Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code,Templates.Template_ID,3]
Correct: 1

index: 335
Gold SQL: SELECT min(Version_Number) ,  template_type_code FROM Templates
schema_links: [Templates.Version_Number, Templates.Template_Type_Code, Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code]
Correct: 1

index: 336
Gold SQL: SELECT min(Version_Number) ,  template_type_code FROM Templates
schema_links: [Templates.Version_Number, Templates.Template_Type_Code, Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code]
Correct: 1

index: 337
Gold SQL: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
schema_links: [Templates.Template_Type_Code,Documents.Template_ID = Templates.Template_ID,Documents.Document_Name,'Data base']
Correct: 1

index: 338
Gold SQL: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
schema_links: [Templates.Template_Type_Code,Documents.Document_Name,Documents.Template_ID = Templates.Template_ID,'Data base']
Correct: 1

index: 339
Gold SQL: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
schema_links: [Documents.Document_Name, Documents.Template_ID = Templates.Template_ID, Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code, 'BK']
Correct: 1

index: 340
Gold SQL: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
schema_links: [Documents.Document_Name,Documents.Template_ID = Templates.Template_ID,'BK']
Correct: 1

index: 341
Gold SQL: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
schema_links: [Ref_Template_Types.Template_Type_Code,COUNT(Documents.Document_ID)]
Correct: 0

index: 342
Gold SQL: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
schema_links: [Ref_Template_Types.Template_Type_Code,COUNT(Documents.Document_ID),Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code,Documents.Template_ID = Templates.Template_ID]
Correct: 1

index: 343
Gold SQL: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
schema_links: [Ref_Template_Types.Template_Type_Code, Documents.*]
Correct: 0

index: 344
Gold SQL: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
schema_links: [Ref_Template_Types.Template_Type_Code, Documents.*, Templates.Template_ID, Documents.Template_ID = Templates.Template_ID, Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code]
Correct: 1

index: 345
Gold SQL: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
schema_links: [Ref_Template_Types.Template_Type_Code, Templates.Template_Type_Code, Documents.Template_ID]
Correct: 0

index: 346
Gold SQL: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
schema_links: [Ref_Template_Types.Template_Type_Code, Documents.Template_ID = Templates.Template_ID]
Correct: 1

index: 347
Gold SQL: SELECT template_type_code ,  template_type_description FROM Ref_template_types
schema_links: [Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description]
Correct: 1

index: 348
Gold SQL: SELECT template_type_code ,  template_type_description FROM Ref_template_types
schema_links: [Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description]
Correct: 1

index: 349
Gold SQL: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
schema_links: [Ref_Template_Types.Template_Type_Description,Ref_Template_Types.Template_Type_Code,'AD']
Correct: 1

index: 350
Gold SQL: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
schema_links: [Ref_Template_Types.Template_Type_Description,Ref_Template_Types.Template_Type_Code,Templates.Template_Type_Code,'AD']
Correct: 1

index: 351
Gold SQL: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
schema_links: [Ref_Template_Types.Template_Type_Code,Ref_Template_Types.Template_Type_Description,"Book"]
Correct: 1

index: 352
Gold SQL: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
schema_links: [Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description, 'Book']
Correct: 1

index: 353
Gold SQL: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
schema_links: [Ref_Template_Types.Template_Type_Description,Templates.Template_ID,Documents.Template_ID,Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code]
Correct: 1

index: 354
Gold SQL: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
schema_links: [Ref_Template_Types.Template_Type_Description,Templates.Template_ID,Documents.Template_ID,Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code,Documents.Document_ID]
Correct: 0

index: 355
Gold SQL: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
schema_links: [Templates.Template_ID,Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code,Ref_Template_Types.Template_Type_Description,'Presentation']
Correct: 1

index: 356
Gold SQL: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
schema_links: [Templates.Template_ID,Templates.Template_Type_Description,Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code,'Presentation']
Correct: 1

index: 357
Gold SQL: SELECT count(*) FROM Paragraphs
schema_links: [Paragraphs.*]
Correct: 1

index: 358
Gold SQL: SELECT count(*) FROM Paragraphs
schema_links: [Paragraphs.*]
Correct: 1

index: 359
Gold SQL: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
schema_links: [Paragraphs.*,Documents.Document_ID = Paragraphs.Document_ID,'Summer Show']
Correct: 1

index: 360
Gold SQL: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
schema_links: [COUNT(Paragraphs.Paragraph_ID),Documents.Document_Name,'Summer Show']
Correct: 1

index: 361
Gold SQL: select other_details from paragraphs where paragraph_text like 'korea'
schema_links: [Paragraphs.*,Paragraphs.Paragraph_Text,'Korea']
Correct: 0

index: 362
Gold SQL: select other_details from paragraphs where paragraph_text like 'korea'
schema_links: [Paragraphs.*,Paragraphs.Paragraph_Text,'Korea']
Correct: 0

index: 363
Gold SQL: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
schema_links: [Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text, Documents.Document_Name, Documents.Template_ID = Templates.Template_ID, 'Welcome to NY']
Correct: 1

index: 364
Gold SQL: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
schema_links: [Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text, Documents.Document_Name, Documents.Document_ID = Paragraphs.Document_ID, 'Welcome to NY']
Correct: 1

index: 365
Gold SQL: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
schema_links: [Paragraphs.Paragraph_Text,Documents.Document_Name,Documents.Document_ID = Paragraphs.Document_ID,'Customer reviews']
Correct: 1

index: 366
Gold SQL: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
schema_links: [Paragraphs.Paragraph_Text,Documents.Document_Name,Documents.Document_ID = Paragraphs.Document_ID,'Customer reviews']
Correct: 1

index: 367
Gold SQL: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
schema_links: [Documents.Document_ID, COUNT(Paragraphs.Paragraph_ID)]
Correct: 0

index: 368
Gold SQL: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
schema_links: [Documents.Document_ID,COUNT(Paragraphs.Paragraph_ID),Paragraphs.Document_ID = Documents.Document_ID,ORDER BY Documents.Document_ID]
Correct: 0

index: 369
Gold SQL: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
schema_links: [Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID), Paragraphs.Document_ID = Documents.Document_ID]
Correct: 0

index: 370
Gold SQL: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
schema_links: [Documents.Document_ID, Documents.Document_Name, Paragraphs.Paragraph_ID, Documents.Document_ID = Paragraphs.Document_ID, COUNT(Paragraphs.Paragraph_ID)]
Correct: 0

index: 371
Gold SQL: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
schema_links: [Documents.Document_ID,Paragraphs.Document_ID,2]
Correct: 1

index: 372
Gold SQL: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
schema_links: [Documents.Document_ID, Paragraphs.Document_ID = Documents.Document_ID, Paragraphs.*]
Correct: 1

index: 373
Gold SQL: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID), Paragraphs.Document_ID = Documents.Document_ID]
Correct: 0

index: 374
Gold SQL: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID)]
Correct: 0

index: 375
Gold SQL: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
schema_links: [Documents.Document_ID,COUNT(Paragraphs.Paragraph_ID),Paragraphs.Document_ID = Documents.Document_ID]
Correct: 0

index: 376
Gold SQL: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
schema_links: [Documents.Document_ID, Paragraphs.Document_ID]
Correct: 0

index: 377
Gold SQL: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
schema_links: [Documents.Document_ID, Paragraphs.Document_ID]
Correct: 1

index: 378
Gold SQL: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
schema_links: [Documents.Document_ID,Paragraphs.Document_ID]
Correct: 0

index: 379
Gold SQL: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
schema_links: [Documents.Document_ID, Paragraphs.Paragraph_Text, 'Brazil', 'Ireland']
Correct: 0

index: 380
Gold SQL: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
schema_links: [Documents.Document_ID,Paragraphs.Paragraph_Text,'Brazil','Ireland']
Correct: 1

index: 381
Gold SQL: SELECT count(*) FROM teacher
schema_links: [teacher.Teacher_ID]
Correct: 1

index: 382
Gold SQL: SELECT count(*) FROM teacher
schema_links: [teacher.Teacher_ID]
Correct: 1

index: 383
Gold SQL: SELECT Name FROM teacher ORDER BY Age ASC
schema_links: [teacher.Name, teacher.Age]
Correct: 1

index: 384
Gold SQL: SELECT Name FROM teacher ORDER BY Age ASC
schema_links: [teacher.Name,teacher.Age]
Correct: 1

index: 385
Gold SQL: SELECT Age ,  Hometown FROM teacher
schema_links: [teacher.Age, teacher.Hometown]
Correct: 1

index: 386
Gold SQL: SELECT Age ,  Hometown FROM teacher
schema_links: [teacher.Age, teacher.Hometown]
Correct: 1

index: 387
Gold SQL: select name from teacher where hometown != "little lever urban district"
schema_links: [teacher.Name, teacher.Hometown, 'Little Lever Urban District']
Correct: 0

index: 388
Gold SQL: select name from teacher where hometown != "little lever urban district"
schema_links: [teacher.Name, teacher.Hometown, 'Little Lever Urban District']
Correct: 0

index: 389
Gold SQL: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
schema_links: [teacher.Name, teacher.Age, 32, 33]
Correct: 1

index: 390
Gold SQL: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
schema_links: [teacher.Name, teacher.Age, 32, 33]
Correct: 1

index: 391
Gold SQL: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
schema_links: [teacher.Hometown,teacher.Age]
Correct: 1

index: 392
Gold SQL: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
schema_links: [teacher.Name, teacher.Age, teacher.Hometown]
Correct: 1

index: 393
Gold SQL: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
schema_links: [teacher.Hometown,teacher.Teacher_ID]
Correct: 1

index: 394
Gold SQL: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
schema_links: [teacher.Hometown,COUNT(teacher.Teacher_ID)]
Correct: 1

index: 395
Gold SQL: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
schema_links: [teacher.Hometown, teacher.*]
Correct: 0

index: 396
Gold SQL: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
schema_links: [teacher.Hometown]
Correct: 0

index: 397
Gold SQL: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
schema_links: [teacher.Hometown]
Correct: 1

index: 398
Gold SQL: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
schema_links: [teacher.Hometown,teacher.Teacher_ID,2]
Correct: 1

index: 399
Gold SQL: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
schema_links: [teacher.Name, course.Course, course_arrange.Teacher_ID = teacher.Teacher_ID, course_arrange.Course_ID = course.Course_ID]
Correct: 1

index: 400
Gold SQL: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
schema_links: [teacher.Name, course.Course, course.Course_ID = course_arrange.Course_ID, teacher.Teacher_ID = course_arrange.Teacher_ID]
Correct: 1

index: 401
Gold SQL: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
schema_links: [teacher.Name, course.Course, course_arrange.Teacher_ID = teacher.Teacher_ID, course_arrange.Course_ID = course.Course_ID]
Correct: 1

index: 402
Gold SQL: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
schema_links: [teacher.Name, course.Course, course_arrange.Teacher_ID = teacher.Teacher_ID, course_arrange.Course_ID = course.Course_ID]
Correct: 0

index: 403
Gold SQL: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
schema_links: [teacher.Name, course.Course_ID = course_arrange.Course_ID, course_arrange.Teacher_ID = teacher.Teacher_ID, math]
Correct: 0

index: 404
Gold SQL: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
schema_links: [teacher.Name, course_arrange.Teacher_ID = teacher.Teacher_ID, course_arrange.Course_ID = course.Course_ID, course.Course, 'math']
Correct: 0

index: 405
Gold SQL: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
schema_links: [teacher.Name, course_arrange.Teacher_ID = teacher.Teacher_ID]
Correct: 1

index: 406
Gold SQL: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
schema_links: [teacher.Name,course_arrange.Teacher_ID = teacher.Teacher_ID,COUNT(course_arrange.Course_ID)]
Correct: 1

index: 407
Gold SQL: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
schema_links: [teacher.Name, course_arrange.Course_ID, course_arrange.Teacher_ID, 2]
Correct: 1

index: 408
Gold SQL: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
schema_links: [teacher.Name, course_arrange.Teacher_ID]
Correct: 1

index: 409
Gold SQL: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
schema_links: [teacher.Name,course_arrange.Teacher_ID = teacher.Teacher_ID]
Correct: 1

index: 410
Gold SQL: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
schema_links: [teacher.Name,teacher.Teacher_ID = course_arrange.Teacher_ID]
Correct: 1

index: 411
Gold SQL: SELECT count(*) FROM visitor WHERE age  <  30
schema_links: [visitor.*,visitor.Age,30]
Correct: 1

index: 412
Gold SQL: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC
schema_links: [visitor.Name, visitor.Level_of_membership, 4]
Correct: 1

index: 413
Gold SQL: SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4
schema_links: [visitor.Age,visitor.Level_of_membership,4]
Correct: 1

index: 414
Gold SQL: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
schema_links: [visitor.Name, visitor.Level_of_membership, visitor.Level_of_membership > 4, visitor.Age]
Correct: 0

index: 415
Gold SQL: SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1
schema_links: [museum.Museum_ID, museum.Name, museum.Num_of_Staff]
Correct: 1

index: 416
Gold SQL: SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009
schema_links: [museum.Num_of_Staff,museum.*,museum.Open_Year,2009]
Correct: 1

index: 417
Gold SQL: SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'
schema_links: [museum.Open_Year,museum.Num_of_Staff,museum.Name,'Plaza Museum']
Correct: 1

index: 418
Gold SQL: SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)
schema_links: [museum.Name, museum.Num_of_Staff, museum.Open_Year, 2010]
Correct: 1

index: 419
Gold SQL: SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1
schema_links: [visitor.ID, visitor.Name, visitor.Age, visit.visitor_ID = visitor.ID, more than once]
Correct: 1

index: 420
Gold SQL: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1
schema_links: [visitor.ID, visitor.Name, visitor.Level_of_membership, visit.Total_spent, visit.visitor_ID = visitor.ID, visit.Museum_ID = museum.Museum_ID]
Correct: 0

index: 421
Gold SQL: SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1
schema_links: [museum.Museum_ID, museum.Name, visit.Museum_ID]
Correct: 1

index: 422
Gold SQL: SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)
schema_links: [museum.Name,visit.Museum_ID = museum.Museum_ID]
Correct: 1

index: 423
Gold SQL: SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1
schema_links: [visitor.Name, visitor.Age, visit.Num_of_Ticket, visit.visitor_ID = visitor.ID]
Correct: 1

index: 424
Gold SQL: SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit
schema_links: [visit.Num_of_Ticket]
Correct: 1

index: 425
Gold SQL: SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1
schema_links: [SUM(visit.Total_spent), visit.Total_spent, visitor.Level_of_membership, visitor.ID, visit.visitor_ID = visitor.ID, visitor.Level_of_membership = 1]
Correct: 0

index: 426
Gold SQL: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011
schema_links: [visitor.Name, museum.Open_Year, visit.Museum_ID = museum.Museum_ID, visit.visitor_ID = visitor.ID, 2009, 2011]
Correct: 1

index: 427
Gold SQL: SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)
schema_links: [visitor.*, visit.visitor_ID, museum.Museum_ID = visit.Museum_ID, museum.Open_Year, 2010]
Correct: 1

index: 428
Gold SQL: SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008
schema_links: [museum.Museum_ID, museum.Open_Year, museum.Open_Year, 2013, 2008]
Correct: 1

index: 429
Gold SQL: SELECT count(*) FROM players
schema_links: [players.player_id]
Correct: 1

index: 430
Gold SQL: SELECT count(*) FROM players
schema_links: [players.*]
Correct: 1

index: 431
Gold SQL: SELECT count(*) FROM matches
schema_links: [matches.*]
Correct: 1

index: 432
Gold SQL: SELECT count(*) FROM matches
schema_links: [matches.*]
Correct: 1

index: 433
Gold SQL: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
schema_links: [players.first_name, players.birth_date, players.country_code, 'USA']
Correct: 1

index: 434
Gold SQL: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
schema_links: [players.first_name, players.birth_date, players.country_code, 'USA']
Correct: 1

index: 435
Gold SQL: SELECT avg(loser_age) ,  avg(winner_age) FROM matches
schema_links: [matches.loser_age, matches.winner_age, matches.winner_id = players.player_id, matches.loser_id = players.player_id, matches.*]
Correct: 1

index: 436
Gold SQL: SELECT avg(loser_age) ,  avg(winner_age) FROM matches
schema_links: [players.birth_date, matches.loser_age, matches.winner_age, matches.winner_id = players.player_id, matches.loser_id = players.player_id]
Correct: 0

index: 437
Gold SQL: SELECT avg(winner_rank) FROM matches
schema_links: [rankings.ranking, matches.winner_id = players.player_id]
Correct: 0

index: 438
Gold SQL: SELECT avg(winner_rank) FROM matches
schema_links: [rankings.ranking, matches.winner_id = players.player_id]
Correct: 0

index: 439
Gold SQL: SELECT min(loser_rank) FROM matches
schema_links: [matches.loser_rank, matches.loser_id = players.player_id, matches.*]
Correct: 0

index: 440
Gold SQL: SELECT min(loser_rank) FROM matches
schema_links: [matches.loser_rank,matches.*]
Correct: 0

index: 441
Gold SQL: SELECT count(DISTINCT country_code) FROM players
schema_links: [players.country_code,players.player_id]
Correct: 1

index: 442
Gold SQL: SELECT count(DISTINCT country_code) FROM players
schema_links: [players.country_code]
Correct: 1

index: 443
Gold SQL: SELECT count(DISTINCT loser_name) FROM matches
schema_links: [players.last_name,matches.loser_id = players.player_id]
Correct: 1

index: 444
Gold SQL: SELECT count(DISTINCT loser_name) FROM matches
schema_links: [matches.loser_name]
Correct: 1

index: 445
Gold SQL: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
schema_links: [matches.tourney_name,matches.*]
Correct: 1

index: 446
Gold SQL: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
schema_links: [matches.tourney_name, matches.*]
Correct: 1

index: 447
Gold SQL: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
schema_links: [players.first_name, players.last_name, matches.year, matches.winner_id = players.player_id, 2013, 2016]
Correct: 0

index: 448
Gold SQL: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
schema_links: [players.first_name, players.last_name, matches.winner_id, matches.year, 2013, 2016]
Correct: 0

index: 449
Gold SQL: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
schema_links: [matches.*, matches.year, 2013, 2016]
Correct: 1

index: 450
Gold SQL: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
schema_links: []
Correct: 1

index: 451
Gold SQL: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
schema_links: [players.country_code, players.first_name, matches.tourney_name, "WTA Championships", "Australian Open"]
Correct: 1

index: 452
Gold SQL: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
schema_links: [players.first_name, players.country_code, matches.tourney_name, matches.winner_id = players.player_id, "WTA Championships", "Australian Open"]
Correct: 0

index: 453
Gold SQL: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
schema_links: [players.first_name, players.country_code, players.birth_date]
Correct: 1

index: 454
Gold SQL: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
schema_links: [players.first_name, players.country_code, players.birth_date]
Correct: 1

index: 455
Gold SQL: SELECT first_name ,  last_name FROM players ORDER BY birth_date
schema_links: [players.first_name, players.last_name, players.birth_date]
Correct: 1

index: 456
Gold SQL: SELECT first_name ,  last_name FROM players ORDER BY birth_date
schema_links: [players.first_name, players.last_name, players.birth_date]
Correct: 0

index: 457
Gold SQL: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
schema_links: [players.first_name, players.last_name, players.hand, players.birth_date, 'L']
Correct: 1

index: 458
Gold SQL: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
schema_links: [players.first_name, players.last_name, players.hand, players.birth_date, left]
Correct: 0

index: 459
Gold SQL: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
schema_links: [players.first_name, players.country_code, rankings.tours, rankings.player_id = players.player_id]
Correct: 0

index: 460
Gold SQL: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
schema_links: [players.first_name, players.country_code, rankings.tours, rankings.player_id = players.player_id]
Correct: 1

index: 461
Gold SQL: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
schema_links: [matches.year]
Correct: 1

index: 462
Gold SQL: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
schema_links: [matches.year]
Correct: 1

index: 463
Gold SQL: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
schema_links: [players.first_name, players.last_name, rankings.ranking_points, matches.winner_id = players.player_id]
Correct: 0

index: 464
Gold SQL: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
schema_links: [players.first_name, players.last_name, matches.winner_id = players.player_id, rankings.ranking_points]
Correct: 0

index: 465
Gold SQL: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
schema_links: [players.first_name, players.last_name, rankings.ranking_points, matches.tourney_name, Australian Open]
Correct: 0

index: 466
Gold SQL: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
schema_links: [players.last_name, players.first_name, matches.winner_id = players.player_id, matches.tourney_name, rankings.ranking_points, matches.tourney_id = tournaments.tourney_id, Australian Open]
Correct: 0

index: 467
Gold SQL: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
schema_links: [players.first_name, players.last_name, matches.minutes, matches.loser_id = players.player_id, matches.winner_id = players.player_id]
Correct: 0

index: 468
Gold SQL: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
schema_links: [players.first_name, players.last_name, matches.minutes, matches.winner_id = players.player_id, matches.loser_id = players.player_id]
Correct: 0

index: 469
Gold SQL: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
schema_links: [rankings.ranking, players.first_name, rankings.player_id = players.player_id]
Correct: 1

index: 470
Gold SQL: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
schema_links: [players.first_name, rankings.ranking]
Correct: 1

index: 471
Gold SQL: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
schema_links: [rankings.ranking_points,players.first_name,rankings.player_id = players.player_id]
Correct: 1

index: 472
Gold SQL: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
schema_links: [players.first_name,rankings.ranking_points,rankings.player_id = players.player_id]
Correct: 1

index: 473
Gold SQL: SELECT count(*) ,  country_code FROM players GROUP BY country_code
schema_links: [players.country_code]
Correct: 0

index: 474
Gold SQL: SELECT count(*) ,  country_code FROM players GROUP BY country_code
schema_links: [players.*, players.country_code]
Correct: 1

index: 475
Gold SQL: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
schema_links: [players.country_code, players.*]
Correct: 1

index: 476
Gold SQL: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
schema_links: [players.country_code,players.*]
Correct: 1

index: 477
Gold SQL: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
schema_links: [players.country_code, players.player_id, 50]
Correct: 1

index: 478
Gold SQL: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
schema_links: [players.country_code,COUNT(players.player_id),50]
Correct: 1

index: 479
Gold SQL: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
schema_links: [rankings.tours, rankings.ranking_date, rankings.player_id = players.player_id]
Correct: 1

index: 480
Gold SQL: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
schema_links: [rankings.tours, rankings.ranking_date]
Correct: 1

index: 481
Gold SQL: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
schema_links: [matches.*, matches.year]
Correct: 1

index: 482
Gold SQL: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
schema_links: [matches.*, matches.year]
Correct: 1

index: 483
Gold SQL: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
schema_links: [players.first_name, players.last_name, rankings.ranking, matches.winner_id = players.player_id]
Correct: 0

index: 484
Gold SQL: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
schema_links: [players.first_name, players.last_name, rankings.ranking, matches.winner_id = players.player_id]
Correct: 0

index: 485
Gold SQL: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
schema_links: [players.player_id, matches.tourney_name, players.hand, matches.winner_id = players.player_id, "WTA Championships", "L"]
Correct: 0

index: 486
Gold SQL: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
schema_links: [players.player_id, players.hand, matches.tourney_name, matches.winner_id = players.player_id, WTA Championships, Left]
Correct: 0

index: 487
Gold SQL: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
schema_links: [players.first_name, players.country_code, players.birth_date, rankings.ranking_points, matches.winner_id = players.player_id, rankings.player_id = players.player_id]
Correct: 0

index: 488
Gold SQL: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
schema_links: [players.first_name, players.country_code, players.birth_date, matches.winner_rank_points, matches.winner_id = players.player_id]
Correct: 0

index: 489
Gold SQL: SELECT count(*) ,  hand FROM players GROUP BY hand
schema_links: [players.*, players.hand]
Correct: 1

index: 490
Gold SQL: SELECT count(*) ,  hand FROM players GROUP BY hand
schema_links: [players.*,players.hand]
Correct: 1

index: 491
Gold SQL: SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'
schema_links: [ship.*,ship.disposition_of_ship,'Captured']
Correct: 1

index: 492
Gold SQL: SELECT name ,  tonnage FROM ship ORDER BY name DESC
schema_links: [ship.name, ship.tonnage, ORDER BY ship.name DESC]
Correct: 1

index: 493
Gold SQL: SELECT name ,  date FROM battle
schema_links: [battle.name, battle.date, battle.result]
Correct: 0

index: 494
Gold SQL: SELECT max(killed) ,  min(killed) FROM death
schema_links: [death.killed,death.caused_by_ship_id = ship.id]
Correct: 1

index: 495
Gold SQL: SELECT avg(injured) FROM death
schema_links: [death.injured,death.caused_by_ship_id = ship.id]
Correct: 1

index: 496
Gold SQL: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
schema_links: [death.note, death.killed, death.injured, ship.id, ship.tonnage, death.caused_by_ship_id = ship.id, ship.tonnage = 't']
Correct: 0

index: 497
Gold SQL: SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'
schema_links: [battle.name, battle.result, battle.bulgarian_commander != 'Boril']
Correct: 1

index: 498
Gold SQL: SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'
schema_links: [battle.id, battle.name, ship.name, ship.ship_type, ship.lost_in_battle, 'Brig']
Correct: 1

index: 499
Gold SQL: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10
schema_links: [battle.id, battle.name, death.killed, ship.lost_in_battle = battle.id, death.caused_by_ship_id = ship.id, 10]
Correct: 0

index: 500
Gold SQL: SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1
schema_links: [ship.id, ship.name, death.killed, death.injured, death.caused_by_ship_id = ship.id]
Correct: 0

index: 501
Gold SQL: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'
schema_links: [battle.name, battle.bulgarian_commander, battle.latin_commander, 'Kaloyan', 'Baldwin I']
Correct: 1

index: 502
Gold SQL: SELECT count(DISTINCT RESULT) FROM battle
schema_links: [battle.result]
Correct: 1

index: 503
Gold SQL: SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );
schema_links: [battle.*,ship.tonnage,ship.lost_in_battle = battle.id,225]
Correct: 1

index: 504
Gold SQL: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'
schema_links: [battle.name, battle.date, ship.name, ship.lost_in_battle = battle.id, 'Lettice', 'HMS Atalanta']
Correct: 0

index: 505
Gold SQL: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
schema_links: [battle.name, battle.result, battle.bulgarian_commander, ship.location, 'English Channel']
Correct: 1

index: 506
Gold SQL: SELECT note FROM death WHERE note LIKE '%East%'
schema_links: [death.note,'East']
Correct: 1

index: 507
Gold SQL: SELECT line_1 ,  line_2 FROM addresses
schema_links: [Addresses.*, Addresses.line_1, Addresses.line_2]
Correct: 1

index: 508
Gold SQL: SELECT line_1 ,  line_2 FROM addresses
schema_links: [Addresses.line_1, Addresses.line_2]
Correct: 1

index: 509
Gold SQL: SELECT count(*) FROM Courses
schema_links: [Courses.*]
Correct: 1

index: 510
Gold SQL: SELECT count(*) FROM Courses
schema_links: [Courses.course_id]
Correct: 1

index: 511
Gold SQL: SELECT course_description FROM Courses WHERE course_name  =  'math'
schema_links: [Courses.course_description,Courses.*]
Correct: 0

index: 512
Gold SQL: SELECT course_description FROM Courses WHERE course_name  =  'math'
schema_links: [Courses.course_description,Courses.course_name,Courses.course_id = Sections.course_id,'Math']
Correct: 1

index: 513
Gold SQL: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
schema_links: [Addresses.zip_postcode,Addresses.city,'Port Chelsea']
Correct: 1

index: 514
Gold SQL: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
schema_links: [Addresses.zip_postcode,Addresses.city,'Port Chelsea']
Correct: 1

index: 515
Gold SQL: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Departments.department_name, Departments.department_id, Degree_Programs.department_id = Departments.department_id]
Correct: 1

index: 516
Gold SQL: select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1
schema_links: [Departments.department_name, Departments.department_id, Degree_Programs.department_id]
Correct: 0

index: 517
Gold SQL: SELECT count(DISTINCT department_id) FROM Degree_Programs
schema_links: [Departments.department_id,Degree_Programs.department_id = Departments.department_id]
Correct: 1

index: 518
Gold SQL: SELECT count(DISTINCT department_id) FROM Degree_Programs
schema_links: [Departments.department_id, Degree_Programs.department_id]
Correct: 1

index: 519
Gold SQL: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
schema_links: [Degree_Programs.degree_summary_name,Degree_Programs.department_id = Departments.department_id]
Correct: 1

index: 520
Gold SQL: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
schema_links: [Degree_Programs.degree_summary_name, Degree_Programs.department_id = Departments.department_id]
Correct: 1

index: 521
Gold SQL: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
schema_links: [Degree_Programs.degree_program_id, Degree_Programs.department_id, 'engineering']
Correct: 1

index: 522
Gold SQL: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
schema_links: [Degree_Programs.degree_program_id,Degree_Programs.department_id = Departments.department_id,Departments.department_name,'engineering']
Correct: 1

index: 523
Gold SQL: SELECT section_name ,  section_description FROM Sections
schema_links: [Sections.section_name, Sections.section_description]
Correct: 1

index: 524
Gold SQL: SELECT section_name ,  section_description FROM Sections
schema_links: [Sections.section_name, Sections.section_description]
Correct: 1

index: 525
Gold SQL: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
schema_links: [Courses.course_id, Courses.course_name, Sections.course_id = Courses.course_id, Sections.*]
Correct: 1

index: 526
Gold SQL: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
schema_links: [Courses.course_name, Courses.course_id, Sections.course_id, 2]
Correct: 0

index: 527
Gold SQL: SELECT section_name FROM Sections ORDER BY section_name DESC
schema_links: [Sections.section_name]
Correct: 1

index: 528
Gold SQL: SELECT section_name FROM Sections ORDER BY section_name DESC
schema_links: [Sections.section_name]
Correct: 1

index: 529
Gold SQL: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Semesters.semester_id, Semesters.semester_name, Student_Enrolment.semester_id]
Correct: 0

index: 530
Gold SQL: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Semesters.*,Student_Enrolment.semester_id = Semesters.semester_id, COUNT(Student_Enrolment.student_id)]
Correct: 1

index: 531
Gold SQL: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
schema_links: [Departments.department_description, Departments.department_name, 'the computer']
Correct: 0

index: 532
Gold SQL: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
schema_links: [Departments.department_description, Departments.department_name, 'computer']
Correct: 1

index: 533
Gold SQL: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
schema_links: [Students.first_name, Students.middle_name, Students.last_name, Student_Enrolment.student_id, Student_Enrolment.semester_id, 2]
Correct: 0

index: 534
Gold SQL: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
schema_links: [Students.student_id, Students.first_name, Students.middle_name, Students.last_name, Student_Enrolment.degree_program_id, Student_Enrolment.semester_id, 2]
Correct: 0

index: 535
Gold SQL: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
schema_links: [Students.first_name, Students.middle_name, Students.last_name, Degree_Programs.degree_summary_name, Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id, Student_Enrolment.student_id = Students.student_id, 'Bachelor']
Correct: 1

index: 536
Gold SQL: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
schema_links: [Students.first_name, Students.middle_name, Students.last_name, Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id, Degree_Programs.degree_summary_name, Student_Enrolment.student_id = Students.student_id, "Bachelors"]
Correct: 0

index: 537
Gold SQL: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
schema_links: [Degree_Programs.degree_summary_name, Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id, Student_Enrolment.*]
Correct: 0

index: 538
Gold SQL: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
schema_links: [Degree_Programs.degree_summary_name, Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id, Student_Enrolment.*]
Correct: 0

index: 539
Gold SQL: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Degree_Programs.degree_program_id, Degree_Programs.degree_summary_name, Student_Enrolment.degree_program_id]
Correct: 0

index: 540
Gold SQL: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Degree_Programs.degree_program_id, Degree_Programs.degree_summary_description, COUNT(Student_Enrolment.student_id)]
Correct: 0

index: 541
Gold SQL: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Students.student_id, Students.first_name, Students.middle_name, Students.last_name, COUNT(Student_Enrolment.student_enrolment_id), Student_Enrolment.degree_program_id, Student_Enrolment.student_id = Students.student_id]
Correct: 0

index: 542
Gold SQL: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Students.first_name, Students.middle_name, Students.last_name, Students.student_id, COUNT(Student_Enrolment.student_enrolment_id), Student_Enrolment.student_id = Students.student_id, Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id]
Correct: 0

index: 543
Gold SQL: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
schema_links: [Semesters.semester_name, Semesters.semester_id = Student_Enrolment.semester_id]
Correct: 1

index: 544
Gold SQL: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
schema_links: [Semesters.semester_name, Student_Enrolment.semester_id = Semesters.semester_id]
Correct: 1

index: 545
Gold SQL: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
schema_links: [Courses.course_name, Student_Enrolment_Courses.course_id = Courses.course_id]
Correct: 1

index: 546
Gold SQL: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
schema_links: [Courses.course_name,Student_Enrolment_Courses.course_id = Courses.course_id]
Correct: 1

index: 547
Gold SQL: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
schema_links: [Courses.course_name, Student_Enrolment_Courses.course_id = Courses.course_id, COUNT(Student_Enrolment_Courses.student_enrolment_id)]
Correct: 0

index: 548
Gold SQL: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
schema_links: [Courses.course_name, Student_Enrolment_Courses.course_id = Courses.course_id]
Correct: 0

index: 549
Gold SQL: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
schema_links: [Students.last_name,Addresses.state_province_county,'North Carolina',Student_Enrolment.student_id = Students.student_id]
Correct: 0

index: 550
Gold SQL: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
schema_links: [Students.last_name,Students.current_address_id = Addresses.address_id,Addresses.state_province_county,'North Carolina',Student_Enrolment.student_id = Students.student_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id]
Correct: 0

index: 551
Gold SQL: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
schema_links: [Transcripts.transcript_date, Transcripts.transcript_id, Transcript_Contents.student_course_id, Transcript_Contents.transcript_id = Transcripts.transcript_id, 2]
Correct: 1

index: 552
Gold SQL: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
schema_links: [Transcripts.transcript_id, Transcripts.transcript_date, Transcript_Contents.transcript_id = Transcripts.transcript_id, Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id, Student_Enrolment_Courses.student_enrolment_id, 2]
Correct: 1

index: 553
Gold SQL: SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'
schema_links: [Students.cell_mobile_number,Students.first_name,Students.last_name,'Timmothy','Ward']
Correct: 1

index: 554
Gold SQL: select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'
schema_links: [Students.cell_mobile_number, Students.first_name = 'Timmothy', Students.last_name = 'Ward']
Correct: 0

index: 555
Gold SQL: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
schema_links: [Students.date_first_registered, Students.first_name, Students.middle_name, Students.last_name]
Correct: 1

index: 556
Gold SQL: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
schema_links: [Students.first_name, Students.middle_name, Students.last_name]
Correct: 1

index: 557
Gold SQL: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
schema_links: [Students.first_name, Students.middle_name, Students.last_name, Transcripts.transcript_date, Student_Enrolment.student_id]
Correct: 0

index: 558
Gold SQL: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
schema_links: [Students.first_name, Students.middle_name, Students.last_name, Transcripts.transcript_date, Transcripts.transcript_id = Transcript_Contents.transcript_id, Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id, Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id, Student_Enrolment.student_id = Students.student_id]
Correct: 0

index: 559
Gold SQL: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
schema_links: [Students.first_name, Students.current_address_id = Addresses.address_id, Students.permanent_address_id = Addresses.address_id]
Correct: 1

index: 560
Gold SQL: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
schema_links: [Students.first_name, Students.permanent_address_id = Addresses.address_id, Students.current_address_id = Addresses.address_id]
Correct: 1

index: 561
Gold SQL: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Addresses.address_id, Addresses.line_1, Addresses.line_2, Addresses.line_3]
Correct: 0

index: 562
Gold SQL: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Addresses.address_id, Addresses.line_1, Addresses.line_2, Students.current_address_id = Addresses.address_id, Students.permanent_address_id = Addresses.address_id]
Correct: 0

index: 563
Gold SQL: SELECT avg(transcript_date) FROM Transcripts
schema_links: [Transcripts.transcript_date]
Correct: 1

index: 564
Gold SQL: SELECT avg(transcript_date) FROM Transcripts
schema_links: [Transcripts.transcript_date]
Correct: 1

index: 565
Gold SQL: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
schema_links: [Transcripts.transcript_date,Transcripts.other_details]
Correct: 1

index: 566
Gold SQL: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
schema_links: [Transcripts.transcript_date,Transcripts.other_details]
Correct: 1

index: 567
Gold SQL: SELECT count(*) FROM Transcripts
schema_links: [Transcripts.*]
Correct: 1

index: 568
Gold SQL: SELECT count(*) FROM Transcripts
schema_links: [Transcripts.transcript_id]
Correct: 1

index: 569
Gold SQL: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
schema_links: [Transcripts.transcript_date]
Correct: 1

index: 570
Gold SQL: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
schema_links: [Transcripts.transcript_date]
Correct: 1

index: 571
Gold SQL: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
schema_links: [COUNT(Transcript_Contents.transcript_id),Student_Enrolment_Courses.student_enrolment_id,Student_Enrolment.student_enrolment_id,Transcript_Contents.student_course_id,Student_Enrolment_Courses.student_course_id]
Correct: 0

index: 572
Gold SQL: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
schema_links: [COUNT(Transcript_Contents.transcript_id),Student_Enrolment_Courses.student_enrolment_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]
Correct: 0

index: 573
Gold SQL: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
schema_links: [Transcripts.transcript_date,Transcripts.transcript_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.*]
Correct: 1

index: 574
Gold SQL: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
schema_links: [Transcripts.transcript_date, Transcripts.transcript_id, COUNT(Transcript_Contents.student_course_id)]
Correct: 0

index: 575
Gold SQL: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
schema_links: [Semesters.semester_name, Student_Enrolment.semester_id, Degree_Programs.degree_summary_name, Student_Enrolment.degree_program_id, "Master", "Bachelor"]
Correct: 0

index: 576
Gold SQL: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
schema_links: [Semesters.semester_id, Student_Enrolment.degree_program_id, "Masters", "Bachelors"]
Correct: 0

index: 577
Gold SQL: SELECT count(DISTINCT current_address_id) FROM Students
schema_links: [Addresses.address_id, Students.current_address_id]
Correct: 1

index: 578
Gold SQL: SELECT count(DISTINCT current_address_id) FROM Students
schema_links: [Addresses.* , Students.permanent_address_id = Addresses.address_id, Students.current_address_id = Addresses.address_id]
Correct: 0

index: 579
Gold SQL: SELECT other_student_details FROM Students ORDER BY other_student_details DESC
schema_links: []
Correct: 0

index: 580
Gold SQL: SELECT other_student_details FROM Students ORDER BY other_student_details DESC
schema_links: [Students.other_student_details, Students.first_name, Students.middle_name, Students.last_name, Students.current_address_id = Addresses.address_id, Students.permanent_address_id = Addresses.address_id]
Correct: 0

index: 581
Gold SQL: SELECT section_description FROM Sections WHERE section_name  =  'h'
schema_links: [Sections.*]
Correct: 0

index: 582
Gold SQL: SELECT section_description FROM Sections WHERE section_name  =  'h'
schema_links: [Sections.section_description,Sections.section_name,'h']
Correct: 1

index: 583
Gold SQL: select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
schema_links: [Students.first_name, Students.permanent_address_id = Addresses.address_id, Addresses.country, Students.cell_mobile_number]
Correct: 0

index: 584
Gold SQL: select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
schema_links: [Students.first_name, Students.permanent_address_id = Addresses.address_id, Addresses.country = 'Haiti', Students.cell_mobile_number = '09700166582']
Correct: 0

index: 585
Gold SQL: SELECT Title FROM Cartoon ORDER BY title
schema_links: [Cartoon.Title, Cartoon.Channel = TV_Channel.id]
Correct: 1

index: 586
Gold SQL: SELECT Title FROM Cartoon ORDER BY title
schema_links: [Cartoon.Title]
Correct: 0

index: 587
Gold SQL: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
schema_links: [Cartoon.*, Cartoon.Directed_by, 'Ben Jones']
Correct: 0

index: 588
Gold SQL: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
schema_links: [Cartoon.Title, Cartoon.Directed_by, 'Ben Jones']
Correct: 1

index: 589
Gold SQL: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
schema_links: [Cartoon.*, Cartoon.Written_by, "Joseph Kuhr"]
Correct: 1

index: 590
Gold SQL: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
schema_links: [Cartoon.id, Cartoon.Written_by, "Joseph Kuhr"]
Correct: 1

index: 591
Gold SQL: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
schema_links: [Cartoon.Title, Cartoon.Directed_by, Cartoon.Original_air_date, Cartoon.Channel = TV_Channel.id]
Correct: 1

index: 592
Gold SQL: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
schema_links: [Cartoon.Title, Cartoon.Directed_by, Cartoon.Original_air_date]
Correct: 1

index: 593
Gold SQL: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
schema_links: [Cartoon.Title, Cartoon.Directed_by, 'Ben Jones', 'Brandon Vietti']
Correct: 1

index: 594
Gold SQL: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
schema_links: [Cartoon.Title, Cartoon.Directed_by, Ben Jones, Brandon Vietti]
Correct: 1

index: 595
Gold SQL: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
schema_links: [TV_Channel.Country, COUNT(TV_Channel.id)]
Correct: 1

index: 596
Gold SQL: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
schema_links: [TV_Channel.Country]
Correct: 0

index: 597
Gold SQL: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
schema_links: [TV_Channel.series_name, TV_Channel.Content]
Correct: 1

index: 598
Gold SQL: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
schema_links: [TV_series.series_name,TV_Channel.Content]
Correct: 0

index: 599
Gold SQL: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
schema_links: [TV_Channel.Content,TV_Channel.series_name,'Sky Radio']
Correct: 1

index: 600
Gold SQL: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
schema_links: [TV_Channel.Content,TV_Channel.series_name,TV_Channel.id = TV_series.Channel,'Sky Radio']
Correct: 0

index: 601
Gold SQL: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
schema_links: [TV_Channel.Package_Option, TV_Channel.series_name, 'Sky Radio']
Correct: 1

index: 602
Gold SQL: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
schema_links: [TV_Channel.Package_Option,TV_Channel.series_name,TV_Channel.id = TV_series.Channel,'Sky Radio']
Correct: 1

index: 603
Gold SQL: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
schema_links: [TV_Channel.id, English]
Correct: 1

index: 604
Gold SQL: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
schema_links: [TV_Channel.Language,'English']
Correct: 1

index: 605
Gold SQL: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
schema_links: [TV_Channel.Language, COUNT(TV_Channel.id)]
Correct: 1

index: 606
Gold SQL: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
schema_links: [TV_Channel.Language, Cartoon.Channel, TV_Channel.id, TV_series.Channel]
Correct: 0

index: 607
Gold SQL: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
schema_links: [TV_Channel.Language]
Correct: 1

index: 608
Gold SQL: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
schema_links: [TV_Channel.Language]
Correct: 1

index: 609
Gold SQL: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
schema_links: [TV_Channel.id,Cartoon.Channel = TV_Channel.id,'The Rise of the Blue Beetle!',TV_Channel.series_name]
Correct: 1

index: 610
Gold SQL: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
schema_links: [TV_series.series_name, Cartoon.Title, TV_series.Channel = TV_Channel.id, Cartoon.Channel = TV_Channel.id, 'The Rise of the Blue Beetle']
Correct: 0

index: 611
Gold SQL: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
schema_links: [Cartoon.Title, Cartoon.Channel = TV_Channel.id, TV_Channel.series_name, 'Sky Radio']
Correct: 1

index: 612
Gold SQL: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
schema_links: [Cartoon.Title,Cartoon.Channel = TV_Channel.id,TV_Channel.series_name,'Sky Radio']
Correct: 0

index: 613
Gold SQL: SELECT Episode FROM TV_series ORDER BY rating
schema_links: [TV_series.Episode,TV_series.Rating,TV_series.Channel = TV_Channel.id]
Correct: 0

index: 614
Gold SQL: SELECT Episode FROM TV_series ORDER BY rating
schema_links: [TV_series.*,TV_series.Rating,TV_series.Channel = TV_Channel.id]
Correct: 0

index: 615
Gold SQL: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
schema_links: [TV_series.Rating, TV_series.Episode, TV_series.Channel = TV_Channel.id]
Correct: 1

index: 616
Gold SQL: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
schema_links: [TV_series.Episode, TV_series.Rating, TV_series.Channel = TV_Channel.id]
Correct: 1

index: 617
Gold SQL: SELECT max(SHARE) , min(SHARE) FROM TV_series;
schema_links: [TV_series.Share]
Correct: 1

index: 618
Gold SQL: SELECT max(SHARE) , min(SHARE) FROM TV_series;
schema_links: [TV_series.Share]
Correct: 1

index: 619
Gold SQL: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
schema_links: [TV_series.Air_Date,TV_series.Episode,TV_series.Channel = TV_Channel.id,'A Love of a Lifetime']
Correct: 0

index: 620
Gold SQL: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
schema_links: [TV_series.Air_Date,TV_series.Episode,'A Love of a Lifetime']
Correct: 1

index: 621
Gold SQL: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
schema_links: [TV_series.Weekly_Rank, TV_series.Episode, 'A Love of a Lifetime']
Correct: 1

index: 622
Gold SQL: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
schema_links: [TV_series.Weekly_Rank,TV_series.Episode,'A Love of a Lifetime']
Correct: 1

index: 623
Gold SQL: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
schema_links: [TV_Channel.id, TV_series.Episode, TV_Channel.series_name, TV_series.Channel]
Correct: 1

index: 624
Gold SQL: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
schema_links: [TV_series.series_name,TV_series.Episode,'A Love of a Lifetime']
Correct: 0

index: 625
Gold SQL: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
schema_links: [TV_series.Episode, TV_series.Channel = TV_Channel.id, TV_Channel.series_name, 'Sky Radio']
Correct: 1

index: 626
Gold SQL: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
schema_links: []
Correct: 0

index: 627
Gold SQL: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
schema_links: [Cartoon.id, Cartoon.Directed_by]
Correct: 0

index: 628
Gold SQL: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
schema_links: [Cartoon.id,Cartoon.Directed_by]
Correct: 1

index: 629
Gold SQL: select production_code ,  channel from cartoon order by original_air_date desc limit 1
schema_links: [Cartoon.Production_code,Cartoon.Channel = TV_Channel.id,TV_Channel.series_name,TV_series.Original_air_date]
Correct: 0

index: 630
Gold SQL: select production_code ,  channel from cartoon order by original_air_date desc limit 1
schema_links: [Cartoon.Production_code, Cartoon.Channel, Cartoon.Original_air_date, Cartoon.Channel = TV_Channel.id]
Correct: 1

index: 631
Gold SQL: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
schema_links: [TV_Channel.Package_Option, TV_series.series_name, TV_Channel.Hight_definition_TV, true]
Correct: 0

index: 632
Gold SQL: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
schema_links: [TV_Channel.Package_Option,TV_series.series_name,TV_Channel.Hight_definition_TV,true]
Correct: 0

index: 633
Gold SQL: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
schema_links: [TV_Channel.Country,Cartoon.Written_by,Cartoon.Channel = TV_Channel.id,Todd Casey]
Correct: 1

index: 634
Gold SQL: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
schema_links: [TV_Channel.Country, Cartoon.Channel = TV_Channel.id, Cartoon.Written_by, Todd Casey]
Correct: 1

index: 635
Gold SQL: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
schema_links: [TV_Channel.Country,TV_Channel.id = Cartoon.Channel,Cartoon.Written_by,'Todd Casey']
Correct: 1

index: 636
Gold SQL: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
schema_links: [TV_Channel.Country,Cartoon.Written_by,Cartoon.Channel = TV_Channel.id,'Todd Casey']
Correct: 0

index: 637
Gold SQL: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
schema_links: [TV_series.series_name, TV_Channel.Country, Cartoon.Directed_by, Ben Jones, Michael Chang]
Correct: 0

index: 638
Gold SQL: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
schema_links: [TV_Channel.series_name, TV_Channel.Country, Cartoon.Directed_by, Ben Jones, Michael Chang]
Correct: 0

index: 639
Gold SQL: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
schema_links: [TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country, TV_Channel.Language != "English"]
Correct: 1

index: 640
Gold SQL: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
schema_links: [TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country, TV_Channel.*, TV_Channel.Language, 'English']
Correct: 1

index: 641
Gold SQL: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
schema_links: [TV_Channel.id, TV_Channel.Country, 2]
Correct: 1

index: 642
Gold SQL: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
schema_links: [TV_Channel.id, count(TV_series.id) > 2]
Correct: 0

index: 643
Gold SQL: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
schema_links: [TV_Channel.id, Cartoon.Directed_by, Ben Jones]
Correct: 1

index: 644
Gold SQL: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
schema_links: [TV_Channel.id,Cartoon.Directed_by,'Ben Jones']
Correct: 1

index: 645
Gold SQL: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
schema_links: [TV_Channel.Package_Option, TV_Channel.id = Cartoon.Channel, Cartoon.Directed_by, 'Ben Jones']
Correct: 1

index: 646
Gold SQL: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
schema_links: [TV_Channel.Package_Option,TV_Channel.*,Cartoon.Directed_by,'Ben Jones']
Correct: 1

index: 647
Gold SQL: SELECT count(*) FROM poker_player
schema_links: [COUNT(poker_player.Poker_Player_ID),poker_player.People_ID = people.People_ID]
Correct: 1

index: 648
Gold SQL: SELECT count(*) FROM poker_player
schema_links: [poker_player.*]
Correct: 1

index: 649
Gold SQL: SELECT Earnings FROM poker_player ORDER BY Earnings DESC
schema_links: [poker_player.Earnings, poker_player.People_ID = people.People_ID]
Correct: 1

index: 650
Gold SQL: SELECT Earnings FROM poker_player ORDER BY Earnings DESC
schema_links: [poker_player.Earnings, poker_player.People_ID = people.People_ID]
Correct: 1

index: 651
Gold SQL: SELECT Final_Table_Made ,  Best_Finish FROM poker_player
schema_links: [poker_player.Final_Table_Made, poker_player.Best_Finish, poker_player.People_ID = people.People_ID]
Correct: 1

index: 652
Gold SQL: SELECT Final_Table_Made ,  Best_Finish FROM poker_player
schema_links: [poker_player.Final_Table_Made, poker_player.Best_Finish, poker_player.People_ID = people.People_ID, poker_player.*]
Correct: 1

index: 653
Gold SQL: SELECT avg(Earnings) FROM poker_player
schema_links: [poker_player.Earnings]
Correct: 1

index: 654
Gold SQL: SELECT avg(Earnings) FROM poker_player
schema_links: [poker_player.Earnings, poker_player.People_ID = people.People_ID]
Correct: 1

index: 655
Gold SQL: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
schema_links: [poker_player.Money_Rank, poker_player.Earnings]
Correct: 1

index: 656
Gold SQL: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
schema_links: [poker_player.Money_Rank, poker_player.Earnings, poker_player.People_ID = people.People_ID]
Correct: 1

index: 657
Gold SQL: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
schema_links: [poker_player.Final_Table_Made,poker_player.Earnings,200000]
Correct: 1

index: 658
Gold SQL: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
schema_links: [poker_player.Final_Table_Made, poker_player.Earnings, 200000]
Correct: 1

index: 659
Gold SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
schema_links: [people.Name, poker_player.People_ID = people.People_ID]
Correct: 1

index: 660
Gold SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
schema_links: [people.Name]
Correct: 0

index: 661
Gold SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
schema_links: [people.Name, poker_player.Earnings, poker_player.People_ID = people.People_ID, 300000]
Correct: 1

index: 662
Gold SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
schema_links: [people.Name,poker_player.Earnings,poker_player.People_ID = people.People_ID,300000]
Correct: 1

index: 663
Gold SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
schema_links: [people.Name, poker_player.Final_Table_Made, ascending order]
Correct: 1

index: 664
Gold SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
schema_links: [people.Name, poker_player.Final_Table_Made, poker_player.People_ID = people.People_ID]
Correct: 1

index: 665
Gold SQL: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
schema_links: [people.Birth_Date, poker_player.Earnings, poker_player.People_ID = people.People_ID]
Correct: 1

index: 666
Gold SQL: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
schema_links: [people.Birth_Date, poker_player.Earnings, poker_player.People_ID = people.People_ID]
Correct: 1

index: 667
Gold SQL: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
schema_links: [poker_player.Money_Rank, people.Height]
Correct: 1

index: 668
Gold SQL: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
schema_links: [poker_player.Money_Rank,poker_player.Poker_Player_ID,poker_player.People_ID = people.People_ID,people.Height]
Correct: 1

index: 669
Gold SQL: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
schema_links: [poker_player.Earnings,poker_player.People_ID = people.People_ID,people.Height,200]
Correct: 1

index: 670
Gold SQL: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
schema_links: [poker_player.Earnings,poker_player.People_ID = people.People_ID,people.Height,200]
Correct: 1

index: 671
Gold SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
schema_links: [people.Name, poker_player.Earnings, poker_player.People_ID = people.People_ID]
Correct: 1

index: 672
Gold SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
schema_links: [people.Name, poker_player.Earnings]
Correct: 1

index: 673
Gold SQL: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
schema_links: [people.Nationality]
Correct: 1

index: 674
Gold SQL: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
schema_links: [people.Nationality]
Correct: 1

index: 675
Gold SQL: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
schema_links: [people.Nationality, poker_player.People_ID = people.People_ID]
Correct: 1

index: 676
Gold SQL: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
schema_links: [people.Nationality]
Correct: 1

index: 677
Gold SQL: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
schema_links: [people.Nationality, poker_player.People_ID = people.People_ID]
Correct: 1

index: 678
Gold SQL: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
schema_links: [people.Nationality, poker_player.People_ID = people.People_ID]
Correct: 1

index: 679
Gold SQL: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
schema_links: [people.Name, people.Birth_Date, poker_player.People_ID = people.People_ID]
Correct: 1

index: 680
Gold SQL: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
schema_links: [people.Name, people.Birth_Date]
Correct: 1

index: 681
Gold SQL: SELECT Name FROM people WHERE Nationality != "Russia"
schema_links: [people.Name, people.Nationality, 'Russia']
Correct: 1

index: 682
Gold SQL: SELECT Name FROM people WHERE Nationality != "Russia"
schema_links: [people.Name,people.Nationality,'Russia']
Correct: 1

index: 683
Gold SQL: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
schema_links: [people.Name,poker_player.Poker_Player_ID is null]
Correct: 1

index: 684
Gold SQL: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
schema_links: [people.Name,poker_player.People_ID = people.People_ID]
Correct: 1

index: 685
Gold SQL: SELECT count(DISTINCT Nationality) FROM people
schema_links: [people.Nationality]
Correct: 1

index: 686
Gold SQL: SELECT count(DISTINCT Nationality) FROM people
schema_links: [people.Nationality]
Correct: 1

index: 687
Gold SQL: SELECT count(*) FROM area_code_state
schema_links: [AREA_CODE_STATE.state]
Correct: 1

index: 688
Gold SQL: SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC
schema_links: [CONTESTANTS.contestant_number, CONTESTANTS.contestant_name]
Correct: 1

index: 689
Gold SQL: SELECT vote_id ,  phone_number ,  state FROM votes
schema_links: [VOTES.vote_id, VOTES.phone_number, VOTES.state]
Correct: 1

index: 690
Gold SQL: SELECT max(area_code) ,  min(area_code) FROM area_code_state
schema_links: [AREA_CODE_STATE.area_code]
Correct: 1

index: 691
Gold SQL: SELECT max(created) FROM votes WHERE state  =  'CA'
schema_links: [VOTES.created,VOTES.state,AREA_CODE_STATE.state,'CA']
Correct: 1

index: 692
Gold SQL: SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
schema_links: [CONTESTANTS.contestant_name,CONTESTANTS.contestant_name, 'Jessie Alloway']
Correct: 1

index: 693
Gold SQL: SELECT DISTINCT state ,  created FROM votes
schema_links: [VOTES.state, VOTES.created]
Correct: 1

index: 694
Gold SQL: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2
schema_links: [CONTESTANTS.contestant_number, CONTESTANTS.contestant_name, VOTES.contestant_number, 2]
Correct: 1

index: 695
Gold SQL: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1
schema_links: [CONTESTANTS.contestant_number, CONTESTANTS.contestant_name, VOTES.vote_id]
Correct: 0

index: 696
Gold SQL: SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'
schema_links: [COUNT(VOTES.vote_id),VOTES.state,AREA_CODE_STATE.state,'NY','CA']
Correct: 1

index: 697
Gold SQL: SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )
schema_links: [CONTESTANTS.contestant_number,VOTES.contestant_number]
Correct: 0

index: 698
Gold SQL: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1
schema_links: [AREA_CODE_STATE.area_code, VOTES.*]
Correct: 1

index: 699
Gold SQL: SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'
schema_links: [VOTES.created, VOTES.state, VOTES.phone_number, CONTESTANTS.contestant_name, VOTES.contestant_number = CONTESTANTS.contestant_number, 'Tabatha Gehling']
Correct: 1

index: 700
Gold SQL: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'
schema_links: [AREA_CODE_STATE.area_code, CONTESTANTS.contestant_name, VOTES.state, VOTES.contestant_number, 'Tabatha Gehling', 'Kelly Clauss']
Correct: 1

index: 701
Gold SQL: select contestant_name from contestants where contestant_name like "%al%"
schema_links: [CONTESTANTS.contestant_name,'Al']
Correct: 1

index: 702
Gold SQL: SELECT Name FROM country WHERE IndepYear  >  1950
schema_links: [country.Name, country.IndepYear, 1950]
Correct: 1

index: 703
Gold SQL: SELECT Name FROM country WHERE IndepYear  >  1950
schema_links: [country.Name, country.IndepYear, 1950]
Correct: 1

index: 704
Gold SQL: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
schema_links: [country.*, country.GovernmentForm, 'Republic']
Correct: 1

index: 705
Gold SQL: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
schema_links: [country.*, country.GovernmentForm, 'Republic']
Correct: 1

index: 706
Gold SQL: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
schema_links: [country.SurfaceArea, country.Region, "Caribbean"]
Correct: 1

index: 707
Gold SQL: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
schema_links: [country.SurfaceArea, country.Continent, 'Caribbean']
Correct: 0

index: 708
Gold SQL: SELECT Continent FROM country WHERE Name  =  "Anguilla"
schema_links: [country.Continent,city.CountryCode = country.Code,'Anguilla']
Correct: 1

index: 709
Gold SQL: SELECT Continent FROM country WHERE Name  =  "Anguilla"
schema_links: [country.Continent,city.CountryCode = country.Code,'Anguilla']
Correct: 0

index: 710
Gold SQL: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
schema_links: [country.Region, city.Name, city.CountryCode = country.Code, 'Kabul']
Correct: 1

index: 711
Gold SQL: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
schema_links: [country.Region, city.Name, city.CountryCode = country.Code, 'Kabul']
Correct: 1

index: 712
Gold SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
schema_links: [countrylanguage.Language, city.Name, city.CountryCode = country.Code, countrylanguage.CountryCode = country.Code, Aruba]
Correct: 0

index: 713
Gold SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
schema_links: [countrylanguage.Language, countrylanguage.Percentage, city.Name, city.CountryCode = country.Code, countrylanguage.CountryCode = country.Code, 'Aruba']
Correct: 0

index: 714
Gold SQL: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
schema_links: [country.Population,country.LifeExpectancy,city.CountryCode = country.Code,Brazil]
Correct: 1

index: 715
Gold SQL: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
schema_links: [country.Population,country.LifeExpectancy,city.CountryCode = country.Code,Brazil]
Correct: 0

index: 716
Gold SQL: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
schema_links: [country.Region,country.Population,country.Code = city.CountryCode,'Angola']
Correct: 0

index: 717
Gold SQL: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
schema_links: [country.Region,country.Population,country.Code = city.CountryCode,'Angola']
Correct: 0

index: 718
Gold SQL: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
schema_links: [country.LifeExpectancy,country.Region,'Central Africa']
Correct: 1

index: 719
Gold SQL: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
schema_links: [country.LifeExpectancy, country.Continent, country.Region, 'Central Africa']
Correct: 1

index: 720
Gold SQL: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
schema_links: [country.Name, country.LifeExpectancy, country.Continent, city.CountryCode = country.Code, countrylanguage.CountryCode = country.Code, Asia]
Correct: 1

index: 721
Gold SQL: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
schema_links: [country.Name,country.Continent,country.LifeExpectancy,Asia]
Correct: 1

index: 722
Gold SQL: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
schema_links: [country.Population, country.GNP, country.Continent, country.Code = city.CountryCode, country.Code = countrylanguage.CountryCode, Asia]
Correct: 0

index: 723
Gold SQL: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
schema_links: [country.Population, country.Continent, country.GNP, country.Code = city.CountryCode, country.Code = countrylanguage.CountryCode, 'Asia']
Correct: 0

index: 724
Gold SQL: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
schema_links: [country.LifeExpectancy, country.Continent, country.GovernmentForm, African, republics]
Correct: 1

index: 725
Gold SQL: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
schema_links: [country.LifeExpectancy, country.Continent, country.GovernmentForm, Africa, republic]
Correct: 1

index: 726
Gold SQL: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
schema_links: [country.SurfaceArea, country.Continent, country.Code = city.CountryCode, country.Code = countrylanguage.CountryCode, Asia, Europe]
Correct: 0

index: 727
Gold SQL: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
schema_links: [country.SurfaceArea,country.Continent,'Asia','Europe']
Correct: 1

index: 728
Gold SQL: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
schema_links: [city.Population,city.District,city.CountryCode = country.Code,'Gelderland']
Correct: 1

index: 729
Gold SQL: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
schema_links: [country.Population,city.Population,city.CountryCode = country.Code,'Gelderland']
Correct: 1

index: 730
Gold SQL: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
schema_links: [country.GNP,country.Population,country.GovernmentForm,city.CountryCode = country.Code,'US territory']
Correct: 0

index: 731
Gold SQL: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
schema_links: [country.GNP,country.Population,country.Continent,country.Code = city.CountryCode,country.Code = countrylanguage.CountryCode,US]
Correct: 0

index: 732
Gold SQL: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
schema_links: [countrylanguage.Language, countrylanguage.CountryCode = country.Code]
Correct: 1

index: 733
Gold SQL: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
schema_links: [countrylanguage.Language, country.Code = countrylanguage.CountryCode]
Correct: 1

index: 734
Gold SQL: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
schema_links: [country.GovernmentForm, country.Continent, 'Africa']
Correct: 1

index: 735
Gold SQL: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
schema_links: [country.GovernmentForm,country.Continent,Africa]
Correct: 1

index: 736
Gold SQL: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
schema_links: [COUNT(DISTINCT countrylanguage.Language),city.CountryCode = country.Code,'Aruba']
Correct: 0

index: 737
Gold SQL: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
schema_links: [countrylanguage.Language,country.Code = countrylanguage.CountryCode,'Aruba']
Correct: 1

index: 738
Gold SQL: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
schema_links: [COUNT(countrylanguage.Language), country.Name, country.Code = city.CountryCode, country.Code = countrylanguage.CountryCode, 'Afghanistan']
Correct: 1

index: 739
Gold SQL: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
schema_links: [COUNT(countrylanguage.Language),countrylanguage.CountryCode = country.Code,country.Code]
Correct: 1

index: 740
Gold SQL: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
schema_links: [country.Name, country.Code = countrylanguage.CountryCode, countrylanguage.Language]
Correct: 0

index: 741
Gold SQL: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
schema_links: [country.Name, country.Code = countrylanguage.CountryCode, countrylanguage.*]
Correct: 0

index: 742
Gold SQL: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
schema_links: [country.Continent, country.Code = countrylanguage.CountryCode, countrylanguage.Language]
Correct: 1

index: 743
Gold SQL: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
schema_links: [countrylanguage.Continent, countrylanguage.Language, country.Code = countrylanguage.CountryCode]
Correct: 0

index: 744
Gold SQL: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
schema_links: [country.*,country.Code = countrylanguage.CountryCode,countrylanguage.Language,English,Dutch]
Correct: 1

index: 745
Gold SQL: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
schema_links: [COUNT(country.Code), country.Code = countrylanguage.CountryCode, countrylanguage.Language, 'English', 'Dutch']
Correct: 0

index: 746
Gold SQL: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
schema_links: [country.Name, country.Code = countrylanguage.CountryCode, countrylanguage.Language, 'English', 'French']
Correct: 0

index: 747
Gold SQL: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
schema_links: [country.Name,country.Code = countrylanguage.CountryCode,countrylanguage.Language,English,French]
Correct: 1

index: 748
Gold SQL: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
schema_links: [country.Name, country.Code = countrylanguage.CountryCode, countrylanguage.Language, countrylanguage.IsOfficial, English, French, 'T']
Correct: 1

index: 749
Gold SQL: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
schema_links: [country.Name, countrylanguage.Language, countrylanguage.IsOfficial, country.Code = city.CountryCode, country.Code = countrylanguage.CountryCode, "English", "French", "T"]
Correct: 1

index: 750
Gold SQL: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
schema_links: [COUNT(DISTINCT country.Continent),countrylanguage.Language,country.Code = countrylanguage.CountryCode,'Chinese']
Correct: 1

index: 751
Gold SQL: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
schema_links: [country.Continent,country.Code = countrylanguage.CountryCode,'Chinese']
Correct: 1

index: 752
Gold SQL: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
schema_links: [country.Region,country.Code = countrylanguage.CountryCode,countrylanguage.Language,English, Dutch]
Correct: 1

index: 753
Gold SQL: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
schema_links: [country.Region, country.Code = city.CountryCode, country.Code = countrylanguage.CountryCode, countrylanguage.Language, 'Dutch', 'English']
Correct: 1

index: 754
Gold SQL: select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" and isofficial  =  "t" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "dutch" and isofficial  =  "t"
schema_links: [country.Name, country.Code = countrylanguage.CountryCode, countrylanguage.Language, countrylanguage.IsOfficial, English, Dutch, true]
Correct: 1

index: 755
Gold SQL: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"
schema_links: [country.Name, country.Code = city.CountryCode, country.Code = countrylanguage.CountryCode, countrylanguage.Language, countrylanguage.IsOfficial, English, Dutch, Yes]
Correct: 0

index: 756
Gold SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
schema_links: [countrylanguage.Language, countrylanguage.Percentage, country.Code = countrylanguage.CountryCode, country.Continent, 'Asia']
Correct: 0

index: 757
Gold SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
schema_links: [countrylanguage.Language, country.Continent, country.Code = city.CountryCode, country.Code = countrylanguage.CountryCode, Asia]
Correct: 0

index: 758
Gold SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
schema_links: [countrylanguage.Language, countrylanguage.CountryCode, country.Code, country.GovernmentForm, "republic"]
Correct: 0

index: 759
Gold SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
schema_links: [countrylanguage.Language,countrylanguage.CountryCode,country.GovernmentForm,'Republic']
Correct: 0

index: 760
Gold SQL: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
schema_links: [city.Population, countrylanguage.Language, city.CountryCode = country.Code, countrylanguage.CountryCode = country.Code, English]
Correct: 0

index: 761
Gold SQL: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
schema_links: [city.Name, countrylanguage.Language, city.CountryCode = country.Code, countrylanguage.CountryCode = country.Code, 'English']
Correct: 0

index: 762
Gold SQL: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
schema_links: [country.Name, country.Population, country.LifeExpectancy, country.SurfaceArea, city.CountryCode = country.Code, countrylanguage.CountryCode = country.Code, Asian]
Correct: 0

index: 763
Gold SQL: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
schema_links: [country.Name, country.Population, country.LifeExpectancy, country.Continent = Asia, country.SurfaceArea = land]
Correct: 0

index: 764
Gold SQL: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
schema_links: [country.LifeExpectancy, country.Code = countrylanguage.CountryCode, countrylanguage.Language = "English", countrylanguage.IsOfficial = "No"]
Correct: 0

index: 765
Gold SQL: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
schema_links: [country.LifeExpectancy, country.Code = countrylanguage.CountryCode, countrylanguage.Language, countrylanguage.IsOfficial, English, not official]
Correct: 1

index: 766
Gold SQL: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
schema_links: [country.Population, country.Code = countrylanguage.CountryCode, countrylanguage.Language, countrylanguage.IsOfficial, English, No]
Correct: 0

index: 767
Gold SQL: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
schema_links: [country.Population, country.Code = countrylanguage.CountryCode, countrylanguage.Language, 'English']
Correct: 1

index: 768
Gold SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
schema_links: [countrylanguage.Language,countrylanguage.CountryCode = country.Code,country.HeadOfState,'Beatrix']
Correct: 1

index: 769
Gold SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
schema_links: [countrylanguage.Language,country.HeadOfState,countrylanguage.CountryCode = country.Code,'Beatrix']
Correct: 0

index: 770
Gold SQL: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
schema_links: [COUNT(DISTINCT countrylanguage.Language), country.IndepYear, country.Code = city.CountryCode, country.Code = countrylanguage.CountryCode, 1930]
Correct: 0

index: 771
Gold SQL: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
schema_links: [country.Code, country.IndepYear, COUNT(DISTINCT countrylanguage.Language), countrylanguage.CountryCode]
Correct: 0

index: 772
Gold SQL: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
schema_links: [country.Name,country.SurfaceArea,city.CountryCode = country.Code,Europe]
Correct: 0

index: 773
Gold SQL: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
schema_links: [country.Name,country.SurfaceArea,Europe]
Correct: 0

index: 774
Gold SQL: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")
schema_links: [country.Name, country.Population, country.Continent, country.Code = city.CountryCode, countrylanguage.CountryCode = country.Code, Africa, Asia]
Correct: 1

index: 775
Gold SQL: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  "Asia")
schema_links: [country.Name, country.Population, country.Continent, city.CountryCode = country.Code, countrylanguage.CountryCode = country.Code, Africa, Asia]
Correct: 1

index: 776
Gold SQL: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  "Africa")
schema_links: [country.Name, country.Population, country.Continent, city.CountryCode = country.Code, countrylanguage.CountryCode = country.Code, 'Asia', 'Africa']
Correct: 1

index: 777
Gold SQL: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")
schema_links: [country.Name, country.Population, country.Continent, country.Code = city.CountryCode, country.Code = countrylanguage.CountryCode, Asia, Africa]
Correct: 0

index: 778
Gold SQL: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
schema_links: [country.Code,countrylanguage.Language,'English']
Correct: 0

index: 779
Gold SQL: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
schema_links: [country.Code, countrylanguage.Language, country.Code = countrylanguage.CountryCode, English]
Correct: 0

index: 780
Gold SQL: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
schema_links: [country.Code,countrylanguage.Language,country.Code = countrylanguage.CountryCode,'English']
Correct: 0

index: 781
Gold SQL: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
schema_links: [country.Code, countrylanguage.CountryCode, countrylanguage.Language != 'English']
Correct: 0

index: 782
Gold SQL: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
schema_links: [country.Code, countrylanguage.Language, country.GovernmentForm, country.Code = countrylanguage.CountryCode, 'English', 'Republic']
Correct: 1

index: 783
Gold SQL: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
schema_links: [country.Code, countrylanguage.Language, country.GovernmentForm, city.CountryCode = country.Code, countrylanguage.CountryCode = country.Code, English, Republic]
Correct: 1

index: 784
Gold SQL: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
schema_links: [city.Name, country.Continent, countrylanguage.Language, countrylanguage.IsOfficial, city.CountryCode = country.Code, countrylanguage.CountryCode = country.Code, European, English, not official]
Correct: 0

index: 785
Gold SQL: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
schema_links: [city.Name, city.CountryCode, country.Code, countrylanguage.Language, countrylanguage.IsOfficial, Europe, English, 'F']
Correct: 0

index: 786
Gold SQL: select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  "asia"
schema_links: [city.Name, country.Continent, country.Code, countrylanguage.Language, countrylanguage.IsOfficial, city.CountryCode = country.Code, countrylanguage.CountryCode = country.Code, Asian, Chinese, true]
Correct: 1

index: 787
Gold SQL: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"
schema_links: [city.Name, city.Continent, countrylanguage.Language, countrylanguage.IsOfficial, Asia, Chinese, True]
Correct: 0

index: 788
Gold SQL: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
schema_links: [country.Name, country.IndepYear, country.SurfaceArea, country.Population]
Correct: 0

index: 789
Gold SQL: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
schema_links: [country.Name, country.IndepYear, country.SurfaceArea, country.Population]
Correct: 0

index: 790
Gold SQL: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
schema_links: [country.Population, country.Name, country.HeadOfState]
Correct: 1

index: 791
Gold SQL: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
schema_links: [country.Name, country.Population, country.HeadOfState, country.SurfaceArea]
Correct: 0

index: 792
Gold SQL: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
schema_links: [country.Name, COUNT(countrylanguage.Language), country.Code = city.CountryCode, country.Code = countrylanguage.CountryCode, 3]
Correct: 0

index: 793
Gold SQL: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
schema_links: [country.Name, country.Code = countrylanguage.CountryCode, COUNT(countrylanguage.Language), 2]
Correct: 1

index: 794
Gold SQL: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
schema_links: [city.District,city.Population]
Correct: 1

index: 795
Gold SQL: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
schema_links: [city.District, city.Population]
Correct: 1

index: 796
Gold SQL: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
schema_links: [country.GovernmentForm, country.Population, country.LifeExpectancy, city.CountryCode = country.Code, countrylanguage.CountryCode = country.Code, 72]
Correct: 1

index: 797
Gold SQL: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
schema_links: [country.GovernmentForm, country.Population, country.LifeExpectancy, 72]
Correct: 1

index: 798
Gold SQL: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
schema_links: [country.Continent, country.LifeExpectancy, country.Population, city.CountryCode = country.Code, countrylanguage.CountryCode = country.Code, 72]
Correct: 1

index: 799
Gold SQL: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
schema_links: [country.Continent, country.Population, country.LifeExpectancy, 72]
Correct: 0

index: 800
Gold SQL: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
schema_links: [country.Name, country.SurfaceArea, 5]
Correct: 1

index: 801
Gold SQL: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
schema_links: [country.Name, country.SurfaceArea]
Correct: 1

index: 802
Gold SQL: SELECT Name FROM country ORDER BY Population DESC LIMIT 3
schema_links: [country.Name, country.Population]
Correct: 1

index: 803
Gold SQL: SELECT Name FROM country ORDER BY Population DESC LIMIT 3
schema_links: [country.Name]
Correct: 1

index: 804
Gold SQL: SELECT Name FROM country ORDER BY Population ASC LIMIT 3
schema_links: [country.Name,country.Population]
Correct: 1

index: 805
Gold SQL: SELECT Name FROM country ORDER BY Population ASC LIMIT 3
schema_links: [country.Name, country.Population]
Correct: 1

index: 806
Gold SQL: SELECT count(*) FROM country WHERE continent  =  "Asia"
schema_links: [COUNT(country.Code),country.Continent,'Asia']
Correct: 1

index: 807
Gold SQL: SELECT count(*) FROM country WHERE continent  =  "Asia"
schema_links: [COUNT(country.Code), country.Continent, "Asia"]
Correct: 1

index: 808
Gold SQL: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
schema_links: [country.Name, country.Continent, country.Population, 'Europe', 80000]
Correct: 1

index: 809
Gold SQL: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
schema_links: [country.Name, country.Continent, country.Population, country.Code = city.CountryCode, country.Code = countrylanguage.CountryCode, Europe, 80000]
Correct: 1

index: 810
Gold SQL: select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
schema_links: [country.Population, country.SurfaceArea, country.Continent = 'North America', country.SurfaceArea > 3000]
Correct: 0

index: 811
Gold SQL: select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
schema_links: [country.Population, country.SurfaceArea, country.Continent, city.CountryCode = country.Code, country.Code = countrylanguage.CountryCode, >3000, North America]
Correct: 0

index: 812
Gold SQL: SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000
schema_links: [city.*, city.Population, 160000, 900000]
Correct: 0

index: 813
Gold SQL: select name from city where population between 160000 and 900000
schema_links: [city.Name, city.Population, 160000, 900000]
Correct: 1

index: 814
Gold SQL: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
schema_links: [countrylanguage.Language, countrylanguage.CountryCode = country.Code, country.Name, country.Code]
Correct: 1

index: 815
Gold SQL: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
schema_links: [countrylanguage.Language,countrylanguage.CountryCode = country.Code]
Correct: 1

index: 816
Gold SQL: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
schema_links: [countrylanguage.Language,countrylanguage.Percentage,country.Name,countrylanguage.CountryCode = country.Code]
Correct: 0

index: 817
Gold SQL: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
schema_links: [country.Code, countrylanguage.Language, country.Code = countrylanguage.CountryCode]
Correct: 0

index: 818
Gold SQL: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
schema_links: [COUNT(country.Code), countrylanguage.Language, countrylanguage.Percentage, country.Code = countrylanguage.CountryCode, Spanish]
Correct: 0

index: 819
Gold SQL: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
schema_links: [COUNT(country.Code), country.Code = countrylanguage.CountryCode, countrylanguage.Language = 'Spanish', countrylanguage.IsOfficial = 'T']
Correct: 0

index: 820
Gold SQL: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
schema_links: [country.Code = countrylanguage.CountryCode, countrylanguage.Language, countrylanguage.Percentage, Spanish]
Correct: 0

index: 821
Gold SQL: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
schema_links: [country.Code, countrylanguage.Language, countrylanguage.Percentage, country.Code = countrylanguage.CountryCode, Spanish]
Correct: 0

index: 822
Gold SQL: SELECT count(*) FROM conductor
schema_links: [conductor.Conductor_ID]
Correct: 1

index: 823
Gold SQL: SELECT count(*) FROM conductor
schema_links: [conductor.Conductor_ID]
Correct: 1

index: 824
Gold SQL: SELECT Name FROM conductor ORDER BY Age ASC
schema_links: [conductor.Name,conductor.Age]
Correct: 1

index: 825
Gold SQL: SELECT Name FROM conductor ORDER BY Age ASC
schema_links: [conductor.Name, conductor.Age]
Correct: 1

index: 826
Gold SQL: SELECT Name FROM conductor WHERE Nationality != 'USA'
schema_links: [conductor.Name, conductor.Nationality, 'USA']
Correct: 1

index: 827
Gold SQL: SELECT Name FROM conductor WHERE Nationality != 'USA'
schema_links: [conductor.Name, conductor.Nationality, 'USA']
Correct: 1

index: 828
Gold SQL: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
schema_links: [orchestra.Record_Company,orchestra.Year_of_Founded]
Correct: 1

index: 829
Gold SQL: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
schema_links: [orchestra.Record_Company,orchestra.Year_of_Founded]
Correct: 1

index: 830
Gold SQL: SELECT avg(Attendance) FROM SHOW
schema_links: [show.Attendance]
Correct: 1

index: 831
Gold SQL: SELECT avg(Attendance) FROM SHOW
schema_links: [show.Attendance]
Correct: 1

index: 832
Gold SQL: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
schema_links: [performance.Share, performance.Type, 'Live final']
Correct: 1

index: 833
Gold SQL: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
schema_links: [performance.Share,performance.Type,'Live final']
Correct: 1

index: 834
Gold SQL: SELECT count(DISTINCT Nationality) FROM conductor
schema_links: [conductor.Nationality]
Correct: 1

index: 835
Gold SQL: SELECT count(DISTINCT Nationality) FROM conductor
schema_links: [conductor.Nationality]
Correct: 1

index: 836
Gold SQL: SELECT Name FROM conductor ORDER BY Year_of_Work DESC
schema_links: [conductor.Name, conductor.Year_of_Work]
Correct: 1

index: 837
Gold SQL: SELECT Name FROM conductor ORDER BY Year_of_Work DESC
schema_links: [conductor.Name,conductor.Year_of_Work]
Correct: 1

index: 838
Gold SQL: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
schema_links: [conductor.Name, conductor.Year_of_Work]
Correct: 1

index: 839
Gold SQL: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
schema_links: [conductor.Name,conductor.Year_of_Work]
Correct: 1

index: 840
Gold SQL: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
schema_links: [conductor.Name, orchestra.Orchestra, orchestra.Conductor_ID = conductor.Conductor_ID]
Correct: 1

index: 841
Gold SQL: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
schema_links: [conductor.Name,orchestra.Orchestra,orchestra.Conductor_ID = conductor.Conductor_ID]
Correct: 1

index: 842
Gold SQL: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
schema_links: [conductor.Name, orchestra.Conductor_ID]
Correct: 0

index: 843
Gold SQL: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
schema_links: [conductor.Name, orchestra.Conductor_ID = conductor.Conductor_ID]
Correct: 1

index: 844
Gold SQL: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
schema_links: [conductor.Name, orchestra.Conductor_ID]
Correct: 0

index: 845
Gold SQL: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
schema_links: [conductor.Name,orchestra.Conductor_ID = conductor.Conductor_ID]
Correct: 0

index: 846
Gold SQL: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
schema_links: [conductor.Name,orchestra.Conductor_ID = conductor.Conductor_ID,orchestra.Year_of_Founded,2008]
Correct: 1

index: 847
Gold SQL: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
schema_links: [conductor.Name,orchestra.Conductor_ID = conductor.Conductor_ID,orchestra.Year_of_Founded,2008]
Correct: 1

index: 848
Gold SQL: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
schema_links: [orchestra.Record_Company, COUNT(orchestra.Orchestra_ID)]
Correct: 1

index: 849
Gold SQL: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
schema_links: [orchestra.*, orchestra.Record_Company]
Correct: 1

index: 850
Gold SQL: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
schema_links: [orchestra.Major_Record_Format]
Correct: 0

index: 851
Gold SQL: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
schema_links: [orchestra.Major_Record_Format]
Correct: 0

index: 852
Gold SQL: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
schema_links: [orchestra.Record_Company,orchestra.*]
Correct: 1

index: 853
Gold SQL: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
schema_links: [orchestra.Record_Company]
Correct: 1

index: 854
Gold SQL: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
schema_links: [orchestra.Orchestra, performance.*]
Correct: 1

index: 855
Gold SQL: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
schema_links: [orchestra.Orchestra, performance.Orchestra_ID]
Correct: 1

index: 856
Gold SQL: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
schema_links: [orchestra.Record_Company,orchestra.Year_of_Founded,2003]
Correct: 1

index: 857
Gold SQL: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
schema_links: [orchestra.Record_Company, orchestra.Year_of_Founded]
Correct: 1

index: 858
Gold SQL: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
schema_links: [orchestra.Orchestra_ID, orchestra.Major_Record_Format, 'CD', 'DVD']
Correct: 1

index: 859
Gold SQL: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
schema_links: [orchestra.Major_Record_Format, 'CD', 'DVD']
Correct: 1

index: 860
Gold SQL: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
schema_links: [orchestra.Year_of_Founded, performance.Orchestra_ID = orchestra.Orchestra_ID, performance.Performance_ID]
Correct: 0

index: 861
Gold SQL: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
schema_links: [orchestra.Year_of_Founded,performance.Orchestra_ID = orchestra.Orchestra_ID]
Correct: 1

index: 862
Gold SQL: SELECT count(*) FROM Highschooler
schema_links: [Highschooler.ID]
Correct: 1

index: 863
Gold SQL: SELECT count(*) FROM Highschooler
schema_links: [Highschooler.ID]
Correct: 1

index: 864
Gold SQL: SELECT name ,  grade FROM Highschooler
schema_links: [Highschooler.name, Highschooler.grade]
Correct: 1

index: 865
Gold SQL: SELECT name ,  grade FROM Highschooler
schema_links: [Highschooler.name, Highschooler.grade]
Correct: 1

index: 866
Gold SQL: SELECT grade FROM Highschooler
schema_links: [Highschooler.grade]
Correct: 1

index: 867
Gold SQL: SELECT grade FROM Highschooler
schema_links: [Highschooler.grade]
Correct: 1

index: 868
Gold SQL: SELECT grade FROM Highschooler WHERE name  =  "Kyle"
schema_links: [Highschooler.grade, Highschooler.name, 'Kyle']
Correct: 1

index: 869
Gold SQL: SELECT grade FROM Highschooler WHERE name  =  "Kyle"
schema_links: [Highschooler.grade, Highschooler.name, 'Kyle']
Correct: 1

index: 870
Gold SQL: SELECT name FROM Highschooler WHERE grade  =  10
schema_links: [Highschooler.name, Highschooler.grade, 10]
Correct: 1

index: 871
Gold SQL: SELECT name FROM Highschooler WHERE grade  =  10
schema_links: [Highschooler.name, Highschooler.grade, 10]
Correct: 1

index: 872
Gold SQL: SELECT ID FROM Highschooler WHERE name  =  "Kyle"
schema_links: [Highschooler.ID, Highschooler.name, 'Kyle']
Correct: 1

index: 873
Gold SQL: SELECT ID FROM Highschooler WHERE name  =  "Kyle"
schema_links: [Highschooler.ID]
Correct: 1

index: 874
Gold SQL: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
schema_links: [Highschooler.ID, Highschooler.grade, 9, 10]
Correct: 1

index: 875
Gold SQL: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
schema_links: [Highschooler.*, Highschooler.grade, 9, 10]
Correct: 1

index: 876
Gold SQL: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
schema_links: [Highschooler.ID, Highschooler.grade]
Correct: 1

index: 877
Gold SQL: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
schema_links: [Highschooler.*, Highschooler.grade]
Correct: 1

index: 878
Gold SQL: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
schema_links: [Highschooler.grade,Highschooler.ID]
Correct: 1

index: 879
Gold SQL: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
schema_links: [Highschooler.grade, Highschooler.*]
Correct: 1

index: 880
Gold SQL: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
schema_links: [Highschooler.grade,COUNT(Highschooler.ID),4]
Correct: 1

index: 881
Gold SQL: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
schema_links: [Highschooler.grade,4]
Correct: 1

index: 882
Gold SQL: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
schema_links: [Highschooler.ID, COUNT(Friend.friend_id), Friend.student_id = Highschooler.ID]
Correct: 0

index: 883
Gold SQL: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
schema_links: [COUNT(Friend.friend_id),Highschooler.ID,Friend.student_id = Highschooler.ID]
Correct: 0

index: 884
Gold SQL: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
schema_links: [Highschooler.name,Friend.friend_id,Highschooler.ID,Friend.student_id,COUNT(Friend.friend_id)]
Correct: 1

index: 885
Gold SQL: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
schema_links: [Highschooler.name,Friend.friend_id,Friend.student_id]
Correct: 0

index: 886
Gold SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Highschooler.name, Friend.student_id = Highschooler.ID]
Correct: 1

index: 887
Gold SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Highschooler.name, Friend.student_id = Highschooler.ID]
Correct: 0

index: 888
Gold SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
schema_links: [Highschooler.name,Friend.student_id,3]
Correct: 0

index: 889
Gold SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
schema_links: [Highschooler.name,Friend.student_id = Highschooler.ID,COUNT(Friend.friend_id),3]
Correct: 0

index: 890
Gold SQL: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
schema_links: [Highschooler.name,Friend.friend_id,Friend.student_id,Highschooler.ID,Kyle]
Correct: 1

index: 891
Gold SQL: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
schema_links: [Highschooler.name,Friend.friend_id,Friend.student_id,Highschooler.ID,'Kyle']
Correct: 0

index: 892
Gold SQL: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
schema_links: [Friend.friend_id, Friend.student_id = Highschooler.ID, Highschooler.ID, Highschooler.name, 'Kyle']
Correct: 0

index: 893
Gold SQL: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
schema_links: [Friend.student_id = Highschooler.ID, Highschooler.name, 'Kyle']
Correct: 0

index: 894
Gold SQL: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
schema_links: [Highschooler.ID,Friend.student_id = Highschooler.ID]
Correct: 1

index: 895
Gold SQL: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
schema_links: [Highschooler.ID, Friend.student_id]
Correct: 1

index: 896
Gold SQL: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
schema_links: [Highschooler.name,Friend.friend_id,Highschooler.ID = Friend.student_id]
Correct: 0

index: 897
Gold SQL: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
schema_links: [Highschooler.name, Friend.student_id = Highschooler.ID, Friend.friend_id = Highschooler.ID]
Correct: 0

index: 898
Gold SQL: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
schema_links: [Highschooler.ID, Friend.student_id = Highschooler.ID, Friend.friend_id = Highschooler.ID, Likes.student_id = Highschooler.ID, Likes.liked_id = Highschooler.ID]
Correct: 0

index: 899
Gold SQL: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
schema_links: [Highschooler.ID, Friend.student_id, Friend.friend_id, Likes.student_id, Likes.liked_id]
Correct: 0

index: 900
Gold SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
schema_links: [Highschooler.name, Friend.student_id, Likes.student_id, Likes.liked_id]
Correct: 0

index: 901
Gold SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
schema_links: [Highschooler.name, Friend.student_id, Friend.friend_id, Likes.student_id, Likes.liked_id]
Correct: 0

index: 902
Gold SQL: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
schema_links: [Likes.*, Highschooler.ID, Likes.student_id = Highschooler.ID]
Correct: 1

index: 903
Gold SQL: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
schema_links: [Likes.student_id, COUNT(Likes.student_id)]
Correct: 1

index: 904
Gold SQL: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
schema_links: [Highschooler.name,Likes.student_id]
Correct: 0

index: 905
Gold SQL: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
schema_links: [Highschooler.name,Likes.student_id,COUNT(Likes.liked_id),Highschooler.ID = Likes.student_id]
Correct: 1

index: 906
Gold SQL: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Highschooler.name,Likes.student_id = Highschooler.ID,Likes.*]
Correct: 0

index: 907
Gold SQL: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Highschooler.name, Likes.student_id = Highschooler.ID, Likes.*]
Correct: 1

index: 908
Gold SQL: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
schema_links: [Highschooler.name,Likes.student_id = Highschooler.ID]
Correct: 1

index: 909
Gold SQL: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
schema_links: [Highschooler.name,Likes.student_id,2]
Correct: 0

index: 910
Gold SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
schema_links: [Highschooler.name,Highschooler.grade,Friend.student_id,2,5]
Correct: 1

index: 911
Gold SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
schema_links: [Highschooler.name, Highschooler.grade, Friend.student_id = Highschooler.ID]
Correct: 0

index: 912
Gold SQL: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
schema_links: [COUNT(Likes.*),Highschooler.name,Likes.student_id = Highschooler.ID,'Kyle']
Correct: 1

index: 913
Gold SQL: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
schema_links: [COUNT(Likes.student_id),Likes.student_id = Highschooler.ID,Highschooler.ID,'Kyle']
Correct: 1

index: 914
Gold SQL: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
schema_links: [Highschooler.grade,Friend.student_id = Highschooler.ID]
Correct: 1

index: 915
Gold SQL: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
schema_links: [Highschooler.grade,Friend.student_id = Highschooler.ID]
Correct: 1

index: 916
Gold SQL: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
schema_links: [Highschooler.grade,Friend.student_id = Highschooler.ID]
Correct: 1

index: 917
Gold SQL: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
schema_links: [Highschooler.grade,Friend.friend_id, Friend.student_id]
Correct: 1

index: 918
Gold SQL: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
schema_links: [Owners.state,Professionals.state]
Correct: 1

index: 919
Gold SQL: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
schema_links: [Owners.state, Professionals.state]
Correct: 1

index: 920
Gold SQL: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
schema_links: [Dogs.age,Treatments.dog_id = Dogs.dog_id]
Correct: 0

index: 921
Gold SQL: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
schema_links: [Dogs.age,Treatments.dog_id = Dogs.dog_id]
Correct: 0

index: 922
Gold SQL: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
schema_links: [Professionals.professional_id, Professionals.last_name, Professionals.cell_number, Professionals.state, Treatments.professional_id, 'Indiana', >2]
Correct: 1

index: 923
Gold SQL: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
schema_links: [Professionals.professional_id, Professionals.last_name, Professionals.cell_number, Professionals.state, Treatments.professional_id, 'Indiana']
Correct: 1

index: 924
Gold SQL: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
schema_links: [Dogs.name,Treatments.cost_of_treatment,Dogs.dog_id = Treatments.dog_id,1000]
Correct: 1

index: 925
Gold SQL: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
schema_links: [Dogs.name, Treatments.cost_of_treatment, Dogs.owner_id = Owners.owner_id, Treatments.dog_id = Dogs.dog_id, 1000]
Correct: 0

index: 926
Gold SQL: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
schema_links: [Professionals.first_name, Owners.first_name, Dogs.name]
Correct: 0

index: 927
Gold SQL: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
schema_links: [Professionals.first_name, Owners.first_name, Dogs.name]
Correct: 1

index: 928
Gold SQL: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
schema_links: [Professionals.professional_id, Professionals.role_code, Professionals.email_address, Treatments.professional_id]
Correct: 1

index: 929
Gold SQL: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
schema_links: [Professionals.professional_id, Professionals.role_code, Professionals.email_address, Treatments.professional_id]
Correct: 1

index: 930
Gold SQL: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Owners.owner_id, Owners.first_name, Owners.last_name, Dogs.owner_id]
Correct: 0

index: 931
Gold SQL: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Owners.owner_id, Owners.first_name, Owners.last_name, Dogs.owner_id]
Correct: 1

index: 932
Gold SQL: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
schema_links: [Professionals.professional_id, Professionals.role_code, Professionals.first_name, Treatments.professional_id]
Correct: 1

index: 933
Gold SQL: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
schema_links: [Professionals.professional_id, Professionals.role_code, Professionals.first_name, Treatments.professional_id]
Correct: 1

index: 934
Gold SQL: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
schema_links: [Breeds.breed_name, Dogs.breed_code = Breeds.breed_code, Dogs.*]
Correct: 1

index: 935
Gold SQL: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
schema_links: [Breeds.breed_name,Dogs.breed_code = Breeds.breed_code]
Correct: 0

index: 936
Gold SQL: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Owners.owner_id,Owners.last_name,Treatments.dog_id,Treatments.dog_id = Dogs.dog_id,Dogs.owner_id = Owners.owner_id]
Correct: 1

index: 937
Gold SQL: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
schema_links: [Owners.owner_id, Owners.last_name, Treatments.cost_of_treatment, Treatments.dog_id = Dogs.dog_id, Treatments.professional_id = Professionals.professional_id]
Correct: 0

index: 938
Gold SQL: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
schema_links: [Treatment_Types.treatment_type_description,Treatments.cost_of_treatment,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]
Correct: 0

index: 939
Gold SQL: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
schema_links: [Treatment_Types.treatment_type_description,Treatments.cost_of_treatment,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]
Correct: 1

index: 940
Gold SQL: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
schema_links: [Owners.owner_id,Owners.zip_code,Treatments.cost_of_treatment,Owners.owner_id = Dogs.owner_id,Treatments.dog_id = Dogs.dog_id]
Correct: 1

index: 941
Gold SQL: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
schema_links: [Owners.owner_id, Owners.zip_code, Treatments.cost_of_treatment, Treatments.dog_id = Dogs.dog_id, Dogs.owner_id = Owners.owner_id]
Correct: 0

index: 942
Gold SQL: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
schema_links: [Professionals.professional_id, Professionals.cell_number, Treatments.professional_id = Professionals.professional_id, Treatments.treatment_type_code = Treatment_Types.treatment_type_code]
Correct: 1

index: 943
Gold SQL: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
schema_links: [Professionals.professional_id, Professionals.cell_number, Treatments.professional_id, Treatments.treatment_type_code]
Correct: 0

index: 944
Gold SQL: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
schema_links: [Professionals.first_name, Professionals.last_name, Treatments.professional_id, Treatments.cost_of_treatment]
Correct: 0

index: 945
Gold SQL: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
schema_links: [Professionals.first_name, Professionals.last_name, Treatments.professional_id, Treatments.cost_of_treatment, average]
Correct: 0

index: 946
Gold SQL: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
schema_links: [Treatments.date_of_treatment,Treatments.professional_id = Professionals.professional_id,Professionals.first_name]
Correct: 1

index: 947
Gold SQL: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
schema_links: [Treatments.date_of_treatment,Professionals.first_name,Treatments.professional_id = Professionals.professional_id]
Correct: 1

index: 948
Gold SQL: SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
schema_links: [Treatments.cost_of_treatment,Treatments.treatment_type_code = Treatment_Types.treatment_type_code,Treatment_Types.treatment_type_description]
Correct: 1

index: 949
Gold SQL: SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
schema_links: [Treatments.cost_of_treatment, Treatment_Types.treatment_type_description, Treatments.treatment_type_code = Treatment_Types.treatment_type_code]
Correct: 0

index: 950
Gold SQL: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
schema_links: [Owners.first_name, Owners.last_name, Dogs.size_code, Dogs.owner_id = Owners.owner_id, Dogs.size_code = Sizes.size_code]
Correct: 0

index: 951
Gold SQL: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
schema_links: [Owners.first_name, Owners.last_name, Dogs.owner_id = Owners.owner_id, Sizes.size_description, Dogs.size_code = Sizes.size_code]
Correct: 0

index: 952
Gold SQL: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
schema_links: [Owners.first_name,Dogs.name,Dogs.owner_id = Owners.owner_id]
Correct: 1

index: 953
Gold SQL: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
schema_links: [Owners.first_name, Dogs.name, Dogs.owner_id = Owners.owner_id]
Correct: 1

index: 954
Gold SQL: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
schema_links: [Dogs.name, Breeds.breed_name, Treatments.date_of_treatment, Dogs.breed_code = Breeds.breed_code, Treatments.dog_id = Dogs.dog_id]
Correct: 0

index: 955
Gold SQL: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
schema_links: [Dogs.name, Breeds.breed_name, Treatments.date_of_treatment, Treatments.dog_id = Dogs.dog_id, Dogs.breed_code = Breeds.breed_code]
Correct: 0

index: 956
Gold SQL: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
schema_links: [Dogs.*, Owners.state = 'Virginia', Owners.first_name, Dogs.name]
Correct: 1

index: 957
Gold SQL: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
schema_links: [Owners.first_name,Owners.state,'Virginia',Dogs.name,Dogs.owner_id = Owners.owner_id]
Correct: 0

index: 958
Gold SQL: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
schema_links: [Dogs.date_arrived, Dogs.date_departed, Treatments.dog_id = Dogs.dog_id]
Correct: 0

index: 959
Gold SQL: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
schema_links: [Dogs.date_arrived, Dogs.date_departed, Treatments.dog_id = Dogs.dog_id]
Correct: 0

index: 960
Gold SQL: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
schema_links: [Owners.last_name, Dogs.age, Dogs.owner_id]
Correct: 0

index: 961
Gold SQL: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
schema_links: [Owners.last_name,Dogs.owner_id = Owners.owner_id]
Correct: 0

index: 962
Gold SQL: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
schema_links: [Professionals.email_address,Professionals.state,'Hawaii','Wisconsin']
Correct: 1

index: 963
Gold SQL: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
schema_links: [Professionals.email_address, Professionals.state, 'Hawaii', 'Wisconsin']
Correct: 1

index: 964
Gold SQL: SELECT date_arrived ,  date_departed FROM Dogs
schema_links: [Dogs.date_arrived, Dogs.date_departed, Dogs.*]
Correct: 1

index: 965
Gold SQL: SELECT date_arrived ,  date_departed FROM Dogs
schema_links: [Dogs.date_arrived, Dogs.date_departed]
Correct: 1

index: 966
Gold SQL: SELECT count(DISTINCT dog_id) FROM Treatments
schema_links: [COUNT(DISTINCT Dogs.dog_id),Treatments.dog_id = Dogs.dog_id]
Correct: 1

index: 967
Gold SQL: SELECT count(DISTINCT dog_id) FROM Treatments
schema_links: [COUNT(Dogs.dog_id), Treatments.dog_id = Dogs.dog_id]
Correct: 1

index: 968
Gold SQL: SELECT count(DISTINCT professional_id) FROM Treatments
schema_links: [Professionals.professional_id, Treatments.professional_id = Professionals.professional_id, Treatments.dog_id = Dogs.dog_id]
Correct: 1

index: 969
Gold SQL: SELECT count(DISTINCT professional_id) FROM Treatments
schema_links: [COUNT(Professionals.professional_id),Treatments.professional_id = Professionals.professional_id]
Correct: 1

index: 970
Gold SQL: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
schema_links: [Professionals.role_code, Professionals.street, Professionals.city, Professionals.state, Professionals.city = 'West']
Correct: 1

index: 971
Gold SQL: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
schema_links: [Professionals.role_code, Professionals.street, Professionals.city, Professionals.state, 'West']
Correct: 1

index: 972
Gold SQL: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
schema_links: [Owners.first_name, Owners.last_name, Owners.email_address, Owners.state, 'North']
Correct: 1

index: 973
Gold SQL: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
schema_links: [Owners.first_name, Owners.last_name, Owners.email_address, Owners.state, 'North']
Correct: 1

index: 974
Gold SQL: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
schema_links: [Dogs.age, average]
Correct: 1

index: 975
Gold SQL: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
schema_links: [COUNT(Dogs.dog_id),Dogs.age]
Correct: 1

index: 976
Gold SQL: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
schema_links: [Treatments.cost_of_treatment]
Correct: 1

index: 977
Gold SQL: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
schema_links: [Treatments.cost_of_treatment]
Correct: 1

index: 978
Gold SQL: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )
schema_links: [Dogs.dog_id = Treatments.dog_id]
Correct: 1

index: 979
Gold SQL: select count(*) from dogs where dog_id not in ( select dog_id from treatments )
schema_links: [COUNT(Dogs.dog_id),Treatments.dog_id = Dogs.dog_id]
Correct: 1

index: 980
Gold SQL: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
schema_links: [Owners.owner_id = Dogs.owner_id]
Correct: 1

index: 981
Gold SQL: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
schema_links: [Owners.owner_id = Dogs.owner_id]
Correct: 1

index: 982
Gold SQL: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
schema_links: [Professionals.professional_id = Treatments.professional_id]
Correct: 1

index: 983
Gold SQL: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
schema_links: [Professionals.professional_id = Treatments.professional_id]
Correct: 1

index: 984
Gold SQL: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
schema_links: [Dogs.name, Dogs.age, Dogs.weight, Dogs.abandoned_yn, 1]
Correct: 1

index: 985
Gold SQL: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
schema_links: [Dogs.name, Dogs.age, Dogs.weight, Dogs.abandoned_yn=1]
Correct: 1

index: 986
Gold SQL: SELECT avg(age) FROM Dogs
schema_links: [Dogs.age]
Correct: 1

index: 987
Gold SQL: SELECT avg(age) FROM Dogs
schema_links: [Dogs.age]
Correct: 1

index: 988
Gold SQL: SELECT max(age) FROM Dogs
schema_links: [Dogs.age]
Correct: 1

index: 989
Gold SQL: SELECT max(age) FROM Dogs
schema_links: [Dogs.age]
Correct: 1

index: 990
Gold SQL: SELECT charge_type ,  charge_amount FROM Charges
schema_links: [Charges.charge_type, Charges.charge_amount]
Correct: 1

index: 991
Gold SQL: SELECT charge_type ,  charge_amount FROM Charges
schema_links: [Charges.charge_type, Charges.charge_amount]
Correct: 1

index: 992
Gold SQL: SELECT max(charge_amount) FROM Charges
schema_links: [Charges.charge_amount]
Correct: 1

index: 993
Gold SQL: SELECT max(charge_amount) FROM Charges
schema_links: [Charges.charge_amount, Charges.charge_type]
Correct: 1

index: 994
Gold SQL: SELECT email_address ,  cell_number ,  home_phone FROM professionals
schema_links: [Professionals.email_address, Professionals.cell_number, Professionals.home_phone]
Correct: 1

index: 995
Gold SQL: SELECT email_address ,  cell_number ,  home_phone FROM professionals
schema_links: [Professionals.email_address, Professionals.cell_number, Professionals.home_phone]
Correct: 1

index: 996
Gold SQL: SELECT DISTINCT breed_code ,  size_code FROM dogs
schema_links: [Breeds.breed_name, Dogs.breed_code = Breeds.breed_code, Sizes.size_description, Dogs.size_code = Sizes.size_code]
Correct: 0

index: 997
Gold SQL: SELECT DISTINCT breed_code ,  size_code FROM dogs
schema_links: [Breeds.breed_name, Sizes.size_description, Dogs.*]
Correct: 0

index: 998
Gold SQL: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
schema_links: [Professionals.first_name, Treatment_Types.treatment_type_description]
Correct: 1

index: 999
Gold SQL: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
schema_links: [Professionals.first_name, Treatment_Types.treatment_type_description]
Correct: 1

index: 1000
Gold SQL: SELECT count(*) FROM singer
schema_links: [COUNT(singer.Singer_ID)]
Correct: 1

index: 1001
Gold SQL: SELECT count(*) FROM singer
schema_links: [singer.*]
Correct: 1

index: 1002
Gold SQL: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
schema_links: [singer.Name, singer.Net_Worth_Millions]
Correct: 1

index: 1003
Gold SQL: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
schema_links: [singer.Name, singer.Net_Worth_Millions]
Correct: 1

index: 1004
Gold SQL: SELECT Birth_Year ,  Citizenship FROM singer
schema_links: [singer.Birth_Year, singer.Citizenship]
Correct: 1

index: 1005
Gold SQL: SELECT Birth_Year ,  Citizenship FROM singer
schema_links: [singer.Birth_Year, singer.Citizenship]
Correct: 1

index: 1006
Gold SQL: SELECT Name FROM singer WHERE Citizenship != "France"
schema_links: [singer.Name, singer.Citizenship, 'France']
Correct: 1

index: 1007
Gold SQL: SELECT Name FROM singer WHERE Citizenship != "France"
schema_links: [singer.Name,singer.Citizenship,'French']
Correct: 0

index: 1008
Gold SQL: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
schema_links: [singer.Name, singer.Birth_Year, 1948, 1949]
Correct: 1

index: 1009
Gold SQL: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
schema_links: [singer.Name, singer.Birth_Year, 1948, 1949]
Correct: 1

index: 1010
Gold SQL: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
schema_links: [singer.Name, singer.Net_Worth_Millions]
Correct: 1

index: 1011
Gold SQL: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
schema_links: [singer.Name, singer.Net_Worth_Millions]
Correct: 1

index: 1012
Gold SQL: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
schema_links: [singer.Citizenship]
Correct: 1

index: 1013
Gold SQL: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
schema_links: [singer.Citizenship, singer.Singer_ID]
Correct: 1

index: 1014
Gold SQL: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
schema_links: [singer.Citizenship]
Correct: 0

index: 1015
Gold SQL: select citizenship from singer group by citizenship order by count(*) desc limit 1
schema_links: [singer.Citizenship]
Correct: 1

index: 1016
Gold SQL: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
schema_links: [singer.Citizenship,singer.Net_Worth_Millions]
Correct: 1

index: 1017
Gold SQL: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
schema_links: [singer.Citizenship,singer.Net_Worth_Millions]
Correct: 1

index: 1018
Gold SQL: SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
schema_links: [song.Title,singer.Name,song.Singer_ID = singer.Singer_ID]
Correct: 1

index: 1019
Gold SQL: SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
schema_links: [song.Title, singer.Name]
Correct: 1

index: 1020
Gold SQL: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
schema_links: [singer.Name, song.Sales, song.Singer_ID = singer.Singer_ID]
Correct: 1

index: 1021
Gold SQL: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
schema_links: [singer.Name, song.Sales, song.Singer_ID = singer.Singer_ID, 300000]
Correct: 1

index: 1022
Gold SQL: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
schema_links: [singer.Name, song.Singer_ID = singer.Singer_ID]
Correct: 1

index: 1023
Gold SQL: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
schema_links: [singer.Name, song.Singer_ID = singer.Singer_ID]
Correct: 1

index: 1024
Gold SQL: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
schema_links: [singer.Name, song.Sales, song.Singer_ID = singer.Singer_ID]
Correct: 1

index: 1025
Gold SQL: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
schema_links: [singer.Name,song.Sales,song.Singer_ID = singer.Singer_ID]
Correct: 1

index: 1026
Gold SQL: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
schema_links: [singer.Name, song.Singer_ID]
Correct: 1

index: 1027
Gold SQL: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
schema_links: [singer.Name, song.Singer_ID = singer.Singer_ID]
Correct: 1

index: 1028
Gold SQL: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
schema_links: [singer.Citizenship,singer.Birth_Year,1945,1955]
Correct: 1

index: 1029
Gold SQL: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
schema_links: [singer.Citizenship, singer.Singer_ID, singer.Birth_Year, 1945, 1955]
Correct: 0

index: 1030
Gold SQL: SELECT count(*) FROM Other_Available_Features
schema_links: [Other_Available_Features.*]
Correct: 0

index: 1031
Gold SQL: SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon"
schema_links: [Ref_Feature_Types.feature_type_name,Other_Available_Features.feature_name,'AirCon']
Correct: 1

index: 1032
Gold SQL: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code
schema_links: []
Correct: 0

index: 1033
Gold SQL: SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  "Apartment" AND room_count  >  1
schema_links: [Properties.property_name, Properties.property_type_code = Ref_Property_Types.property_type_code, Properties.room_count, house, apartment, >1]
Correct: 0

