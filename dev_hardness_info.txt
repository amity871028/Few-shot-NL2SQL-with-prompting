Level: easy
Gold SQL: SELECT count(*) FROM singer
Pred SQL: SELECT COUNT(*) FROM singer
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM singer
Pred SQL: SELECT COUNT(*) FROM singer
Correct: True

Level: medium
Gold SQL: SELECT name ,  country ,  age FROM singer ORDER BY age DESC
Pred SQL: SELECT singer.Name , singer.Country , singer.Age FROM singer ORDER BY singer.Age DESC
Correct: True

Level: medium
Gold SQL: SELECT name ,  country ,  age FROM singer ORDER BY age DESC
Pred SQL: SELECT singer.Name , singer.Country , singer.Age FROM singer ORDER BY singer.Age DESC
Correct: True

Level: medium
Gold SQL: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
Pred SQL: SELECT AVG(singer.Age) , MIN(singer.Age) , MAX(singer.Age) FROM singer WHERE singer.Country = "value"
Correct: True

Level: medium
Gold SQL: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
Pred SQL: SELECT AVG(singer.Age) , MIN(singer.Age) , MAX(singer.Age) FROM singer WHERE singer.Country = "value"
Correct: True

Level: medium
Gold SQL: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
Pred SQL: SELECT singer.Song_Name , singer.Song_release_year FROM singer ORDER BY singer.Age ASC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
Pred SQL: SELECT singer.Song_Name , singer.Song_release_year FROM singer ORDER BY singer.Age ASC LIMIT 1
Correct: True

Level: easy
Gold SQL: SELECT DISTINCT country FROM singer WHERE age  >  20
Pred SQL: SELECT singer.Country FROM singer WHERE singer.Age > "value"
Correct: True

Level: easy
Gold SQL: SELECT DISTINCT country FROM singer WHERE age  >  20
Pred SQL: SELECT singer.Country FROM singer WHERE singer.Age > "value"
Correct: True

Level: medium
Gold SQL: SELECT country ,  count(*) FROM singer GROUP BY country
Pred SQL: SELECT singer.Country , COUNT(*) FROM singer GROUP BY singer.Country
Correct: True

Level: medium
Gold SQL: SELECT country ,  count(*) FROM singer GROUP BY country
Pred SQL: SELECT singer.Country , COUNT(*) FROM singer GROUP BY singer.Country
Correct: True

Level: hard
Gold SQL: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
Pred SQL: SELECT singer.Song_Name FROM singer WHERE singer.Age > ( SELECT AVG(singer.Age) FROM singer )
Correct: True

Level: hard
Gold SQL: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
Pred SQL: SELECT singer.Song_Name FROM singer WHERE singer.Age > ( SELECT AVG(singer.Age) FROM singer )
Correct: True

Level: medium
Gold SQL: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
Pred SQL: SELECT stadium.Location , stadium.Name FROM stadium WHERE stadium.Capacity BETWEEN "value" AND "value"
Correct: True

Level: medium
Gold SQL: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
Pred SQL: SELECT stadium.Location , stadium.Name FROM stadium WHERE stadium.Capacity BETWEEN "value" AND "value"
Correct: True

Level: medium
Gold SQL: select max(capacity), average from stadium
Pred SQL: SELECT MAX(stadium.Capacity) , AVG(stadium.Average) FROM stadium
Correct: 0

Level: medium
Gold SQL: select avg(capacity) ,  max(capacity) from stadium
Pred SQL: SELECT AVG(stadium.Average) , MAX(stadium.Capacity) FROM stadium
Correct: 0

Level: medium
Gold SQL: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
Pred SQL: SELECT stadium.Name , stadium.Capacity FROM stadium GROUP BY stadium.Name ORDER BY AVG(stadium.Average) DESC LIMIT 1
Correct: 0

Level: medium
Gold SQL: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
Pred SQL: SELECT stadium.Name , stadium.Capacity FROM stadium GROUP BY stadium.Name ORDER BY AVG(stadium.Average) DESC LIMIT 1
Correct: 0

Level: medium
Gold SQL: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
Pred SQL: SELECT COUNT(*) FROM concert WHERE concert.Year = "value" OR concert.Year = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
Pred SQL: SELECT COUNT(*) FROM concert WHERE concert.Year = "value" OR concert.Year = "value"
Correct: True

Level: medium
Gold SQL: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
Pred SQL: SELECT stadium.Name , COUNT(*) FROM concert JOIN stadium GROUP BY concert.Stadium_ID
Correct: True

Level: medium
Gold SQL: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
Pred SQL: SELECT stadium.Name , COUNT(*) FROM concert JOIN stadium GROUP BY concert.Stadium_ID
Correct: True

Level: extra
Gold SQL: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT stadium.Name , stadium.Capacity FROM stadium JOIN concert WHERE concert.Year >= "value" GROUP BY concert.Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1
Pred SQL: SELECT stadium.Name , stadium.Capacity FROM stadium JOIN concert WHERE concert.Year > "value" GROUP BY concert.Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT concert.Year FROM concert GROUP BY concert.Year ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT concert.Year FROM concert GROUP BY concert.Year ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
Pred SQL: SELECT stadium.Name FROM stadium WHERE stadium.Stadium_ID NOT IN ( SELECT concert.Stadium_ID FROM concert )
Correct: True

Level: hard
Gold SQL: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
Pred SQL: SELECT stadium.Name FROM stadium WHERE stadium.Stadium_ID NOT IN ( SELECT concert.Stadium_ID FROM concert )
Correct: True

Level: hard
Gold SQL: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30
Pred SQL: SELECT singer.Country FROM singer WHERE singer.Age < "value" INTERSECT SELECT singer.Country FROM singer WHERE singer.Age > "value"
Correct: 0

Level: hard
Gold SQL: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
Pred SQL: SELECT stadium.Name FROM stadium EXCEPT SELECT stadium.Name FROM concert JOIN stadium WHERE concert.Year = "value"
Correct: True

Level: hard
Gold SQL: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
Pred SQL: SELECT stadium.Name FROM stadium EXCEPT SELECT stadium.Name FROM concert JOIN stadium WHERE concert.Year = "value"
Correct: True

Level: medium
Gold SQL: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id
Pred SQL: SELECT concert.concert_Name , concert.Theme , COUNT(*) FROM concert JOIN singer_in_concert GROUP BY singer_in_concert.concert_ID
Correct: True

Level: medium
Gold SQL: select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id
Pred SQL: SELECT concert.concert_Name , concert.Theme , COUNT(*) FROM concert JOIN singer_in_concert GROUP BY singer_in_concert.concert_ID
Correct: True

Level: medium
Gold SQL: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
Pred SQL: SELECT singer.Name , COUNT(*) FROM singer_in_concert JOIN singer GROUP BY singer_in_concert.Singer_ID
Correct: True

Level: medium
Gold SQL: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
Pred SQL: SELECT singer.Name , COUNT(*) FROM singer_in_concert JOIN singer GROUP BY singer_in_concert.Singer_ID
Correct: True

Level: hard
Gold SQL: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
Pred SQL: SELECT singer.Name FROM singer_in_concert JOIN singer JOIN concert WHERE concert.Year = "value"
Correct: True

Level: hard
Gold SQL: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
Pred SQL: SELECT singer.Name FROM concert JOIN singer_in_concert JOIN singer WHERE concert.Year = "value"
Correct: True

Level: medium
Gold SQL: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
Pred SQL: SELECT singer.Name , singer.Country FROM singer WHERE singer.Song_Name LIKE "value"
Correct: True

Level: medium
Gold SQL: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
Pred SQL: SELECT singer.Name , singer.Country FROM singer WHERE singer.Song_Name LIKE "value"
Correct: True

Level: extra
Gold SQL: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
Pred SQL: SELECT stadium.Name , stadium.Location FROM concert JOIN stadium WHERE concert.Year = "value" INTERSECT SELECT stadium.Name , stadium.Location FROM concert JOIN stadium WHERE concert.Year = "value"
Correct: True

Level: extra
Gold SQL: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
Pred SQL: SELECT stadium.Name , stadium.Location FROM concert JOIN stadium WHERE concert.Year = "value" INTERSECT SELECT stadium.Name , stadium.Location FROM concert JOIN stadium WHERE concert.Year = "value"
Correct: True

Level: hard
Gold SQL: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
Pred SQL: SELECT COUNT(*) FROM concert JOIN stadium ORDER BY stadium.Capacity DESC LIMIT 1
Correct: 0

Level: hard
Gold SQL: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
Pred SQL: SELECT COUNT(*) FROM concert JOIN stadium WHERE stadium.Capacity = ( SELECT MAX(stadium.Capacity) FROM stadium )
Correct: 0

Level: easy
Gold SQL: SELECT count(*) FROM pets WHERE weight  >  10
Pred SQL: SELECT COUNT(*) FROM Pets WHERE Pets.weight > "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM pets WHERE weight  >  10
Pred SQL: SELECT COUNT(*) FROM Pets WHERE Pets.weight > "value"
Correct: True

Level: medium
Gold SQL: SELECT weight FROM pets ORDER BY pet_age LIMIT 1
Pred SQL: SELECT Pets.weight FROM Pets ORDER BY Pets.pet_age ASC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT weight FROM pets ORDER BY pet_age LIMIT 1
Pred SQL: SELECT Pets.weight FROM Pets ORDER BY Pets.pet_age ASC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT max(weight) ,  petType FROM pets GROUP BY petType
Pred SQL: SELECT MAX(Pets.weight) , Pets.PetType FROM Pets GROUP BY Pets.PetType
Correct: True

Level: medium
Gold SQL: SELECT max(weight) ,  petType FROM pets GROUP BY petType
Pred SQL: SELECT MAX(Pets.weight) , AVG(Pets.weight) , Pets.PetType FROM Pets GROUP BY Pets.PetType
Correct: 0

Level: medium
Gold SQL: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
Pred SQL: SELECT COUNT(*) FROM Pets JOIN Has_Pet JOIN Student WHERE Student.Age > "value"
Correct: False

Level: medium
Gold SQL: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
Pred SQL: SELECT COUNT(*) FROM Pets JOIN Has_Pet JOIN Student WHERE Student.Age > "value"
Correct: False

Level: hard
Gold SQL: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
Pred SQL: SELECT COUNT(*) FROM Pets JOIN Has_Pet JOIN Student WHERE Student.Sex = "value" AND Pets.PetType = "value"
Correct: True

Level: hard
Gold SQL: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
Pred SQL: SELECT COUNT(*) FROM Pets JOIN Has_Pet JOIN Student WHERE Student.Sex = "value" AND Pets.PetType = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT pettype) FROM pets
Pred SQL: SELECT COUNT(Pets.PetType) FROM Pets
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT pettype) FROM pets
Pred SQL: SELECT COUNT(Pets.PetType) FROM Pets
Correct: True

Level: extra
Gold SQL: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
Pred SQL: SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = "value" OR Pets.PetType = "value"
Correct: True

Level: extra
Gold SQL: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
Pred SQL: SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = "value" OR Pets.PetType = "value"
Correct: True

Level: extra
Gold SQL: select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'
Pred SQL: SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = "value" INTERSECT SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = "value"
Correct: True

Level: extra
Gold SQL: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
Pred SQL: SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = "value" INTERSECT SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = "value"
Correct: True

Level: extra
Gold SQL: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
Pred SQL: SELECT Student.Major , Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = "value" )
Correct: 0

Level: extra
Gold SQL: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
Pred SQL: SELECT Student.Major , Student.Age FROM Student EXCEPT SELECT Student.Major , Student.Age FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = "value"
Correct: 0

Level: hard
Gold SQL: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
Pred SQL: SELECT Student.StuID FROM Student EXCEPT SELECT Student.StuID FROM Student JOIN Pets WHERE Pets.PetType = "value"
Correct: 0

Level: hard
Gold SQL: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
Pred SQL: SELECT Student.StuID FROM Student EXCEPT SELECT Student.StuID FROM Student JOIN Pets WHERE Pets.PetType = "value"
Correct: 0

Level: extra
Gold SQL: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
Pred SQL: SELECT Student.Fname , Student.Age FROM Student WHERE Student.StuID IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = "value" ) EXCEPT SELECT Student.Fname , Student.Age FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = "value"
Correct: 0

Level: extra
Gold SQL: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
Pred SQL: SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = "value" EXCEPT SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = "value"
Correct: 0

Level: medium
Gold SQL: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
Pred SQL: SELECT Pets.PetType , Pets.weight FROM Pets ORDER BY Pets.pet_age ASC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
Pred SQL: SELECT Pets.PetType , Pets.weight FROM Pets ORDER BY Pets.pet_age ASC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT petid ,  weight FROM pets WHERE pet_age  >  1
Pred SQL: SELECT Pets.PetID , Pets.weight FROM Pets WHERE Pets.pet_age > "value"
Correct: True

Level: medium
Gold SQL: SELECT petid ,  weight FROM pets WHERE pet_age  >  1
Pred SQL: SELECT Pets.PetID , Pets.weight FROM Pets WHERE Pets.pet_age > "value"
Correct: True

Level: medium
Gold SQL: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
Pred SQL: SELECT AVG(Pets.pet_age) , MAX(Pets.pet_age) , Pets.PetType FROM Pets GROUP BY Pets.PetType
Correct: True

Level: medium
Gold SQL: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
Pred SQL: SELECT AVG(Pets.pet_age) , MAX(Pets.pet_age) , Pets.PetType FROM Pets GROUP BY Pets.PetType
Correct: True

Level: medium
Gold SQL: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
Pred SQL: SELECT Pets.PetType , AVG(Pets.weight) FROM Pets GROUP BY Pets.PetType
Correct: True

Level: medium
Gold SQL: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
Pred SQL: SELECT AVG(Pets.weight) , Pets.PetType FROM Pets GROUP BY Pets.PetType
Correct: True

Level: medium
Gold SQL: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
Pred SQL: SELECT Student.Fname , Student.Age FROM Student JOIN Has_Pet
Correct: True

Level: medium
Gold SQL: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
Pred SQL: SELECT Student.Fname , Student.Age FROM Student JOIN Has_Pet
Correct: True

Level: medium
Gold SQL: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
Pred SQL: SELECT Has_Pet.PetID FROM Has_Pet JOIN Student WHERE Student.LName = "value"
Correct: True

Level: medium
Gold SQL: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
Pred SQL: SELECT Has_Pet.PetID FROM Has_Pet JOIN Student WHERE Student.LName = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid
Pred SQL: SELECT COUNT(*) , Student.StuID FROM Student JOIN Has_Pet GROUP BY Student.StuID
Correct: True

Level: medium
Gold SQL: select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid
Pred SQL: SELECT COUNT(*) , Has_Pet.StuID FROM Has_Pet GROUP BY Has_Pet.StuID
Correct: False

Level: medium
Gold SQL: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
Pred SQL: SELECT Student.Fname , Student.Sex FROM Student JOIN Has_Pet GROUP BY Has_Pet.StuID HAVING COUNT(*) > "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
Pred SQL: SELECT Student.Fname , Student.Sex FROM Student JOIN Has_Pet GROUP BY Has_Pet.StuID HAVING COUNT(*) >= "value"
Correct: 0

Level: hard
Gold SQL: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
Pred SQL: SELECT Student.LName FROM Has_Pet JOIN Student JOIN Pets WHERE Pets.pet_age = "value" AND Pets.PetType = "value"
Correct: True

Level: hard
Gold SQL: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
Pred SQL: SELECT Student.LName FROM Has_Pet JOIN Student JOIN Pets WHERE Pets.pet_age = "value" AND Pets.pet_age = "value"
Correct: 0

Level: extra
Gold SQL: select avg(age) from student where stuid not in (select stuid from has_pet)
Pred SQL: SELECT AVG(Student.Age) FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet )
Correct: True

Level: extra
Gold SQL: select avg(age) from student where stuid not in (select stuid from has_pet)
Pred SQL: SELECT AVG(Student.Age) FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet )
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM CONTINENTS;
Pred SQL: SELECT COUNT(*) FROM continents
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM CONTINENTS;
Pred SQL: SELECT COUNT(*) FROM continents
Correct: True

Level: medium
Gold SQL: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
Pred SQL: SELECT continents.ContId , continents.Continent , COUNT(*) FROM continents JOIN countries GROUP BY continents.ContId
Correct: True

Level: medium
Gold SQL: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
Pred SQL: SELECT continents.Continent , COUNT(*) , countries.Continent FROM continents JOIN countries GROUP BY countries.Continent
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM COUNTRIES;
Pred SQL: SELECT COUNT(*) FROM countries
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM COUNTRIES;
Pred SQL: SELECT COUNT(*) FROM countries
Correct: True

Level: medium
Gold SQL: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
Pred SQL: SELECT car_makers.Maker , car_makers.FullName , car_makers.Id FROM car_makers JOIN model_list GROUP BY model_list.Maker
Correct: 0

Level: medium
Gold SQL: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
Pred SQL: SELECT car_makers.FullName , COUNT(*) , car_makers.Id FROM model_list JOIN car_makers GROUP BY car_makers.Id
Correct: True

Level: hard
Gold SQL: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
Pred SQL: SELECT car_names.Model FROM cars_data JOIN car_names ORDER BY cars_data.Horsepower ASC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
Pred SQL: SELECT car_names.Model FROM cars_data JOIN car_names ORDER BY cars_data.Horsepower ASC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
Pred SQL: SELECT car_names.Model FROM car_names JOIN cars_data WHERE cars_data.Weight < ( SELECT AVG(cars_data.Weight) FROM cars_data )
Correct: True

Level: extra
Gold SQL: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
Pred SQL: SELECT car_names.Model FROM cars_data JOIN car_names WHERE cars_data.Weight < ( SELECT AVG(cars_data.Weight) FROM cars_data )
Correct: True

Level: extra
Gold SQL: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
Pred SQL: SELECT car_makers.Maker FROM car_makers JOIN cars_data WHERE cars_data.Year = "value"
Correct: False

Level: extra
Gold SQL: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
Pred SQL: SELECT car_makers.Maker FROM car_makers JOIN cars_data WHERE cars_data.Year = "value"
Correct: False

Level: extra
Gold SQL: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
Pred SQL: SELECT car_names.Make , cars_data.Year FROM cars_data JOIN car_names ORDER BY cars_data.Year ASC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
Pred SQL: SELECT car_makers.Maker , cars_data.Year FROM model_list JOIN car_makers JOIN cars_data ORDER BY cars_data.Year ASC LIMIT 1
Correct: 0

Level: hard
Gold SQL: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
Pred SQL: SELECT car_names.Model FROM car_names JOIN cars_data WHERE cars_data.Year > "value"
Correct: False

Level: hard
Gold SQL: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
Pred SQL: SELECT model_list.Model FROM model_list JOIN cars_data WHERE cars_data.Year > "value"
Correct: False

Level: hard
Gold SQL: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
Pred SQL: SELECT continents.Continent , COUNT(*) FROM countries JOIN continents JOIN car_makers GROUP BY continents.Continent
Correct: True

Level: hard
Gold SQL: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
Pred SQL: SELECT continents.Continent , COUNT(*) FROM countries JOIN continents JOIN car_makers GROUP BY continents.Continent
Correct: True

Level: extra
Gold SQL: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
Pred SQL: SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryName ORDER BY COUNT(*) DESC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
Pred SQL: SELECT countries.CountryName FROM car_makers JOIN countries GROUP BY car_makers.Country ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;
Pred SQL: SELECT COUNT(*) , car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Maker
Correct: 0

Level: medium
Gold SQL: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;
Pred SQL: SELECT COUNT(*) , car_makers.Id , car_makers.FullName FROM car_makers JOIN model_list GROUP BY car_makers.Maker
Correct: 0

Level: medium
Gold SQL: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
Pred SQL: SELECT cars_data.Accelerate FROM cars_data JOIN car_names WHERE car_names.Make = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
Pred SQL: SELECT cars_data.Accelerate FROM cars_data JOIN car_names WHERE car_names.Make = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
Pred SQL: SELECT COUNT(*) FROM car_makers JOIN countries WHERE countries.CountryName = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
Pred SQL: SELECT COUNT(*) FROM car_makers JOIN countries WHERE countries.CountryName = "value"
Correct: True

Level: hard
Gold SQL: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
Pred SQL: SELECT COUNT(*) FROM model_list JOIN car_makers JOIN countries WHERE countries.CountryName = "value"
Correct: True

Level: hard
Gold SQL: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
Pred SQL: SELECT COUNT(*) FROM model_list JOIN countries JOIN car_makers WHERE countries.CountryName = "value"
Correct: True

Level: easy
Gold SQL: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
Pred SQL: SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = "value"
Correct: True

Level: easy
Gold SQL: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
Pred SQL: SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = "value"
Correct: True

Level: medium
Gold SQL: select min(weight) from cars_data where cylinders  =  8 and year  =  1974
Pred SQL: SELECT MIN(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = "value" AND cars_data.Year = "value"
Correct: True

Level: medium
Gold SQL: select min(weight) from cars_data where cylinders  =  8 and year  =  1974
Pred SQL: SELECT MIN(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = "value" AND cars_data.Year = "value"
Correct: True

Level: medium
Gold SQL: SELECT Maker ,  Model FROM MODEL_LIST;
Pred SQL: SELECT car_makers.Maker , model_list.Model FROM car_makers JOIN model_list
Correct: 0

Level: medium
Gold SQL: SELECT Maker ,  Model FROM MODEL_LIST;
Pred SQL: SELECT car_makers.Maker , model_list.Model FROM model_list JOIN car_makers
Correct: 0

Level: medium
Gold SQL: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
Pred SQL: SELECT countries.CountryName , countries.CountryId FROM countries JOIN car_makers
Correct: 0

Level: medium
Gold SQL: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
Pred SQL: SELECT countries.CountryName , car_makers.Country FROM countries JOIN car_makers GROUP BY car_makers.Country HAVING COUNT(*) >= "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
Pred SQL: SELECT COUNT(*) FROM cars_data WHERE cars_data.Horsepower > "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
Pred SQL: SELECT COUNT(*) FROM cars_data WHERE cars_data.Horsepower > "value"
Correct: True

Level: medium
Gold SQL: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
Pred SQL: SELECT AVG(cars_data.Weight) , cars_data.Year FROM cars_data GROUP BY cars_data.Year
Correct: True

Level: medium
Gold SQL: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
Pred SQL: SELECT AVG(cars_data.Weight) , MAX(cars_data.Weight) , cars_data.Year FROM cars_data GROUP BY cars_data.Year
Correct: 0

Level: extra
Gold SQL: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
Pred SQL: SELECT countries.CountryName FROM car_makers JOIN continents JOIN countries WHERE continents.Continent = "value" GROUP BY countries.CountryId HAVING COUNT(*) >= "value"
Correct: 0

Level: extra
Gold SQL: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
Pred SQL: SELECT countries.CountryName FROM countries JOIN car_makers WHERE countries.Continent = "value" GROUP BY countries.CountryId HAVING COUNT(*) >= "value"
Correct: 0

Level: extra
Gold SQL: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
Pred SQL: SELECT MAX(cars_data.Horsepower) , car_names.Make FROM cars_data JOIN car_names WHERE cars_data.Cylinders = "value"
Correct: 0

Level: extra
Gold SQL: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
Pred SQL: SELECT MAX(cars_data.Horsepower) , MAX(cars_data.Horsepower) FROM car_names JOIN cars_data WHERE cars_data.Cylinders = "value"
Correct: 0

Level: hard
Gold SQL: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;
Pred SQL: SELECT model_list.Model FROM cars_data JOIN model_list ORDER BY cars_data.MPG DESC LIMIT 1
Correct: False

Level: hard
Gold SQL: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;
Pred SQL: SELECT car_names.Model FROM cars_data JOIN car_names ORDER BY cars_data.MPG DESC LIMIT 1
Correct: True

Level: easy
Gold SQL: SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;
Pred SQL: SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < "value"
Correct: True

Level: easy
Gold SQL: select avg(horsepower) from cars_data where year  <  1980;
Pred SQL: SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < "value"
Correct: True

Level: medium
Gold SQL: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
Pred SQL: SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names WHERE car_names.Make = "value"
Correct: 0

Level: medium
Gold SQL: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
Pred SQL: SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names WHERE car_names.Make = "value"
Correct: 0

Level: medium
Gold SQL: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
Pred SQL: SELECT MAX(cars_data.Accelerate) , cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders
Correct: True

Level: medium
Gold SQL: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
Pred SQL: SELECT MAX(cars_data.Accelerate) , cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders
Correct: True

Level: hard
Gold SQL: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
Pred SQL: SELECT car_names.Model FROM car_names GROUP BY car_names.Model ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
Pred SQL: SELECT model_list.Model FROM model_list GROUP BY model_list.Model ORDER BY COUNT(model_list.ModelId) DESC LIMIT 1
Correct: 0

Level: easy
Gold SQL: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
Pred SQL: SELECT COUNT(*) FROM cars_data WHERE cars_data.Cylinders > "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
Pred SQL: SELECT COUNT(*) FROM cars_data WHERE cars_data.Cylinders > "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
Pred SQL: SELECT COUNT(*) FROM cars_data WHERE cars_data.Year = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
Pred SQL: SELECT COUNT(*) FROM cars_data WHERE cars_data.Year = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
Pred SQL: SELECT COUNT(*) FROM model_list JOIN car_makers WHERE car_makers.FullName = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
Pred SQL: SELECT COUNT(*) FROM model_list JOIN car_makers WHERE car_makers.FullName = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
Pred SQL: SELECT car_makers.FullName , car_makers.Id FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING COUNT(*) > "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
Pred SQL: SELECT car_makers.Maker , car_makers.Id FROM model_list JOIN car_makers GROUP BY model_list.Maker HAVING COUNT(*) > "value"
Correct: 0

Level: extra
Gold SQL: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
Pred SQL: SELECT model_list.Model FROM model_list JOIN car_makers WHERE car_makers.FullName = "value" OR car_makers.FullName > "value"
Correct: 0

Level: extra
Gold SQL: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
Pred SQL: SELECT model_list.Model FROM model_list JOIN car_makers WHERE car_makers.FullName = "value" OR car_makers.FullName > "value"
Correct: 0

Level: easy
Gold SQL: select distinct year from cars_data where weight between 3000 and 4000;
Pred SQL: SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight BETWEEN "value" AND "value"
Correct: True

Level: easy
Gold SQL: select distinct year from cars_data where weight between 3000 and 4000;
Pred SQL: SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < "value" INTERSECT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight > "value"
Correct: 0

Level: medium
Gold SQL: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
Pred SQL: SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Accelerate DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
Pred SQL: SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Accelerate DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
Pred SQL: SELECT cars_data.Cylinders FROM cars_data JOIN car_names WHERE car_names.Make = "value" ORDER BY cars_data.Accelerate ASC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
Pred SQL: SELECT cars_data.Cylinders FROM cars_data JOIN car_names WHERE car_names.Make = "value" ORDER BY cars_data.Accelerate ASC LIMIT 1
Correct: 0

Level: hard
Gold SQL: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
Pred SQL: SELECT COUNT(*) FROM cars_data ORDER BY cars_data.Horsepower DESC LIMIT 1
Correct: 0

Level: hard
Gold SQL: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
Pred SQL: SELECT COUNT(*) FROM cars_data ORDER BY cars_data.Horsepower DESC LIMIT 1
Correct: 0

Level: medium
Gold SQL: select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
Pred SQL: SELECT COUNT(*) FROM ( SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country HAVING COUNT(*) > "value" )
Correct: 0

Level: medium
Gold SQL: select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
Pred SQL: SELECT COUNT(*) FROM ( SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country HAVING COUNT(*) > "value" )
Correct: 0

Level: easy
Gold SQL: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
Pred SQL: SELECT COUNT(*) FROM cars_data WHERE cars_data.Cylinders > "value"
Correct: True

Level: easy
Gold SQL: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
Pred SQL: SELECT COUNT(*) FROM cars_data WHERE cars_data.Cylinders > "value"
Correct: True

Level: extra
Gold SQL: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
Pred SQL: SELECT car_names.Model FROM cars_data JOIN car_names WHERE cars_data.Cylinders = "value" ORDER BY cars_data.Horsepower DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
Pred SQL: SELECT car_names.Model FROM cars_data JOIN car_names WHERE cars_data.Cylinders = "value" ORDER BY cars_data.Horsepower DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;
Pred SQL: SELECT car_names.Make , car_names.Make FROM car_names JOIN cars_data WHERE cars_data.Horsepower > "value" EXCEPT SELECT car_names.Make , cars_data.Horsepower FROM car_names JOIN cars_data WHERE cars_data.Horsepower > "value" OR cars_data.Cylinders > "value"
Correct: 0

Level: extra
Gold SQL: select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;
Pred SQL: SELECT car_names.MakeId , car_names.Make FROM car_names JOIN cars_data WHERE cars_data.Horsepower < ( SELECT MIN(cars_data.Cylinders) FROM cars_data WHERE cars_data.Horsepower < "value" )
Correct: 0

Level: medium
Gold SQL: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
Pred SQL: SELECT MAX(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = "value" OR cars_data.Year < "value"
Correct: True

Level: medium
Gold SQL: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
Pred SQL: SELECT MAX(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = "value" OR cars_data.Year < "value"
Correct: True

Level: extra
Gold SQL: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
Pred SQL: SELECT model_list.Model FROM model_list JOIN car_names JOIN car_makers WHERE car_names.Make = "value" EXCEPT SELECT model_list.Model FROM model_list JOIN car_makers JOIN cars_data WHERE cars_data.Weight > "value"
Correct: 0

Level: extra
Gold SQL: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
Pred SQL: SELECT model_list.Model FROM model_list JOIN car_names JOIN car_makers WHERE car_names.Make = "value" EXCEPT SELECT model_list.Model FROM model_list JOIN car_makers WHERE car_makers.Maker > "value"
Correct: 0

Level: hard
Gold SQL: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
Pred SQL: SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN ( SELECT car_makers.Country FROM car_makers )
Correct: 0

Level: hard
Gold SQL: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
Pred SQL: SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN ( SELECT car_makers.Country FROM car_makers )
Correct: 0

Level: extra
Gold SQL: select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;
Pred SQL: SELECT car_makers.Id , car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING COUNT(*) >= "value" INTERSECT SELECT car_makers.Id , car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING COUNT(*) >= "value"
Correct: 0

Level: extra
Gold SQL: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;
Pred SQL: SELECT car_makers.Id , car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING COUNT(*) >= "value" INTERSECT SELECT car_makers.Id , car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING COUNT(*) >= "value"
Correct: 0

Level: extra
Gold SQL: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';
Pred SQL: SELECT countries.CountryId , countries.CountryName FROM car_makers JOIN countries WHERE car_makers.Maker = "value" UNION SELECT countries.CountryId , countries.CountryName FROM car_makers JOIN countries GROUP BY countries.CountryId HAVING COUNT(*) > "value"
Correct: 0

Level: extra
Gold SQL: select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';
Pred SQL: SELECT countries.CountryId , countries.CountryName FROM car_makers JOIN countries WHERE car_makers.Maker = "value" UNION SELECT countries.CountryId , countries.CountryName FROM car_makers JOIN countries GROUP BY countries.CountryId HAVING COUNT(*) > "value"
Correct: 0

Level: easy
Gold SQL: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
Pred SQL: SELECT airlines.Country FROM airlines WHERE airlines.Airline = "value"
Correct: True

Level: easy
Gold SQL: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
Pred SQL: SELECT airlines.Country FROM airlines WHERE airlines.Airline = "value"
Correct: True

Level: easy
Gold SQL: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
Pred SQL: SELECT airlines.Abbreviation FROM airlines WHERE airlines.Airline = "value"
Correct: True

Level: easy
Gold SQL: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
Pred SQL: SELECT airlines.Abbreviation FROM airlines WHERE airlines.Airline = "value"
Correct: True

Level: medium
Gold SQL: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
Pred SQL: SELECT airlines.Airline , airlines.Abbreviation FROM airlines WHERE airlines.Country = "value"
Correct: True

Level: medium
Gold SQL: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
Pred SQL: SELECT airlines.Airline , airlines.Abbreviation FROM airlines WHERE airlines.Country = "value"
Correct: True

Level: medium
Gold SQL: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
Pred SQL: SELECT airports.AirportCode , airports.AirportName FROM airports WHERE airports.City = "value"
Correct: True

Level: medium
Gold SQL: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
Pred SQL: SELECT airports.AirportCode , airports.AirportName FROM airports WHERE airports.City = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM AIRLINES
Pred SQL: SELECT COUNT(*) FROM airlines
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM AIRLINES
Pred SQL: SELECT COUNT(*) FROM airlines
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM AIRPORTS
Pred SQL: SELECT COUNT(*) FROM airports
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM AIRPORTS
Pred SQL: SELECT COUNT(*) FROM airports
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM FLIGHTS
Pred SQL: SELECT COUNT(*) FROM flights
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM FLIGHTS
Pred SQL: SELECT COUNT(*) FROM flights
Correct: True

Level: easy
Gold SQL: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
Pred SQL: SELECT airlines.Airline FROM airlines WHERE airlines.Abbreviation = "value"
Correct: True

Level: easy
Gold SQL: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
Pred SQL: SELECT airlines.Airline FROM airlines WHERE airlines.Abbreviation = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
Pred SQL: SELECT COUNT(*) FROM airlines WHERE airlines.Country = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
Pred SQL: SELECT COUNT(*) FROM airlines WHERE airlines.Country = "value"
Correct: True

Level: medium
Gold SQL: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
Pred SQL: SELECT airports.City , airports.Country FROM airports WHERE airports.AirportName = "value"
Correct: True

Level: medium
Gold SQL: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
Pred SQL: SELECT airports.City , airports.Country FROM airports WHERE airports.AirportName = "value"
Correct: True

Level: easy
Gold SQL: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
Pred SQL: SELECT airports.AirportName FROM airports WHERE airports.AirportCode = "value"
Correct: True

Level: easy
Gold SQL: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
Pred SQL: SELECT airports.AirportName FROM airports WHERE airports.AirportCode = "value"
Correct: True

Level: easy
Gold SQL: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
Pred SQL: SELECT airports.AirportName FROM airports WHERE airports.City = "value"
Correct: True

Level: easy
Gold SQL: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
Pred SQL: SELECT airports.AirportName FROM airports WHERE airports.City = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
Pred SQL: SELECT COUNT(*) FROM flights WHERE flights.SourceAirport = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
Pred SQL: SELECT COUNT(*) FROM flights WHERE flights.SourceAirport = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
Pred SQL: SELECT COUNT(*) FROM flights WHERE flights.DestAirport = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
Pred SQL: SELECT COUNT(*) FROM flights WHERE flights.DestAirport = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
Pred SQL: SELECT COUNT(*) FROM airports JOIN flights WHERE airports.City = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
Pred SQL: SELECT COUNT(*) FROM airports JOIN flights WHERE airports.City = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
Pred SQL: SELECT COUNT(*) FROM airports JOIN flights WHERE airports.City = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
Pred SQL: SELECT COUNT(*) FROM airports JOIN flights WHERE airports.City = "value"
Correct: True

Level: hard
Gold SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
Pred SQL: SELECT COUNT(*) FROM airports JOIN flights JOIN airports WHERE airports.City = "value"
Correct: 0

Level: hard
Gold SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
Pred SQL: SELECT COUNT(*) FROM airports JOIN flights WHERE airports.City = "value"
Correct: 0

Level: medium
Gold SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
Pred SQL: SELECT COUNT(*) FROM airlines JOIN flights WHERE airlines.Airline = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
Pred SQL: SELECT COUNT(*) FROM flights JOIN airlines WHERE airlines.Airline = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
Pred SQL: SELECT COUNT(*) FROM airlines JOIN flights WHERE airlines.Airline = "value" AND flights.DestAirport = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
Pred SQL: SELECT COUNT(*) FROM flights JOIN airports JOIN airlines WHERE airlines.Airline = "value"
Correct: 0

Level: medium
Gold SQL: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
Pred SQL: SELECT COUNT(*) FROM airlines JOIN flights WHERE airlines.Airline = "value" AND flights.SourceAirport = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
Pred SQL: SELECT COUNT(*) FROM airports JOIN flights JOIN airlines WHERE airlines.Airline = "value" AND flights.SourceAirport = "value"
Correct: False

Level: hard
Gold SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
Pred SQL: SELECT COUNT(*) FROM flights JOIN airports JOIN airlines WHERE airports.City = "value" AND airlines.Airline = "value"
Correct: True

Level: hard
Gold SQL: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
Pred SQL: SELECT COUNT(*) FROM flights JOIN airports JOIN airlines WHERE airports.City = "value" AND airlines.Airline = "value"
Correct: True

Level: extra
Gold SQL: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT airports.City FROM airports JOIN flights GROUP BY airports.City ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT airports.City FROM airports JOIN flights GROUP BY flights.DestAirport ORDER BY COUNT(*) DESC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT airports.City FROM airports JOIN flights GROUP BY airports.City ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT airports.City FROM airports JOIN flights GROUP BY flights.SourceAirport ORDER BY COUNT(*) DESC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT flights.SourceAirport FROM flights GROUP BY flights.SourceAirport ORDER BY COUNT(*) DESC LIMIT 1
Correct: False

Level: extra
Gold SQL: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT flights.SourceAirport FROM flights GROUP BY flights.SourceAirport ORDER BY COUNT(*) DESC LIMIT 1
Correct: False

Level: extra
Gold SQL: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
Pred SQL: SELECT flights.SourceAirport FROM flights GROUP BY flights.SourceAirport ORDER BY COUNT(*) ASC LIMIT 1
Correct: False

Level: extra
Gold SQL: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
Pred SQL: SELECT flights.SourceAirport FROM flights GROUP BY flights.SourceAirport ORDER BY COUNT(*) ASC LIMIT 1
Correct: False

Level: extra
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY airlines.Airline ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY airlines.Airline ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
Pred SQL: SELECT airlines.Abbreviation , airlines.Country FROM airlines JOIN flights GROUP BY flights.Airline ORDER BY COUNT(*) ASC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
Pred SQL: SELECT airlines.Abbreviation , airlines.Country FROM airlines JOIN flights GROUP BY flights.Airline ORDER BY COUNT(*) ASC LIMIT 1
Correct: 0

Level: medium
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
Pred SQL: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
Pred SQL: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
Pred SQL: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.DestAirport = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
Pred SQL: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.DestAirport = "value"
Correct: True

Level: extra
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
Pred SQL: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = "value" INTERSECT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = "value"
Correct: True

Level: extra
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
Pred SQL: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = "value" INTERSECT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = "value"
Correct: True

Level: extra
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
Pred SQL: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = "value" EXCEPT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = "value"
Correct: True

Level: extra
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
Pred SQL: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = "value" EXCEPT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
Pred SQL: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY flights.Airline HAVING COUNT(*) >= "value"
Correct: 0

Level: medium
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
Pred SQL: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY flights.Airline HAVING COUNT(*) >= "value"
Correct: 0

Level: medium
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
Pred SQL: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY flights.Airline HAVING COUNT(*) < "value"
Correct: 0

Level: medium
Gold SQL: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
Pred SQL: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY flights.Airline HAVING COUNT(*) < "value"
Correct: 0

Level: medium
Gold SQL: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
Pred SQL: SELECT flights.FlightNo FROM flights JOIN airlines WHERE airlines.Airline = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
Pred SQL: SELECT flights.FlightNo FROM airlines JOIN flights WHERE airlines.Airline = "value"
Correct: True

Level: easy
Gold SQL: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
Pred SQL: SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = "value"
Correct: True

Level: easy
Gold SQL: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
Pred SQL: SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = "value"
Correct: True

Level: easy
Gold SQL: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
Pred SQL: SELECT flights.FlightNo FROM flights WHERE flights.DestAirport = "value"
Correct: True

Level: easy
Gold SQL: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
Pred SQL: SELECT flights.FlightNo FROM airports JOIN flights WHERE flights.DestAirport = "value"
Correct: False

Level: medium
Gold SQL: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
Pred SQL: SELECT flights.FlightNo FROM airports JOIN flights WHERE airports.City = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
Pred SQL: SELECT flights.FlightNo FROM airports JOIN flights WHERE airports.City = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
Pred SQL: SELECT flights.FlightNo FROM airports JOIN flights WHERE airports.City = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
Pred SQL: SELECT flights.FlightNo FROM airports JOIN flights WHERE airports.City = "value"
Correct: True

Level: hard
Gold SQL: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
Pred SQL: SELECT COUNT(*) FROM airports JOIN flights WHERE airports.City = "value" OR airports.City = "value"
Correct: True

Level: hard
Gold SQL: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
Pred SQL: SELECT COUNT(*) FROM airports JOIN flights WHERE airports.City = "value" OR airports.City = "value"
Correct: True

Level: hard
Gold SQL: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
Pred SQL: SELECT airports.AirportName FROM airports WHERE airports.AirportCode NOT IN ( SELECT flights.SourceAirport FROM flights )
Correct: 0

Level: hard
Gold SQL: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
Pred SQL: SELECT airports.AirportName FROM airports WHERE airports.AirportCode NOT IN ( SELECT flights.DestAirport FROM flights )
Correct: 0

Level: easy
Gold SQL: SELECT count(*) FROM employee
Pred SQL: SELECT COUNT(*) FROM employee
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM employee
Pred SQL: SELECT COUNT(*) FROM employee
Correct: True

Level: easy
Gold SQL: SELECT name FROM employee ORDER BY age
Pred SQL: SELECT employee.Name FROM employee ORDER BY employee.Age ASC
Correct: True

Level: easy
Gold SQL: SELECT name FROM employee ORDER BY age
Pred SQL: SELECT employee.Name FROM employee ORDER BY employee.Age ASC
Correct: True

Level: medium
Gold SQL: SELECT count(*) ,  city FROM employee GROUP BY city
Pred SQL: SELECT employee.City , COUNT(*) FROM employee GROUP BY employee.City
Correct: True

Level: medium
Gold SQL: SELECT count(*) ,  city FROM employee GROUP BY city
Pred SQL: SELECT employee.City , COUNT(*) FROM employee GROUP BY employee.City
Correct: True

Level: medium
Gold SQL: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
Pred SQL: SELECT employee.City FROM employee WHERE employee.Age > "value" GROUP BY employee.City HAVING COUNT(*) > "value"
Correct: 0

Level: medium
Gold SQL: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
Pred SQL: SELECT employee.City FROM employee WHERE employee.Age > "value" GROUP BY employee.City HAVING COUNT(*) > "value"
Correct: 0

Level: medium
Gold SQL: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
Pred SQL: SELECT COUNT(*) , shop.Location FROM shop GROUP BY shop.Location
Correct: True

Level: medium
Gold SQL: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
Pred SQL: SELECT COUNT(*) , shop.Location FROM shop GROUP BY shop.Location
Correct: True

Level: medium
Gold SQL: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
Pred SQL: SELECT shop.Manager_name , shop.District FROM shop ORDER BY shop.Number_products DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
Pred SQL: SELECT shop.Manager_name , shop.District FROM shop ORDER BY shop.Number_products DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT min(Number_products) ,  max(Number_products) FROM shop
Pred SQL: SELECT MIN(shop.Number_products) , MAX(shop.Number_products) FROM shop
Correct: True

Level: medium
Gold SQL: SELECT min(Number_products) ,  max(Number_products) FROM shop
Pred SQL: SELECT MIN(shop.Number_products) , MAX(shop.Number_products) FROM shop
Correct: True

Level: medium
Gold SQL: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
Pred SQL: SELECT shop.Name , shop.Location , shop.District FROM shop ORDER BY shop.Number_products DESC
Correct: True

Level: medium
Gold SQL: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
Pred SQL: SELECT shop.Name , shop.Location , shop.District FROM shop ORDER BY shop.Number_products DESC
Correct: True

Level: hard
Gold SQL: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
Pred SQL: SELECT shop.Name FROM shop WHERE shop.Number_products > ( SELECT AVG(shop.Number_products) FROM shop )
Correct: True

Level: hard
Gold SQL: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
Pred SQL: SELECT shop.Name FROM shop WHERE shop.Number_products > ( SELECT AVG(shop.Number_products) FROM shop )
Correct: True

Level: extra
Gold SQL: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT employee.Name FROM evaluation JOIN employee GROUP BY evaluation.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT employee.Name FROM employee JOIN evaluation GROUP BY evaluation.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
Pred SQL: SELECT employee.Name FROM employee JOIN evaluation ORDER BY evaluation.Bonus DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
Pred SQL: SELECT employee.Name FROM employee JOIN evaluation ORDER BY evaluation.Bonus DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
Pred SQL: SELECT employee.Name FROM employee WHERE employee.Employee_ID NOT IN ( SELECT evaluation.Employee_ID FROM evaluation )
Correct: True

Level: hard
Gold SQL: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
Pred SQL: SELECT employee.Name FROM employee WHERE employee.Employee_ID NOT IN ( SELECT evaluation.Employee_ID FROM evaluation )
Correct: True

Level: extra
Gold SQL: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT shop.Name FROM hiring JOIN shop GROUP BY hiring.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT shop.Name FROM shop JOIN hiring GROUP BY hiring.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
Pred SQL: SELECT shop.Name FROM shop WHERE shop.Shop_ID NOT IN ( SELECT hiring.Shop_ID FROM hiring )
Correct: True

Level: hard
Gold SQL: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
Pred SQL: SELECT shop.Name FROM shop WHERE shop.Shop_ID NOT IN ( SELECT hiring.Shop_ID FROM hiring )
Correct: True

Level: medium
Gold SQL: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
Pred SQL: SELECT shop.Name , COUNT(*) FROM hiring JOIN shop GROUP BY hiring.Shop_ID
Correct: 0

Level: medium
Gold SQL: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
Pred SQL: SELECT COUNT(*) , shop.Name FROM shop JOIN hiring GROUP BY shop.Name
Correct: True

Level: easy
Gold SQL: SELECT sum(bonus) FROM evaluation
Pred SQL: SELECT SUM(evaluation.Bonus) FROM evaluation
Correct: True

Level: easy
Gold SQL: SELECT sum(bonus) FROM evaluation
Pred SQL: SELECT SUM(evaluation.Bonus) FROM evaluation
Correct: True

Level: easy
Gold SQL: SELECT * FROM hiring
Pred SQL: SELECT * FROM hiring
Correct: True

Level: easy
Gold SQL: SELECT * FROM hiring
Pred SQL: SELECT * FROM hiring
Correct: True

Level: hard
Gold SQL: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
Pred SQL: SELECT shop.District FROM shop WHERE shop.Number_products < "value" INTERSECT SELECT shop.District FROM shop WHERE shop.Number_products > "value"
Correct: True

Level: hard
Gold SQL: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
Pred SQL: SELECT shop.District FROM shop WHERE shop.Number_products < "value" INTERSECT SELECT shop.District FROM shop WHERE shop.Number_products > "value"
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT LOCATION) FROM shop
Pred SQL: SELECT COUNT(shop.Location) FROM shop
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT LOCATION) FROM shop
Pred SQL: SELECT COUNT(shop.Location) FROM shop
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM Documents
Pred SQL: SELECT COUNT(*) FROM Documents
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM Documents
Pred SQL: SELECT COUNT(*) FROM Documents
Correct: True

Level: medium
Gold SQL: SELECT document_id ,  document_name ,  document_description FROM Documents
Pred SQL: SELECT Documents.Document_ID , Documents.Document_Name , Documents.Document_Description FROM Documents
Correct: True

Level: medium
Gold SQL: SELECT document_id ,  document_name ,  document_description FROM Documents
Pred SQL: SELECT Documents.Document_ID , Documents.Document_Name , Documents.Document_Description FROM Documents
Correct: True

Level: medium
Gold SQL: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
Pred SQL: SELECT Documents.Document_Name , Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE "value"
Correct: True

Level: medium
Gold SQL: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
Pred SQL: SELECT Documents.Document_Name , Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE "value"
Correct: True

Level: medium
Gold SQL: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
Pred SQL: SELECT Documents.Document_ID , Documents.Template_ID , Documents.Document_Description FROM Documents WHERE Documents.Document_Name = "value"
Correct: True

Level: medium
Gold SQL: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
Pred SQL: SELECT Documents.Document_ID , Documents.Template_ID , Documents.Document_Description FROM Documents WHERE Documents.Document_Name = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT template_id) FROM Documents
Pred SQL: SELECT COUNT(Documents.Template_ID) FROM Documents
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT template_id) FROM Documents
Pred SQL: SELECT COUNT(Documents.Template_ID) FROM Documents
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
Pred SQL: SELECT COUNT(*) FROM Templates JOIN Documents WHERE Templates.Template_Type_Code = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
Pred SQL: SELECT COUNT(*) FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = "value"
Correct: True

Level: medium
Gold SQL: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
Pred SQL: SELECT Documents.Template_ID , COUNT(*) FROM Documents GROUP BY Documents.Template_ID
Correct: True

Level: medium
Gold SQL: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
Pred SQL: SELECT Documents.Template_ID , COUNT(*) FROM Documents GROUP BY Documents.Template_ID
Correct: True

Level: extra
Gold SQL: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Templates.Template_ID , Templates.Template_Type_Code FROM Templates JOIN Documents GROUP BY Templates.Template_ID ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Templates.Template_ID , Templates.Template_Type_Code FROM Templates JOIN Documents GROUP BY Templates.Template_ID ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: easy
Gold SQL: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
Pred SQL: SELECT Documents.Template_ID FROM Documents GROUP BY Documents.Template_ID HAVING COUNT(*) > "value"
Correct: True

Level: easy
Gold SQL: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
Pred SQL: SELECT Documents.Template_ID FROM Documents GROUP BY Documents.Template_ID HAVING COUNT(*) > "value"
Correct: True

Level: hard
Gold SQL: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
Pred SQL: SELECT Templates.Template_ID FROM Templates EXCEPT SELECT Documents.Template_ID FROM Documents
Correct: True

Level: hard
Gold SQL: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
Pred SQL: SELECT Templates.Template_ID FROM Templates EXCEPT SELECT Documents.Template_ID FROM Documents
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM Templates
Pred SQL: SELECT COUNT(*) FROM Templates
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM Templates
Pred SQL: SELECT COUNT(*) FROM Templates
Correct: True

Level: medium
Gold SQL: SELECT template_id ,  version_number ,  template_type_code FROM Templates
Pred SQL: SELECT Templates.Template_ID , Templates.Version_Number , Templates.Template_Type_Code FROM Templates
Correct: True

Level: medium
Gold SQL: SELECT template_id ,  version_number ,  template_type_code FROM Templates
Pred SQL: SELECT Templates.Template_ID , Templates.Version_Number , Templates.Template_Type_Code FROM Templates
Correct: True

Level: easy
Gold SQL: SELECT DISTINCT template_type_code FROM Templates
Pred SQL: SELECT Templates.Template_Type_Code FROM Templates
Correct: True

Level: easy
Gold SQL: SELECT DISTINCT template_type_code FROM Templates
Pred SQL: SELECT Templates.Template_Type_Code FROM Templates
Correct: True

Level: medium
Gold SQL: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
Pred SQL: SELECT Templates.Template_ID FROM Templates WHERE Templates.Template_Type_Code = "value" OR Templates.Template_Type_Code = "value"
Correct: True

Level: medium
Gold SQL: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
Pred SQL: SELECT Templates.Template_ID FROM Templates WHERE Templates.Template_Type_Code = "value" OR Templates.Template_Type_Code = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
Pred SQL: SELECT COUNT(*) FROM Templates WHERE Templates.Template_Type_Code = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
Pred SQL: SELECT COUNT(*) FROM Templates WHERE Templates.Template_Type_Code = "value"
Correct: True

Level: medium
Gold SQL: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
Pred SQL: SELECT Templates.Version_Number , Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > "value"
Correct: True

Level: medium
Gold SQL: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
Pred SQL: SELECT Templates.Version_Number , Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > "value"
Correct: True

Level: medium
Gold SQL: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
Pred SQL: SELECT Templates.Template_Type_Code , COUNT(*) FROM Templates GROUP BY Templates.Template_Type_Code
Correct: True

Level: medium
Gold SQL: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
Pred SQL: SELECT Templates.Template_Type_Code , COUNT(*) FROM Templates GROUP BY Templates.Template_Type_Code
Correct: True

Level: hard
Gold SQL: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: easy
Gold SQL: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
Pred SQL: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code HAVING COUNT(*) < "value"
Correct: True

Level: easy
Gold SQL: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
Pred SQL: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code HAVING COUNT(*) < "value"
Correct: True

Level: medium
Gold SQL: SELECT min(Version_Number) ,  template_type_code FROM Templates
Pred SQL: SELECT MIN(Templates.Version_Number) , Templates.Template_Type_Code FROM Templates ORDER BY Templates.Version_Number ASC LIMIT 1
Correct: 0

Level: medium
Gold SQL: SELECT min(Version_Number) ,  template_type_code FROM Templates
Pred SQL: SELECT MIN(Templates.Version_Number) , Templates.Template_Type_Code FROM Templates ORDER BY Templates.Version_Number ASC LIMIT 1
Correct: 0

Level: medium
Gold SQL: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
Pred SQL: SELECT Templates.Template_Type_Code FROM Documents JOIN Templates WHERE Documents.Document_Name = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
Pred SQL: SELECT Templates.Template_Type_Code FROM Templates JOIN Documents WHERE Documents.Document_Name = "value"
Correct: True

Level: medium
Gold SQL: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
Pred SQL: SELECT Documents.Document_Name FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = "value"
Correct: True

Level: medium
Gold SQL: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
Pred SQL: SELECT Documents.Document_Name FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
Pred SQL: SELECT Templates.Template_Type_Code , COUNT(*) FROM Documents JOIN Templates GROUP BY Templates.Template_Type_Code
Correct: True

Level: medium
Gold SQL: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
Pred SQL: SELECT Templates.Template_Type_Code , COUNT(*) FROM Templates GROUP BY Templates.Template_Type_Code
Correct: False

Level: extra
Gold SQL: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Templates.Template_Type_Code FROM Documents JOIN Templates GROUP BY Templates.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Templates.Template_Type_Code FROM Templates JOIN Documents GROUP BY Templates.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
Pred SQL: SELECT Templates.Template_Type_Code FROM Templates EXCEPT SELECT Templates.Template_Type_Code FROM Templates JOIN Documents
Correct: True

Level: hard
Gold SQL: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
Pred SQL: SELECT Templates.Template_Type_Code FROM Templates EXCEPT SELECT Templates.Template_Type_Code FROM Templates JOIN Documents
Correct: True

Level: medium
Gold SQL: SELECT template_type_code ,  template_type_description FROM Ref_template_types
Pred SQL: SELECT Ref_Template_Types.Template_Type_Code , Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types
Correct: True

Level: medium
Gold SQL: SELECT template_type_code ,  template_type_description FROM Ref_template_types
Pred SQL: SELECT Ref_Template_Types.Template_Type_Code , Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types
Correct: True

Level: easy
Gold SQL: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
Pred SQL: SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Code = "value"
Correct: True

Level: easy
Gold SQL: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
Pred SQL: SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Code = "value"
Correct: True

Level: easy
Gold SQL: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
Pred SQL: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = "value"
Correct: True

Level: easy
Gold SQL: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
Pred SQL: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = "value"
Correct: True

Level: medium
Gold SQL: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
Pred SQL: SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates JOIN Documents
Correct: True

Level: medium
Gold SQL: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
Pred SQL: SELECT Ref_Template_Types.Template_Type_Description FROM Templates JOIN Documents JOIN Ref_Template_Types
Correct: True

Level: medium
Gold SQL: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
Pred SQL: SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = "value"
Correct: True

Level: medium
Gold SQL: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
Pred SQL: SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM Paragraphs
Pred SQL: SELECT COUNT(*) FROM Paragraphs
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM Paragraphs
Pred SQL: SELECT COUNT(*) FROM Paragraphs
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
Pred SQL: SELECT COUNT(*) FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
Pred SQL: SELECT COUNT(*) FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = "value"
Correct: True

Level: medium
Gold SQL: select other_details from paragraphs where paragraph_text like 'korea'
Pred SQL: SELECT Paragraphs.Other_Details FROM Paragraphs WHERE Paragraphs.Paragraph_Text = "value"
Correct: 0

Level: medium
Gold SQL: select other_details from paragraphs where paragraph_text like 'korea'
Pred SQL: SELECT Paragraphs.Other_Details FROM Paragraphs WHERE Paragraphs.Paragraph_Text LIKE "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
Pred SQL: SELECT Paragraphs.Paragraph_ID , Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
Pred SQL: SELECT Paragraphs.Paragraph_ID , Paragraphs.Paragraph_Text FROM Paragraphs JOIN Documents WHERE Documents.Document_Name = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
Pred SQL: SELECT Paragraphs.Paragraph_Text FROM Paragraphs JOIN Documents WHERE Documents.Document_Name = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
Pred SQL: SELECT Paragraphs.Paragraph_Text FROM Paragraphs JOIN Documents WHERE Documents.Document_Name = "value"
Correct: True

Level: medium
Gold SQL: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
Pred SQL: SELECT Paragraphs.Document_ID , COUNT(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY COUNT(*) ASC
Correct: 0

Level: medium
Gold SQL: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
Pred SQL: SELECT Paragraphs.Document_ID , COUNT(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY COUNT(*) ASC
Correct: 0

Level: medium
Gold SQL: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
Pred SQL: SELECT Documents.Document_ID , Documents.Document_Name , COUNT(*) FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID
Correct: True

Level: medium
Gold SQL: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
Pred SQL: SELECT Documents.Document_ID , Documents.Document_Name , COUNT(*) FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID
Correct: True

Level: easy
Gold SQL: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
Pred SQL: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING COUNT(*) >= "value"
Correct: True

Level: easy
Gold SQL: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
Pred SQL: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING COUNT(*) >= "value"
Correct: True

Level: extra
Gold SQL: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Documents.Document_ID , Documents.Document_Name FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Documents.Document_ID , Documents.Document_Name FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
Pred SQL: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY COUNT(*) ASC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
Pred SQL: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY COUNT(*) ASC LIMIT 1
Correct: True

Level: easy
Gold SQL: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
Pred SQL: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING COUNT(*) BETWEEN "value" AND "value"
Correct: True

Level: easy
Gold SQL: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
Pred SQL: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING COUNT(*) BETWEEN "value" AND "value"
Correct: True

Level: hard
Gold SQL: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
Pred SQL: SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text = "value" INTERSECT SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text = "value"
Correct: True

Level: hard
Gold SQL: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
Pred SQL: SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text = "value" INTERSECT SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM teacher
Pred SQL: SELECT COUNT(*) FROM teacher
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM teacher
Pred SQL: SELECT COUNT(*) FROM teacher
Correct: True

Level: easy
Gold SQL: SELECT Name FROM teacher ORDER BY Age ASC
Pred SQL: SELECT teacher.Name FROM teacher ORDER BY teacher.Age ASC
Correct: True

Level: easy
Gold SQL: SELECT Name FROM teacher ORDER BY Age ASC
Pred SQL: SELECT teacher.Name FROM teacher ORDER BY teacher.Age ASC
Correct: True

Level: medium
Gold SQL: SELECT Age ,  Hometown FROM teacher
Pred SQL: SELECT teacher.Age , teacher.Hometown FROM teacher
Correct: True

Level: medium
Gold SQL: SELECT Age ,  Hometown FROM teacher
Pred SQL: SELECT teacher.Age , teacher.Hometown FROM teacher
Correct: True

Level: easy
Gold SQL: select name from teacher where hometown != "little lever urban district"
Pred SQL: SELECT teacher.Name FROM teacher WHERE teacher.Hometown != "value"
Correct: True

Level: easy
Gold SQL: select name from teacher where hometown != "little lever urban district"
Pred SQL: SELECT teacher.Name FROM teacher WHERE teacher.Hometown != "value"
Correct: True

Level: medium
Gold SQL: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
Pred SQL: SELECT teacher.Name FROM teacher WHERE teacher.Age = "value" OR teacher.Age = "value"
Correct: True

Level: medium
Gold SQL: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
Pred SQL: SELECT teacher.Name FROM teacher WHERE teacher.Age = "value" OR teacher.Age = "value"
Correct: True

Level: medium
Gold SQL: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
Pred SQL: SELECT teacher.Hometown FROM teacher ORDER BY teacher.Age ASC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
Pred SQL: SELECT teacher.Hometown FROM teacher ORDER BY teacher.Age ASC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
Pred SQL: SELECT teacher.Hometown , COUNT(*) FROM teacher GROUP BY teacher.Hometown
Correct: True

Level: medium
Gold SQL: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
Pred SQL: SELECT teacher.Hometown , COUNT(*) FROM teacher GROUP BY teacher.Hometown
Correct: True

Level: hard
Gold SQL: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
Pred SQL: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
Pred SQL: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: easy
Gold SQL: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
Pred SQL: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown HAVING COUNT(*) >= "value"
Correct: True

Level: easy
Gold SQL: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
Pred SQL: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown HAVING COUNT(*) >= "value"
Correct: True

Level: medium
Gold SQL: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
Pred SQL: SELECT teacher.Name , course.Course FROM course_arrange JOIN course JOIN teacher
Correct: True

Level: medium
Gold SQL: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
Pred SQL: SELECT teacher.Name , course.Course FROM course_arrange JOIN course JOIN teacher
Correct: True

Level: hard
Gold SQL: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
Pred SQL: SELECT teacher.Name , teacher.Name FROM course_arrange JOIN teacher ORDER BY teacher.Name ASC
Correct: 0

Level: hard
Gold SQL: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
Pred SQL: SELECT teacher.Name , course.Course FROM course_arrange JOIN course JOIN teacher ORDER BY teacher.Name ASC
Correct: True

Level: hard
Gold SQL: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
Pred SQL: SELECT teacher.Name FROM teacher JOIN course_arrange JOIN course WHERE course.Course = "value"
Correct: True

Level: hard
Gold SQL: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
Pred SQL: SELECT teacher.Name FROM teacher JOIN course_arrange JOIN course WHERE course.Course = "value"
Correct: True

Level: medium
Gold SQL: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
Pred SQL: SELECT teacher.Name , COUNT(*) FROM course_arrange JOIN teacher GROUP BY course_arrange.Teacher_ID
Correct: 0

Level: medium
Gold SQL: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
Pred SQL: SELECT teacher.Name , COUNT(*) FROM course_arrange JOIN teacher GROUP BY course_arrange.Teacher_ID
Correct: 0

Level: medium
Gold SQL: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
Pred SQL: SELECT teacher.Name FROM course_arrange JOIN teacher GROUP BY course_arrange.Teacher_ID HAVING COUNT(*) >= "value"
Correct: 0

Level: medium
Gold SQL: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
Pred SQL: SELECT teacher.Name FROM course_arrange JOIN teacher GROUP BY course_arrange.Teacher_ID HAVING COUNT(*) >= "value"
Correct: 0

Level: hard
Gold SQL: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
Pred SQL: SELECT teacher.Name FROM teacher WHERE teacher.Teacher_ID NOT IN ( SELECT course_arrange.Teacher_ID FROM course_arrange )
Correct: True

Level: hard
Gold SQL: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
Pred SQL: SELECT teacher.Name FROM teacher WHERE teacher.Teacher_ID NOT IN ( SELECT course_arrange.Teacher_ID FROM course_arrange )
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM visitor WHERE age  <  30
Pred SQL: SELECT COUNT(*) FROM visitor WHERE visitor.Age < "value"
Correct: True

Level: medium
Gold SQL: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC
Pred SQL: SELECT visitor.Name FROM visitor WHERE visitor.Level_of_membership > "value" ORDER BY visitor.Level_of_membership DESC
Correct: True

Level: easy
Gold SQL: SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4
Pred SQL: SELECT AVG(visitor.Age) FROM visitor WHERE visitor.Level_of_membership NOT IN ( SELECT visitor.Level_of_membership FROM visitor )
Correct: 0

Level: medium
Gold SQL: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
Pred SQL: SELECT visitor.Name , visitor.Level_of_membership FROM visitor WHERE visitor.Age > "value" ORDER BY visitor.Age DESC
Correct: 0

Level: medium
Gold SQL: SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1
Pred SQL: SELECT museum.Museum_ID , museum.Name FROM museum ORDER BY museum.Num_of_Staff DESC LIMIT 1
Correct: True

Level: easy
Gold SQL: SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009
Pred SQL: SELECT AVG(museum.Num_of_Staff) FROM museum WHERE museum.Open_Year < "value"
Correct: True

Level: medium
Gold SQL: SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'
Pred SQL: SELECT museum.Open_Year , museum.Num_of_Staff FROM museum WHERE museum.Name = "value"
Correct: True

Level: hard
Gold SQL: SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)
Pred SQL: SELECT museum.Name FROM museum WHERE museum.Num_of_Staff > ( SELECT MIN(museum.Num_of_Staff) FROM museum WHERE museum.Open_Year > "value" )
Correct: True

Level: medium
Gold SQL: SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1
Pred SQL: SELECT visitor.ID , visitor.Name , visitor.Age FROM visit JOIN visitor GROUP BY visitor.ID HAVING COUNT(*) > "value"
Correct: True

Level: extra
Gold SQL: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1
Pred SQL: SELECT visitor.ID , visitor.Name , visitor.Level_of_membership FROM visitor JOIN visit GROUP BY visitor.ID ORDER BY SUM(visit.Total_spent) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT visit.Museum_ID , museum.Name FROM visit JOIN museum GROUP BY visit.Museum_ID ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)
Pred SQL: SELECT museum.Name FROM museum WHERE museum.Museum_ID NOT IN ( SELECT visit.Museum_ID FROM visit )
Correct: True

Level: hard
Gold SQL: SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1
Pred SQL: SELECT visitor.Name , visitor.Age FROM visitor JOIN visit GROUP BY visitor.ID ORDER BY SUM(visit.Num_of_Ticket) DESC LIMIT 1
Correct: 0

Level: medium
Gold SQL: SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit
Pred SQL: SELECT AVG(visit.Num_of_Ticket) , MAX(visit.Num_of_Ticket) FROM visit
Correct: True

Level: medium
Gold SQL: SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1
Pred SQL: SELECT SUM(visit.Total_spent) FROM visit JOIN visitor WHERE visitor.Level_of_membership = "value"
Correct: True

Level: extra
Gold SQL: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011
Pred SQL: SELECT visitor.Name FROM visit JOIN museum JOIN visitor WHERE museum.Open_Year < "value" INTERSECT SELECT visitor.Name FROM visit JOIN museum JOIN visitor WHERE museum.Open_Year > "value"
Correct: True

Level: extra
Gold SQL: SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)
Pred SQL: SELECT COUNT(*) FROM visitor WHERE visitor.ID NOT IN ( SELECT visit.visitor_ID FROM visit JOIN museum WHERE museum.Open_Year > "value" )
Correct: 0

Level: medium
Gold SQL: SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008
Pred SQL: SELECT COUNT(*) FROM museum WHERE museum.Open_Year > "value" OR museum.Open_Year < "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM players
Pred SQL: SELECT COUNT(*) FROM players
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM players
Pred SQL: SELECT COUNT(*) FROM players
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM matches
Pred SQL: SELECT COUNT(*) FROM matches
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM matches
Pred SQL: SELECT COUNT(*) FROM matches
Correct: True

Level: medium
Gold SQL: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
Pred SQL: SELECT players.first_name , players.birth_date FROM players WHERE players.country_code = "value"
Correct: True

Level: medium
Gold SQL: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
Pred SQL: SELECT players.first_name , players.birth_date FROM players WHERE players.country_code = "value"
Correct: True

Level: medium
Gold SQL: SELECT avg(loser_age) ,  avg(winner_age) FROM matches
Pred SQL: SELECT AVG(matches.winner_age) , MIN(matches.loser_age) FROM matches
Correct: 0

Level: medium
Gold SQL: SELECT avg(loser_age) ,  avg(winner_age) FROM matches
Pred SQL: SELECT AVG(matches.winner_age) , MIN(matches.loser_age) FROM matches
Correct: 0

Level: easy
Gold SQL: SELECT avg(winner_rank) FROM matches
Pred SQL: SELECT AVG(matches.winner_rank) FROM matches
Correct: True

Level: easy
Gold SQL: SELECT avg(winner_rank) FROM matches
Pred SQL: SELECT AVG(matches.winner_rank) FROM matches
Correct: True

Level: easy
Gold SQL: SELECT min(loser_rank) FROM matches
Pred SQL: SELECT MIN(matches.loser_rank) FROM matches
Correct: True

Level: easy
Gold SQL: SELECT min(loser_rank) FROM matches
Pred SQL: SELECT MIN(matches.loser_rank) FROM matches
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT country_code) FROM players
Pred SQL: SELECT COUNT(players.country_code) FROM players
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT country_code) FROM players
Pred SQL: SELECT COUNT(players.country_code) FROM players
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT loser_name) FROM matches
Pred SQL: SELECT COUNT(matches.loser_name) FROM matches
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT loser_name) FROM matches
Pred SQL: SELECT COUNT(matches.loser_name) FROM matches
Correct: True

Level: easy
Gold SQL: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
Pred SQL: SELECT matches.tourney_name FROM matches GROUP BY matches.tourney_id HAVING COUNT(*) > "value"
Correct: 0

Level: easy
Gold SQL: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
Pred SQL: SELECT matches.tourney_name FROM matches GROUP BY matches.tourney_name HAVING COUNT(*) > "value"
Correct: True

Level: hard
Gold SQL: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
Pred SQL: SELECT matches.winner_name FROM matches WHERE matches.year = "value" INTERSECT SELECT matches.winner_name FROM matches WHERE matches.year = "value"
Correct: True

Level: hard
Gold SQL: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
Pred SQL: SELECT matches.winner_name FROM players JOIN matches WHERE matches.year = "value" INTERSECT SELECT matches.winner_name FROM players JOIN matches WHERE matches.year = "value"
Correct: 0

Level: medium
Gold SQL: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
Pred SQL: SELECT COUNT(*) FROM matches WHERE matches.year = "value" OR matches.year = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
Pred SQL: SELECT COUNT(*) FROM matches WHERE matches.year = "value" OR matches.year = "value"
Correct: True

Level: extra
Gold SQL: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
Pred SQL: SELECT players.country_code , players.first_name FROM players JOIN matches WHERE matches.tourney_name = "value" INTERSECT SELECT players.country_code , players.first_name FROM players JOIN matches WHERE matches.tourney_name = "value"
Correct: True

Level: extra
Gold SQL: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
Pred SQL: SELECT players.first_name , players.country_code FROM players JOIN matches WHERE matches.tourney_name = "value" INTERSECT SELECT players.first_name , players.country_code FROM players JOIN matches WHERE matches.tourney_name = "value"
Correct: True

Level: medium
Gold SQL: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
Pred SQL: SELECT players.first_name , players.country_code FROM players ORDER BY players.country_code DESC LIMIT 1
Correct: 0

Level: medium
Gold SQL: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
Pred SQL: SELECT players.first_name , players.country_code FROM players ORDER BY players.country_code DESC LIMIT 1
Correct: 0

Level: medium
Gold SQL: SELECT first_name ,  last_name FROM players ORDER BY birth_date
Pred SQL: SELECT players.first_name , players.last_name FROM players ORDER BY players.birth_date ASC
Correct: True

Level: medium
Gold SQL: SELECT first_name ,  last_name FROM players ORDER BY birth_date
Pred SQL: SELECT players.first_name , players.last_name FROM players ORDER BY players.birth_date ASC
Correct: True

Level: medium
Gold SQL: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
Pred SQL: SELECT players.first_name , players.last_name FROM players JOIN matches WHERE matches.loser_hand = "value" ORDER BY players.birth_date ASC
Correct: 0

Level: medium
Gold SQL: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
Pred SQL: SELECT players.first_name , players.last_name FROM players WHERE players.hand = "value" ORDER BY players.birth_date ASC
Correct: True

Level: hard
Gold SQL: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
Pred SQL: SELECT players.first_name , players.country_code FROM players JOIN rankings GROUP BY rankings.player_id ORDER BY COUNT(*) DESC LIMIT 1
Correct: 0

Level: hard
Gold SQL: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
Pred SQL: SELECT players.first_name , players.country_code FROM players JOIN rankings GROUP BY rankings.player_id ORDER BY COUNT(*) DESC LIMIT 1
Correct: 0

Level: hard
Gold SQL: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT matches.year FROM matches GROUP BY matches.year ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT matches.year FROM matches GROUP BY matches.year ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT matches.winner_name , matches.winner_rank_points FROM matches GROUP BY matches.winner_name ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT matches.winner_name , matches.winner_rank_points FROM matches GROUP BY matches.winner_name ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
Pred SQL: SELECT matches.winner_name FROM matches WHERE matches.tourney_name = "value" ORDER BY matches.winner_rank_points DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
Pred SQL: SELECT matches.winner_name FROM matches WHERE matches.tourney_name = "value" ORDER BY matches.winner_rank_points DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
Pred SQL: SELECT matches.loser_name , matches.winner_name FROM matches ORDER BY matches.minutes DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
Pred SQL: SELECT matches.winner_name , matches.loser_name FROM matches ORDER BY matches.match_num DESC LIMIT 1
Correct: 0

Level: medium
Gold SQL: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
Pred SQL: SELECT players.first_name , AVG(rankings.ranking) FROM players JOIN rankings GROUP BY players.first_name
Correct: True

Level: medium
Gold SQL: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
Pred SQL: SELECT players.first_name , AVG(rankings.ranking) FROM players JOIN rankings GROUP BY rankings.player_id
Correct: 0

Level: medium
Gold SQL: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
Pred SQL: SELECT SUM(rankings.ranking_points) , players.first_name FROM players JOIN rankings GROUP BY players.first_name
Correct: True

Level: medium
Gold SQL: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
Pred SQL: SELECT players.first_name , SUM(rankings.ranking_points) FROM players JOIN rankings GROUP BY rankings.player_id
Correct: 0

Level: medium
Gold SQL: SELECT count(*) ,  country_code FROM players GROUP BY country_code
Pred SQL: SELECT COUNT(*) , players.country_code FROM players GROUP BY players.country_code
Correct: True

Level: medium
Gold SQL: SELECT count(*) ,  country_code FROM players GROUP BY country_code
Pred SQL: SELECT players.country_code , COUNT(*) FROM players GROUP BY players.country_code
Correct: True

Level: hard
Gold SQL: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT players.country_code FROM players GROUP BY players.country_code ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT players.country_code FROM players GROUP BY players.country_code ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: easy
Gold SQL: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
Pred SQL: SELECT players.country_code FROM players GROUP BY players.country_code HAVING COUNT(*) > "value"
Correct: True

Level: easy
Gold SQL: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
Pred SQL: SELECT players.country_code FROM players GROUP BY players.country_code HAVING COUNT(*) > "value"
Correct: True

Level: medium
Gold SQL: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
Pred SQL: SELECT COUNT(*) , rankings.ranking_date FROM rankings GROUP BY rankings.ranking_date
Correct: 0

Level: medium
Gold SQL: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
Pred SQL: SELECT COUNT(*) , rankings.ranking_date FROM rankings GROUP BY rankings.ranking_date
Correct: 0

Level: medium
Gold SQL: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
Pred SQL: SELECT COUNT(*) , matches.year FROM matches GROUP BY matches.year
Correct: True

Level: medium
Gold SQL: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
Pred SQL: SELECT COUNT(*) , matches.year FROM matches GROUP BY matches.year
Correct: True

Level: medium
Gold SQL: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
Pred SQL: SELECT matches.winner_name , matches.winner_rank FROM matches ORDER BY matches.winner_age ASC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
Pred SQL: SELECT matches.winner_name , matches.winner_rank FROM matches ORDER BY matches.winner_age ASC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
Pred SQL: SELECT COUNT(matches.winner_id) FROM matches WHERE matches.tourney_name = "value" AND matches.winner_hand IN ( SELECT matches.winner_hand FROM matches WHERE matches.tourney_name = "value" )
Correct: 0

Level: medium
Gold SQL: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
Pred SQL: SELECT COUNT(*) FROM matches WHERE matches.winner_hand = "value" AND matches.tourney_name = "value"
Correct: 0

Level: hard
Gold SQL: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
Pred SQL: SELECT players.first_name , players.country_code , players.birth_date FROM players JOIN matches ORDER BY matches.winner_rank_points DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
Pred SQL: SELECT players.first_name , players.country_code , players.birth_date FROM players JOIN matches ORDER BY matches.winner_rank_points DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT count(*) ,  hand FROM players GROUP BY hand
Pred SQL: SELECT players.hand , COUNT(*) FROM players GROUP BY players.hand
Correct: True

Level: medium
Gold SQL: SELECT count(*) ,  hand FROM players GROUP BY hand
Pred SQL: SELECT players.hand , COUNT(*) FROM players GROUP BY players.hand
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'
Pred SQL: SELECT COUNT(*) FROM ship WHERE ship.disposition_of_ship = "value"
Correct: True

Level: medium
Gold SQL: SELECT name ,  tonnage FROM ship ORDER BY name DESC
Pred SQL: SELECT ship.name , ship.tonnage FROM ship ORDER BY ship.name DESC
Correct: True

Level: medium
Gold SQL: SELECT name ,  date FROM battle
Pred SQL: SELECT battle.name , battle.date , battle.result FROM battle
Correct: 0

Level: medium
Gold SQL: SELECT max(killed) ,  min(killed) FROM death
Pred SQL: SELECT MAX(death.killed) , MIN(death.killed) , battle.name FROM battle JOIN death GROUP BY battle.name
Correct: 0

Level: easy
Gold SQL: SELECT avg(injured) FROM death
Pred SQL: SELECT AVG(death.injured) , death.id FROM death GROUP BY death.id
Correct: 0

Level: medium
Gold SQL: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
Pred SQL: SELECT death.killed , death.injured FROM death JOIN ship WHERE ship.tonnage = "value"
Correct: True

Level: medium
Gold SQL: SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'
Pred SQL: SELECT battle.name , battle.result FROM battle WHERE battle.bulgarian_commander != "value"
Correct: True

Level: medium
Gold SQL: SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'
Pred SQL: SELECT battle.id , battle.name FROM battle JOIN ship WHERE ship.ship_type = "value"
Correct: True

Level: hard
Gold SQL: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10
Pred SQL: SELECT battle.id , battle.name FROM battle JOIN death GROUP BY battle.id HAVING SUM(death.killed) > "value"
Correct: False

Level: extra
Gold SQL: SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT ship.id , ship.name FROM ship JOIN death GROUP BY ship.id ORDER BY SUM(death.injured) DESC LIMIT 1
Correct: 0

Level: medium
Gold SQL: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'
Pred SQL: SELECT battle.name FROM battle WHERE battle.bulgarian_commander = "value" AND battle.latin_commander = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT RESULT) FROM battle
Pred SQL: SELECT COUNT(battle.result) FROM battle
Correct: True

Level: extra
Gold SQL: SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );
Pred SQL: SELECT COUNT(*) FROM battle WHERE battle.id NOT IN ( SELECT ship.lost_in_battle FROM ship WHERE ship.tonnage = "value" )
Correct: True

Level: extra
Gold SQL: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'
Pred SQL: SELECT battle.name , battle.date FROM battle JOIN ship WHERE ship.name = "value" INTERSECT SELECT battle.name , battle.date FROM battle JOIN ship WHERE ship.name = "value"
Correct: True

Level: extra
Gold SQL: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
Pred SQL: SELECT battle.name , battle.result , battle.bulgarian_commander FROM battle EXCEPT SELECT battle.name , battle.result , battle.bulgarian_commander FROM battle JOIN ship WHERE ship.location = "value"
Correct: True

Level: medium
Gold SQL: SELECT note FROM death WHERE note LIKE '%East%'
Pred SQL: SELECT death.note FROM death WHERE death.note LIKE "value"
Correct: True

Level: medium
Gold SQL: SELECT line_1 ,  line_2 FROM addresses
Pred SQL: SELECT Addresses.line_1 FROM Addresses
Correct: 0

Level: medium
Gold SQL: SELECT line_1 ,  line_2 FROM addresses
Pred SQL: SELECT Addresses.line_1 , Addresses.line_2 FROM Addresses
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM Courses
Pred SQL: SELECT COUNT(*) FROM Courses
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM Courses
Pred SQL: SELECT COUNT(*) FROM Courses
Correct: True

Level: easy
Gold SQL: SELECT course_description FROM Courses WHERE course_name  =  'math'
Pred SQL: SELECT Courses.course_description FROM Courses WHERE Courses.course_name = "value"
Correct: True

Level: easy
Gold SQL: SELECT course_description FROM Courses WHERE course_name  =  'math'
Pred SQL: SELECT Courses.course_description FROM Courses WHERE Courses.course_name = "value"
Correct: True

Level: easy
Gold SQL: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
Pred SQL: SELECT Addresses.zip_postcode FROM Addresses WHERE Addresses.city = "value"
Correct: True

Level: easy
Gold SQL: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
Pred SQL: SELECT Addresses.zip_postcode FROM Addresses WHERE Addresses.city = "value"
Correct: True

Level: extra
Gold SQL: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Departments.department_name , Degree_Programs.department_id FROM Degree_Programs JOIN Departments GROUP BY Degree_Programs.department_id ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1
Pred SQL: SELECT Departments.department_name , Degree_Programs.department_id FROM Degree_Programs JOIN Departments GROUP BY Degree_Programs.department_id ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT department_id) FROM Degree_Programs
Pred SQL: SELECT COUNT(Degree_Programs.department_id) FROM Degree_Programs
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT department_id) FROM Degree_Programs
Pred SQL: SELECT COUNT(Degree_Programs.department_id) FROM Degree_Programs
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
Pred SQL: SELECT COUNT(Degree_Programs.degree_summary_name) FROM Degree_Programs
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
Pred SQL: SELECT COUNT(Degree_Programs.degree_program_id) FROM Degree_Programs
Correct: 0

Level: medium
Gold SQL: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
Pred SQL: SELECT COUNT(*) FROM Departments JOIN Degree_Programs WHERE Departments.department_name = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
Pred SQL: SELECT COUNT(Degree_Programs.degree_summary_name) FROM Degree_Programs JOIN Departments WHERE Departments.department_name = "value"
Correct: 0

Level: medium
Gold SQL: SELECT section_name ,  section_description FROM Sections
Pred SQL: SELECT Sections.section_name , Sections.section_description FROM Sections
Correct: True

Level: medium
Gold SQL: SELECT section_name ,  section_description FROM Sections
Pred SQL: SELECT Sections.section_name , Sections.section_description FROM Sections
Correct: True

Level: medium
Gold SQL: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
Pred SQL: SELECT Courses.course_name , Courses.course_id FROM Courses JOIN Sections GROUP BY Sections.course_id HAVING COUNT(*) <= "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
Pred SQL: SELECT Courses.course_name , Sections.course_id FROM Courses JOIN Sections GROUP BY Sections.course_id HAVING COUNT(*) < "value"
Correct: 0

Level: easy
Gold SQL: SELECT section_name FROM Sections ORDER BY section_name DESC
Pred SQL: SELECT Sections.section_name FROM Sections ORDER BY Sections.section_name DESC
Correct: True

Level: easy
Gold SQL: SELECT section_name FROM Sections ORDER BY section_name DESC
Pred SQL: SELECT Sections.section_name FROM Sections ORDER BY Sections.section_name DESC
Correct: True

Level: extra
Gold SQL: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Semesters.semester_name , Student_Enrolment.semester_id FROM Semesters JOIN Student_Enrolment GROUP BY Student_Enrolment.semester_id ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Semesters.semester_name , Semesters.semester_id FROM Semesters JOIN Student_Enrolment GROUP BY Semesters.semester_id ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
Pred SQL: SELECT Departments.department_description FROM Departments WHERE Departments.department_name LIKE "value"
Correct: True

Level: medium
Gold SQL: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
Pred SQL: SELECT Departments.department_description FROM Departments WHERE Departments.department_name LIKE "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
Pred SQL: SELECT Students.first_name , Students.middle_name , Students.last_name , Student_Enrolment.semester_id FROM Student_Enrolment JOIN Students GROUP BY Student_Enrolment.semester_id HAVING COUNT(*) = "value"
Correct: 0

Level: medium
Gold SQL: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
Pred SQL: SELECT Students.first_name , Students.middle_name , Students.last_name , Student_Enrolment.semester_id FROM Student_Enrolment JOIN Students GROUP BY Student_Enrolment.semester_id HAVING COUNT(*) >= "value"
Correct: 0

Level: hard
Gold SQL: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
Pred SQL: SELECT Students.first_name , Students.middle_name , Students.last_name FROM Student_Enrolment JOIN Degree_Programs JOIN Students WHERE Degree_Programs.degree_summary_name = "value"
Correct: True

Level: hard
Gold SQL: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
Pred SQL: SELECT Students.first_name , Students.middle_name , Students.last_name FROM Student_Enrolment JOIN Students WHERE Student_Enrolment.degree_program_id = "value"
Correct: 0

Level: extra
Gold SQL: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Student_Enrolment.degree_program_id FROM Student_Enrolment GROUP BY Student_Enrolment.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment JOIN Student_Enrolment_Courses GROUP BY Degree_Programs.degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1
Correct: False

Level: extra
Gold SQL: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Student_Enrolment.degree_program_id , Degree_Programs.degree_summary_name FROM Student_Enrolment JOIN Degree_Programs GROUP BY Student_Enrolment.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Degree_Programs.degree_program_id , Degree_Programs.degree_summary_description FROM Degree_Programs JOIN Student_Enrolment GROUP BY Degree_Programs.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Student_Enrolment.student_enrolment_id , Students.first_name , Students.middle_name , Students.last_name FROM Student_Enrolment JOIN Students GROUP BY Student_Enrolment.student_id ORDER BY COUNT(*) DESC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Students.first_name , Students.middle_name , Students.last_name FROM Student_Enrolment JOIN Students JOIN Student_Enrolment_Courses GROUP BY Student_Enrolment.student_id ORDER BY COUNT(*) DESC LIMIT 1
Correct: 0

Level: hard
Gold SQL: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
Pred SQL: SELECT Semesters.semester_name FROM Semesters WHERE Semesters.semester_id NOT IN ( SELECT Student_Enrolment.semester_id FROM Student_Enrolment )
Correct: True

Level: hard
Gold SQL: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
Pred SQL: SELECT Semesters.semester_name FROM Semesters WHERE Semesters.semester_id NOT IN ( SELECT Student_Enrolment.semester_id FROM Student_Enrolment )
Correct: True

Level: easy
Gold SQL: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
Pred SQL: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses
Correct: True

Level: easy
Gold SQL: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
Pred SQL: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses
Correct: True

Level: extra
Gold SQL: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses GROUP BY Courses.course_name ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses GROUP BY Courses.course_name ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
Pred SQL: SELECT Students.last_name FROM Students WHERE Addresses.state_province_county = "value" EXCEPT SELECT Students.last_name FROM Students JOIN Student_Enrolment
Correct: False

Level: extra
Gold SQL: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
Pred SQL: SELECT Students.last_name FROM Students WHERE Students.student_id = "value" EXCEPT SELECT Students.last_name FROM Students JOIN Student_Enrolment
Correct: 0

Level: medium
Gold SQL: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
Pred SQL: SELECT Transcripts.transcript_date , Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents GROUP BY Transcripts.transcript_id HAVING COUNT(*) >= "value"
Correct: True

Level: medium
Gold SQL: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
Pred SQL: SELECT Transcripts.transcript_date , Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents GROUP BY Transcripts.transcript_id HAVING COUNT(*) >= "value"
Correct: True

Level: medium
Gold SQL: SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'
Pred SQL: SELECT Students.cell_mobile_number FROM Students WHERE Students.first_name = "value" AND Students.last_name = "value"
Correct: True

Level: medium
Gold SQL: select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'
Pred SQL: SELECT Students.cell_mobile_number FROM Students WHERE Students.first_name = "value" AND Students.last_name = "value"
Correct: True

Level: medium
Gold SQL: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
Pred SQL: SELECT Students.first_name , Students.middle_name , Students.last_name FROM Students ORDER BY Students.date_first_registered ASC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
Pred SQL: SELECT Students.first_name , Students.middle_name , Students.last_name FROM Students ORDER BY Students.date_first_registered ASC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
Pred SQL: SELECT Students.first_name , Students.middle_name , Students.last_name FROM Students ORDER BY Students.date_left ASC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
Pred SQL: SELECT Students.first_name , Students.middle_name , Students.last_name FROM Students ORDER BY Students.date_left ASC LIMIT 1
Correct: True

Level: easy
Gold SQL: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
Pred SQL: SELECT Students.first_name FROM Addresses JOIN Students WHERE Students.current_address_id != "value"
Correct: False

Level: easy
Gold SQL: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
Pred SQL: SELECT Students.first_name FROM Students WHERE Students.current_address_id != "value"
Correct: True

Level: extra
Gold SQL: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Addresses.address_id , Addresses.line_1 FROM Addresses JOIN Students GROUP BY Addresses.address_id ORDER BY COUNT(*) DESC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Addresses.address_id , Addresses.line_1 , Addresses.line_2 FROM Addresses JOIN Students GROUP BY Addresses.address_id ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: easy
Gold SQL: SELECT avg(transcript_date) FROM Transcripts
Pred SQL: SELECT AVG(Transcripts.transcript_date) FROM Transcripts
Correct: True

Level: easy
Gold SQL: SELECT avg(transcript_date) FROM Transcripts
Pred SQL: SELECT AVG(Transcripts.transcript_date) FROM Transcripts
Correct: True

Level: medium
Gold SQL: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
Pred SQL: SELECT Transcripts.transcript_date , Transcripts.other_details FROM Transcripts ORDER BY Transcripts.transcript_date ASC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
Pred SQL: SELECT Transcripts.other_details , Transcripts.transcript_date FROM Transcripts ORDER BY Transcripts.transcript_date ASC LIMIT 1
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM Transcripts
Pred SQL: SELECT COUNT(*) FROM Transcripts
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM Transcripts
Pred SQL: SELECT COUNT(*) FROM Transcripts
Correct: True

Level: medium
Gold SQL: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
Pred SQL: SELECT MAX(Transcripts.transcript_date) FROM Transcripts
Correct: 0

Level: medium
Gold SQL: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
Pred SQL: SELECT MAX(Transcripts.transcript_date) FROM Transcripts
Correct: 0

Level: hard
Gold SQL: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Student_Enrolment_Courses.student_course_id , COUNT(*) FROM Transcript_Contents JOIN Student_Enrolment_Courses GROUP BY Student_Enrolment_Courses.student_course_id ORDER BY COUNT(*) DESC LIMIT 1
Correct: False

Level: hard
Gold SQL: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT COUNT(*) , Student_Enrolment_Courses.course_id FROM Transcript_Contents JOIN Student_Enrolment_Courses GROUP BY Student_Enrolment_Courses.course_id ORDER BY COUNT(*) DESC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
Pred SQL: SELECT Transcripts.transcript_id , Transcripts.transcript_date FROM Transcripts GROUP BY Transcripts.transcript_id ORDER BY COUNT(*) ASC LIMIT 1
Correct: False

Level: extra
Gold SQL: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
Pred SQL: SELECT Transcripts.transcript_date , Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents GROUP BY Transcript_Contents.transcript_id ORDER BY COUNT(*) ASC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
Pred SQL: SELECT Student_Enrolment.semester_id FROM Student_Enrolment JOIN Degree_Programs WHERE Degree_Programs.degree_summary_name = "value" INTERSECT SELECT Student_Enrolment.semester_id FROM Student_Enrolment JOIN Degree_Programs WHERE Degree_Programs.degree_summary_name = "value"
Correct: True

Level: extra
Gold SQL: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
Pred SQL: SELECT Student_Enrolment.semester_id FROM Student_Enrolment WHERE Student_Enrolment.degree_program_id = "value" INTERSECT SELECT Student_Enrolment.semester_id FROM Student_Enrolment WHERE Student_Enrolment.degree_program_id = "value"
Correct: 0

Level: easy
Gold SQL: SELECT count(DISTINCT current_address_id) FROM Students
Pred SQL: SELECT COUNT(Students.current_address_id) FROM Students
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT current_address_id) FROM Students
Pred SQL: SELECT Addresses.other_address_details FROM Addresses JOIN Students
Correct: 0

Level: easy
Gold SQL: SELECT other_student_details FROM Students ORDER BY other_student_details DESC
Pred SQL: SELECT * FROM Students ORDER BY Students.other_student_details DESC
Correct: 0

Level: easy
Gold SQL: SELECT other_student_details FROM Students ORDER BY other_student_details DESC
Pred SQL: SELECT Students.other_student_details FROM Students ORDER BY Students.other_student_details DESC
Correct: True

Level: easy
Gold SQL: SELECT section_description FROM Sections WHERE section_name  =  'h'
Pred SQL: SELECT Sections.section_description FROM Sections WHERE Sections.section_name = "value"
Correct: True

Level: easy
Gold SQL: SELECT section_description FROM Sections WHERE section_name  =  'h'
Pred SQL: SELECT Sections.section_description FROM Sections WHERE Sections.section_name = "value"
Correct: True

Level: hard
Gold SQL: select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
Pred SQL: SELECT Students.first_name FROM Addresses JOIN Students WHERE Addresses.country = "value" OR Students.cell_mobile_number = "value"
Correct: True

Level: hard
Gold SQL: select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
Pred SQL: SELECT Students.first_name FROM Addresses JOIN Students WHERE Addresses.country = "value" OR Students.cell_mobile_number = "value"
Correct: True

Level: easy
Gold SQL: SELECT Title FROM Cartoon ORDER BY title
Pred SQL: SELECT Cartoon.Title FROM Cartoon ORDER BY Cartoon.Title ASC
Correct: True

Level: easy
Gold SQL: SELECT Title FROM Cartoon ORDER BY title
Pred SQL: SELECT Cartoon.Title FROM Cartoon ORDER BY Cartoon.Title ASC
Correct: True

Level: easy
Gold SQL: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
Pred SQL: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = "value"
Correct: True

Level: easy
Gold SQL: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
Pred SQL: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
Pred SQL: SELECT COUNT(*) FROM Cartoon WHERE Cartoon.Written_by = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
Pred SQL: SELECT COUNT(*) FROM Cartoon WHERE Cartoon.Written_by = "value"
Correct: True

Level: medium
Gold SQL: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
Pred SQL: SELECT Cartoon.Title , Cartoon.Directed_by FROM Cartoon ORDER BY Cartoon.Original_air_date ASC
Correct: True

Level: medium
Gold SQL: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
Pred SQL: SELECT Cartoon.Title , Cartoon.Directed_by FROM Cartoon ORDER BY Cartoon.Original_air_date ASC
Correct: True

Level: medium
Gold SQL: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
Pred SQL: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = "value" OR Cartoon.Directed_by = "value"
Correct: True

Level: medium
Gold SQL: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
Pred SQL: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = "value" OR Cartoon.Directed_by = "value"
Correct: True

Level: hard
Gold SQL: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
Pred SQL: SELECT TV_Channel.Country , COUNT(*) FROM TV_Channel GROUP BY TV_Channel.Country ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
Pred SQL: SELECT TV_Channel.Country , COUNT(*) FROM TV_Channel GROUP BY TV_Channel.Country ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
Pred SQL: SELECT COUNT(TV_Channel.series_name) , COUNT(TV_Channel.Content) FROM TV_Channel
Correct: True

Level: medium
Gold SQL: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
Pred SQL: SELECT COUNT(TV_Channel.series_name) , COUNT(TV_Channel.Content) FROM TV_Channel
Correct: True

Level: easy
Gold SQL: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
Pred SQL: SELECT TV_Channel.Content FROM TV_Channel WHERE TV_Channel.series_name = "value"
Correct: True

Level: easy
Gold SQL: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
Pred SQL: SELECT TV_Channel.Content FROM TV_Channel WHERE TV_Channel.series_name = "value"
Correct: True

Level: easy
Gold SQL: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
Pred SQL: SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.series_name = "value"
Correct: True

Level: easy
Gold SQL: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
Pred SQL: SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.series_name = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
Pred SQL: SELECT COUNT(*) FROM TV_Channel WHERE TV_Channel.Language = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
Pred SQL: SELECT COUNT(*) FROM TV_Channel WHERE TV_Channel.Language = "value"
Correct: True

Level: hard
Gold SQL: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
Pred SQL: SELECT TV_Channel.Language , COUNT(*) FROM TV_Channel GROUP BY TV_Channel.Language ORDER BY COUNT(*) ASC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
Pred SQL: SELECT TV_Channel.Language , COUNT(*) FROM TV_Channel GROUP BY TV_Channel.Language ORDER BY COUNT(*) ASC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
Pred SQL: SELECT TV_Channel.Language , COUNT(*) FROM TV_Channel GROUP BY TV_Channel.Language
Correct: True

Level: medium
Gold SQL: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
Pred SQL: SELECT TV_Channel.Language , COUNT(*) FROM TV_Channel GROUP BY TV_Channel.Language
Correct: True

Level: medium
Gold SQL: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
Pred SQL: SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon WHERE Cartoon.Title = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
Pred SQL: SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon WHERE Cartoon.Title = "value"
Correct: True

Level: medium
Gold SQL: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
Pred SQL: SELECT Cartoon.Title FROM TV_Channel JOIN Cartoon WHERE TV_Channel.series_name = "value"
Correct: True

Level: medium
Gold SQL: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
Pred SQL: SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel WHERE TV_Channel.series_name = "value"
Correct: True

Level: easy
Gold SQL: SELECT Episode FROM TV_series ORDER BY rating
Pred SQL: SELECT TV_series.Episode FROM TV_series ORDER BY TV_series.Rating ASC
Correct: True

Level: easy
Gold SQL: SELECT Episode FROM TV_series ORDER BY rating
Pred SQL: SELECT TV_series.Episode FROM TV_series ORDER BY TV_series.Rating ASC
Correct: True

Level: medium
Gold SQL: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
Pred SQL: SELECT TV_series.Episode , TV_series.Rating FROM TV_series ORDER BY TV_series.Rating DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
Pred SQL: SELECT TV_series.Episode , TV_series.Rating FROM TV_series ORDER BY TV_series.Rating DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT max(SHARE) , min(SHARE) FROM TV_series;
Pred SQL: SELECT MIN(TV_series.Share) , MAX(TV_series.Share) FROM TV_series
Correct: True

Level: medium
Gold SQL: SELECT max(SHARE) , min(SHARE) FROM TV_series;
Pred SQL: SELECT MAX(TV_series.Share) , MIN(TV_series.Share) FROM TV_series
Correct: True

Level: easy
Gold SQL: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
Pred SQL: SELECT TV_series.Air_Date FROM TV_series WHERE TV_series.Episode = "value"
Correct: True

Level: easy
Gold SQL: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
Pred SQL: SELECT TV_series.Air_Date FROM TV_series WHERE TV_series.Episode = "value"
Correct: True

Level: easy
Gold SQL: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
Pred SQL: SELECT TV_series.Weekly_Rank FROM TV_series WHERE TV_series.Episode = "value"
Correct: True

Level: easy
Gold SQL: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
Pred SQL: SELECT TV_series.Weekly_Rank FROM TV_series WHERE TV_series.Episode = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
Pred SQL: SELECT TV_Channel.series_name FROM TV_series JOIN TV_Channel WHERE TV_series.Episode = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
Pred SQL: SELECT TV_Channel.series_name FROM TV_series JOIN TV_Channel WHERE TV_series.Episode = "value"
Correct: True

Level: medium
Gold SQL: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
Pred SQL: SELECT TV_series.Episode FROM TV_series JOIN TV_Channel WHERE TV_Channel.series_name = "value"
Correct: True

Level: medium
Gold SQL: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
Pred SQL: SELECT TV_series.Episode FROM TV_series JOIN TV_Channel WHERE TV_Channel.series_name = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
Pred SQL: SELECT Cartoon.Directed_by , COUNT(*) FROM Cartoon GROUP BY Cartoon.Directed_by
Correct: True

Level: medium
Gold SQL: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
Pred SQL: SELECT Cartoon.Directed_by , COUNT(*) FROM Cartoon GROUP BY Cartoon.Directed_by
Correct: True

Level: medium
Gold SQL: select production_code ,  channel from cartoon order by original_air_date desc limit 1
Pred SQL: SELECT Cartoon.Production_code , Cartoon.Channel FROM Cartoon ORDER BY Cartoon.Original_air_date DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: select production_code ,  channel from cartoon order by original_air_date desc limit 1
Pred SQL: SELECT Cartoon.Production_code , Cartoon.Channel FROM Cartoon ORDER BY Cartoon.Original_air_date DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
Pred SQL: SELECT TV_Channel.Package_Option , TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = "value"
Correct: True

Level: medium
Gold SQL: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
Pred SQL: SELECT TV_Channel.Package_Option , TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
Pred SQL: SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Written_by = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
Pred SQL: SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Written_by = "value"
Correct: True

Level: hard
Gold SQL: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
Pred SQL: SELECT TV_Channel.Country FROM TV_Channel EXCEPT SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Written_by = "value"
Correct: True

Level: hard
Gold SQL: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
Pred SQL: SELECT TV_Channel.Country FROM TV_Channel EXCEPT SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Written_by = "value"
Correct: True

Level: extra
Gold SQL: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
Pred SQL: SELECT TV_Channel.series_name , TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = "value" INTERSECT SELECT TV_Channel.series_name , TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = "value"
Correct: True

Level: extra
Gold SQL: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
Pred SQL: SELECT TV_Channel.series_name , TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = "value" INTERSECT SELECT TV_Channel.series_name , TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = "value"
Correct: True

Level: medium
Gold SQL: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
Pred SQL: SELECT TV_Channel.Pixel_aspect_ratio_PAR , TV_Channel.Country FROM TV_Channel WHERE TV_Channel.Language != "value"
Correct: True

Level: medium
Gold SQL: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
Pred SQL: SELECT TV_Channel.Pixel_aspect_ratio_PAR , TV_Channel.Country FROM TV_Channel WHERE TV_Channel.Language != "value"
Correct: True

Level: easy
Gold SQL: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
Pred SQL: SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.Country HAVING COUNT(*) > "value"
Correct: True

Level: easy
Gold SQL: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
Pred SQL: SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.id HAVING COUNT(*) > "value"
Correct: 0

Level: hard
Gold SQL: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
Pred SQL: SELECT TV_Channel.id FROM TV_Channel EXCEPT SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = "value"
Correct: True

Level: hard
Gold SQL: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
Pred SQL: SELECT TV_Channel.id FROM TV_Channel EXCEPT SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = "value"
Correct: True

Level: hard
Gold SQL: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
Pred SQL: SELECT TV_Channel.Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = "value"
Correct: 0

Level: hard
Gold SQL: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
Pred SQL: SELECT TV_Channel.Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = "value"
Correct: 0

Level: easy
Gold SQL: SELECT count(*) FROM poker_player
Pred SQL: SELECT COUNT(*) FROM poker_player
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM poker_player
Pred SQL: SELECT COUNT(*) FROM poker_player
Correct: True

Level: easy
Gold SQL: SELECT Earnings FROM poker_player ORDER BY Earnings DESC
Pred SQL: SELECT poker_player.Earnings FROM poker_player ORDER BY poker_player.Earnings DESC
Correct: True

Level: easy
Gold SQL: SELECT Earnings FROM poker_player ORDER BY Earnings DESC
Pred SQL: SELECT poker_player.Earnings FROM poker_player ORDER BY poker_player.Earnings DESC
Correct: True

Level: medium
Gold SQL: SELECT Final_Table_Made ,  Best_Finish FROM poker_player
Pred SQL: SELECT poker_player.Final_Table_Made , poker_player.Best_Finish FROM poker_player
Correct: True

Level: medium
Gold SQL: SELECT Final_Table_Made ,  Best_Finish FROM poker_player
Pred SQL: SELECT poker_player.Final_Table_Made , poker_player.Best_Finish FROM poker_player
Correct: True

Level: easy
Gold SQL: SELECT avg(Earnings) FROM poker_player
Pred SQL: SELECT AVG(poker_player.Earnings) FROM poker_player
Correct: True

Level: easy
Gold SQL: SELECT avg(Earnings) FROM poker_player
Pred SQL: SELECT AVG(poker_player.Earnings) FROM poker_player
Correct: True

Level: medium
Gold SQL: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
Pred SQL: SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Earnings DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
Pred SQL: SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Earnings DESC LIMIT 1
Correct: True

Level: easy
Gold SQL: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
Pred SQL: SELECT COUNT(*) FROM poker_player WHERE poker_player.Earnings < "value"
Correct: 0

Level: easy
Gold SQL: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
Pred SQL: SELECT MAX(poker_player.Final_Table_Made) FROM poker_player WHERE poker_player.Earnings < "value"
Correct: True

Level: easy
Gold SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
Pred SQL: SELECT people.Name FROM poker_player JOIN people
Correct: True

Level: easy
Gold SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
Pred SQL: SELECT people.Name FROM poker_player JOIN people
Correct: True

Level: medium
Gold SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
Pred SQL: SELECT people.Name FROM poker_player JOIN people WHERE poker_player.Earnings > "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
Pred SQL: SELECT people.Name FROM poker_player JOIN people WHERE poker_player.Earnings > "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
Pred SQL: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Final_Table_Made ASC
Correct: True

Level: medium
Gold SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
Pred SQL: SELECT people.Name FROM poker_player JOIN people GROUP BY people.Name ORDER BY COUNT(*) ASC
Correct: 0

Level: hard
Gold SQL: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
Pred SQL: SELECT people.Birth_Date FROM poker_player JOIN people ORDER BY poker_player.Earnings ASC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
Pred SQL: SELECT people.Birth_Date FROM poker_player JOIN people ORDER BY poker_player.Earnings ASC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
Pred SQL: SELECT poker_player.Money_Rank FROM poker_player JOIN people ORDER BY people.Height DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
Pred SQL: SELECT poker_player.Money_Rank FROM poker_player JOIN people ORDER BY people.Height DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
Pred SQL: SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people WHERE people.Height > "value"
Correct: True

Level: medium
Gold SQL: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
Pred SQL: SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people WHERE people.Height > "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
Pred SQL: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Earnings DESC
Correct: True

Level: medium
Gold SQL: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
Pred SQL: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Earnings DESC
Correct: True

Level: medium
Gold SQL: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
Pred SQL: SELECT people.Nationality , COUNT(*) FROM people GROUP BY people.Nationality
Correct: True

Level: medium
Gold SQL: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
Pred SQL: SELECT people.Nationality , COUNT(*) FROM people GROUP BY people.Nationality
Correct: True

Level: hard
Gold SQL: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
Pred SQL: SELECT people.Nationality FROM people GROUP BY people.Nationality ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
Pred SQL: SELECT people.Nationality FROM people GROUP BY people.Nationality ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: easy
Gold SQL: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
Pred SQL: SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING COUNT(*) >= "value"
Correct: True

Level: easy
Gold SQL: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
Pred SQL: SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING COUNT(*) >= "value"
Correct: True

Level: medium
Gold SQL: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
Pred SQL: SELECT people.Name , people.Birth_Date FROM people ORDER BY people.Name ASC
Correct: True

Level: medium
Gold SQL: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
Pred SQL: SELECT people.Name , people.Birth_Date FROM people ORDER BY people.Name ASC
Correct: True

Level: easy
Gold SQL: SELECT Name FROM people WHERE Nationality != "Russia"
Pred SQL: SELECT people.Name FROM people WHERE people.Nationality != "value"
Correct: True

Level: easy
Gold SQL: SELECT Name FROM people WHERE Nationality != "Russia"
Pred SQL: SELECT people.Name FROM people WHERE people.Nationality != "value"
Correct: True

Level: hard
Gold SQL: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
Pred SQL: SELECT people.Name FROM people EXCEPT SELECT people.Name FROM people JOIN poker_player
Correct: 0

Level: hard
Gold SQL: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
Pred SQL: SELECT people.Name FROM people EXCEPT SELECT people.Name FROM people JOIN poker_player
Correct: 0

Level: easy
Gold SQL: SELECT count(DISTINCT Nationality) FROM people
Pred SQL: SELECT COUNT(people.Nationality) FROM people
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT Nationality) FROM people
Pred SQL: SELECT COUNT(people.Nationality) FROM people
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM area_code_state
Pred SQL: SELECT COUNT(*) FROM AREA_CODE_STATE
Correct: True

Level: medium
Gold SQL: SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC
Pred SQL: SELECT CONTESTANTS.contestant_number , CONTESTANTS.contestant_name FROM CONTESTANTS ORDER BY CONTESTANTS.contestant_name DESC
Correct: True

Level: medium
Gold SQL: SELECT vote_id ,  phone_number ,  state FROM votes
Pred SQL: SELECT VOTES.vote_id , VOTES.phone_number , VOTES.state FROM VOTES
Correct: True

Level: medium
Gold SQL: SELECT max(area_code) ,  min(area_code) FROM area_code_state
Pred SQL: SELECT MAX(AREA_CODE_STATE.area_code) , MIN(AREA_CODE_STATE.area_code) FROM AREA_CODE_STATE
Correct: True

Level: easy
Gold SQL: SELECT max(created) FROM votes WHERE state  =  'CA'
Pred SQL: SELECT MAX(VOTES.created) FROM VOTES WHERE VOTES.state = "value"
Correct: True

Level: easy
Gold SQL: SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
Pred SQL: SELECT CONTESTANTS.contestant_name FROM CONTESTANTS WHERE CONTESTANTS.contestant_name != "value"
Correct: True

Level: medium
Gold SQL: SELECT DISTINCT state ,  created FROM votes
Pred SQL: SELECT VOTES.state , VOTES.created FROM VOTES
Correct: True

Level: medium
Gold SQL: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2
Pred SQL: SELECT CONTESTANTS.contestant_number , CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES GROUP BY VOTES.contestant_number HAVING COUNT(*) >= "value"
Correct: True

Level: extra
Gold SQL: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1
Pred SQL: SELECT CONTESTANTS.contestant_number , CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES ORDER BY VOTES.vote_id ASC LIMIT 1
Correct: 0

Level: medium
Gold SQL: SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'
Pred SQL: SELECT COUNT(*) FROM VOTES WHERE VOTES.state = "value" OR VOTES.state = "value"
Correct: True

Level: extra
Gold SQL: SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )
Pred SQL: SELECT COUNT(*) FROM CONTESTANTS WHERE CONTESTANTS.contestant_number NOT IN ( SELECT VOTES.contestant_number FROM VOTES )
Correct: True

Level: extra
Gold SQL: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN VOTES GROUP BY AREA_CODE_STATE.area_code ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'
Pred SQL: SELECT VOTES.created , VOTES.state , VOTES.phone_number FROM VOTES JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name = "value"
Correct: True

Level: extra
Gold SQL: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'
Pred SQL: SELECT AREA_CODE_STATE.area_code FROM VOTES JOIN CONTESTANTS JOIN AREA_CODE_STATE WHERE CONTESTANTS.contestant_name = "value" INTERSECT SELECT AREA_CODE_STATE.area_code FROM VOTES JOIN CONTESTANTS JOIN AREA_CODE_STATE WHERE CONTESTANTS.contestant_name = "value"
Correct: True

Level: medium
Gold SQL: select contestant_name from contestants where contestant_name like "%al%"
Pred SQL: SELECT CONTESTANTS.contestant_name FROM CONTESTANTS WHERE CONTESTANTS.contestant_name LIKE "value"
Correct: True

Level: easy
Gold SQL: SELECT Name FROM country WHERE IndepYear  >  1950
Pred SQL: SELECT country.Name FROM country WHERE country.IndepYear > "value"
Correct: True

Level: easy
Gold SQL: SELECT Name FROM country WHERE IndepYear  >  1950
Pred SQL: SELECT country.Name FROM country WHERE country.IndepYear > "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
Pred SQL: SELECT COUNT(*) FROM country WHERE country.GovernmentForm = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
Pred SQL: SELECT COUNT(*) FROM country WHERE country.GovernmentForm = "value"
Correct: True

Level: easy
Gold SQL: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
Pred SQL: SELECT SUM(country.SurfaceArea) FROM country WHERE country.Region = "value"
Correct: True

Level: easy
Gold SQL: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
Pred SQL: SELECT SUM(country.SurfaceArea) FROM country WHERE country.Continent = "value"
Correct: 0

Level: easy
Gold SQL: SELECT Continent FROM country WHERE Name  =  "Anguilla"
Pred SQL: SELECT country.Continent FROM country WHERE country.Name = "value"
Correct: True

Level: easy
Gold SQL: SELECT Continent FROM country WHERE Name  =  "Anguilla"
Pred SQL: SELECT country.Continent FROM country WHERE country.LocalName = "value"
Correct: 0

Level: medium
Gold SQL: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
Pred SQL: SELECT country.Region FROM city JOIN country WHERE city.Name = "value"
Correct: True

Level: medium
Gold SQL: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
Pred SQL: SELECT country.Region FROM city JOIN country WHERE city.Name = "value"
Correct: True

Level: extra
Gold SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
Pred SQL: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Name = "value" GROUP BY countrylanguage.Language ORDER BY COUNT(*) DESC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
Pred SQL: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Name = "value"
Correct: 0

Level: medium
Gold SQL: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
Pred SQL: SELECT country.Population , country.LifeExpectancy FROM country WHERE country.Name = "value"
Correct: True

Level: medium
Gold SQL: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
Pred SQL: SELECT country.Population , country.LifeExpectancy FROM country WHERE country.Name = "value"
Correct: True

Level: medium
Gold SQL: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
Pred SQL: SELECT country.Region , country.Population FROM country WHERE country.Name = "value"
Correct: True

Level: medium
Gold SQL: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
Pred SQL: SELECT country.Population , country.Region FROM country WHERE country.Name = "value"
Correct: True

Level: easy
Gold SQL: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
Pred SQL: SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Region = "value"
Correct: True

Level: easy
Gold SQL: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
Pred SQL: SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Region = "value"
Correct: True

Level: hard
Gold SQL: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
Pred SQL: SELECT country.Name FROM country WHERE country.Continent = "value" ORDER BY country.LifeExpectancy ASC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
Pred SQL: SELECT country.Name FROM country WHERE country.Continent = "value" ORDER BY country.LifeExpectancy ASC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
Pred SQL: SELECT SUM(country.Population) , MAX(country.GNP) FROM country WHERE country.Continent = "value"
Correct: True

Level: medium
Gold SQL: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
Pred SQL: SELECT country.Population , country.GNP FROM country WHERE country.Continent = "value" ORDER BY country.GNP DESC LIMIT 1
Correct: 0

Level: medium
Gold SQL: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
Pred SQL: SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Name = "value" AND country.Continent = "value"
Correct: 0

Level: medium
Gold SQL: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
Pred SQL: SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Continent = "value"
Correct: 0

Level: medium
Gold SQL: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
Pred SQL: SELECT SUM(country.SurfaceArea) FROM country WHERE country.Continent = "value" OR country.Continent = "value"
Correct: True

Level: medium
Gold SQL: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
Pred SQL: SELECT SUM(country.SurfaceArea) FROM country WHERE country.Continent = "value" OR country.Continent = "value"
Correct: True

Level: easy
Gold SQL: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
Pred SQL: SELECT city.Population FROM city WHERE city.District = "value"
Correct: 0

Level: easy
Gold SQL: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
Pred SQL: SELECT SUM(city.Population) FROM city WHERE city.District = "value"
Correct: True

Level: medium
Gold SQL: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
Pred SQL: SELECT AVG(country.GNP) , SUM(country.Population) FROM country WHERE country.GovernmentForm = "value"
Correct: True

Level: medium
Gold SQL: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
Pred SQL: SELECT AVG(country.GNP) , SUM(country.Population) FROM country WHERE country.GovernmentForm = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
Pred SQL: SELECT COUNT(countrylanguage.Language) FROM countrylanguage
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
Pred SQL: SELECT COUNT(countrylanguage.Language) FROM countrylanguage
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
Pred SQL: SELECT COUNT(country.GovernmentForm) FROM country WHERE country.Continent = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
Pred SQL: SELECT COUNT(country.GovernmentForm) FROM country WHERE country.Continent = "value"
Correct: True

Level: medium
Gold SQL: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
Pred SQL: SELECT COUNT(countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.Name = "value"
Correct: True

Level: medium
Gold SQL: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
Pred SQL: SELECT COUNT(countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.Name = "value"
Correct: True

Level: medium
Gold SQL: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
Pred SQL: SELECT COUNT(countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.Name = "value"
Correct: 0

Level: medium
Gold SQL: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
Pred SQL: SELECT COUNT(countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.Name = "value"
Correct: 0

Level: extra
Gold SQL: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
Pred SQL: SELECT country.Name FROM countrylanguage JOIN country GROUP BY countrylanguage.CountryCode ORDER BY COUNT(*) DESC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
Pred SQL: SELECT country.Name FROM countrylanguage JOIN country GROUP BY country.Name ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
Pred SQL: SELECT country.Continent FROM countrylanguage JOIN country GROUP BY country.Continent ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
Pred SQL: SELECT country.Continent FROM countrylanguage JOIN country GROUP BY country.Continent ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: easy
Gold SQL: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
Pred SQL: SELECT COUNT(*) FROM countrylanguage JOIN country WHERE countrylanguage.Language = "value"
Correct: 0

Level: easy
Gold SQL: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
Pred SQL: SELECT COUNT(*) FROM ( SELECT * FROM countrylanguage WHERE countrylanguage.Language = "value" INTERSECT SELECT * FROM countrylanguage WHERE countrylanguage.Language = "value" )
Correct: 0

Level: extra
Gold SQL: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
Pred SQL: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = "value" INTERSECT SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = "value"
Correct: True

Level: extra
Gold SQL: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
Pred SQL: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = "value" INTERSECT SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = "value"
Correct: True

Level: extra
Gold SQL: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
Pred SQL: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = "value" INTERSECT SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = "value"
Correct: 0

Level: extra
Gold SQL: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
Pred SQL: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = "value" INTERSECT SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = "value"
Correct: 0

Level: medium
Gold SQL: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
Pred SQL: SELECT COUNT(country.Continent) FROM countrylanguage JOIN country WHERE countrylanguage.Language = "value"
Correct: True

Level: medium
Gold SQL: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
Pred SQL: SELECT COUNT(country.Continent) FROM countrylanguage JOIN country WHERE countrylanguage.Language = "value"
Correct: True

Level: hard
Gold SQL: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
Pred SQL: SELECT country.Region FROM countrylanguage JOIN country WHERE countrylanguage.Language = "value" OR countrylanguage.Language = "value"
Correct: True

Level: hard
Gold SQL: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
Pred SQL: SELECT country.Region FROM countrylanguage JOIN country WHERE countrylanguage.Language = "value" OR countrylanguage.Language = "value"
Correct: True

Level: extra
Gold SQL: select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" and isofficial  =  "t" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "dutch" and isofficial  =  "t"
Pred SQL: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = "value" OR countrylanguage.Language = "value"
Correct: 0

Level: extra
Gold SQL: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"
Pred SQL: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = "value" OR countrylanguage.Language = "value"
Correct: 0

Level: extra
Gold SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
Pred SQL: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Continent = "value" GROUP BY countrylanguage.Language ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
Pred SQL: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Continent = "value" GROUP BY countrylanguage.Language ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
Pred SQL: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.GovernmentForm = "value" GROUP BY countrylanguage.Language HAVING COUNT(*) = "value"
Correct: True

Level: hard
Gold SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
Pred SQL: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.GovernmentForm = "value" GROUP BY countrylanguage.Language HAVING COUNT(*) = "value"
Correct: True

Level: extra
Gold SQL: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
Pred SQL: SELECT city.Name FROM city JOIN countrylanguage WHERE countrylanguage.Language = "value" ORDER BY city.Population DESC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
Pred SQL: SELECT city.Name FROM city JOIN countrylanguage WHERE countrylanguage.Language = "value" ORDER BY city.Population DESC LIMIT 1
Correct: 0

Level: hard
Gold SQL: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
Pred SQL: SELECT country.Name , country.Population , country.LifeExpectancy FROM country WHERE country.Continent = "value" ORDER BY country.LifeExpectancy DESC LIMIT 1
Correct: 0

Level: hard
Gold SQL: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
Pred SQL: SELECT country.Name , country.Population , country.LifeExpectancy FROM country WHERE country.Continent = "value" ORDER BY country.SurfaceArea DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
Pred SQL: SELECT AVG(country.LifeExpectancy) FROM country JOIN countrylanguage WHERE countrylanguage.Language != "value"
Correct: 0

Level: extra
Gold SQL: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
Pred SQL: SELECT AVG(country.LifeExpectancy) FROM country JOIN countrylanguage WHERE countrylanguage.Language != "value"
Correct: 0

Level: extra
Gold SQL: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
Pred SQL: SELECT SUM(country.Population) FROM country JOIN countrylanguage WHERE countrylanguage.Language != "value"
Correct: 0

Level: extra
Gold SQL: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
Pred SQL: SELECT country.Population FROM country JOIN countrylanguage WHERE countrylanguage.Language != "value"
Correct: 0

Level: medium
Gold SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
Pred SQL: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.HeadOfState = "value"
Correct: 0

Level: medium
Gold SQL: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
Pred SQL: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.HeadOfState = "value"
Correct: 0

Level: medium
Gold SQL: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
Pred SQL: SELECT COUNT(countrylanguage.Language) FROM countrylanguage WHERE countrylanguage.IsOfficial < "value"
Correct: 0

Level: medium
Gold SQL: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
Pred SQL: SELECT COUNT(countrylanguage.Language) FROM countrylanguage WHERE countrylanguage.IsOfficial < "value"
Correct: 0

Level: hard
Gold SQL: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
Pred SQL: SELECT country.Name FROM country WHERE country.SurfaceArea > ( SELECT MAX(country.SurfaceArea) FROM country WHERE country.Continent = "value" )
Correct: 0

Level: hard
Gold SQL: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
Pred SQL: SELECT country.Name FROM country WHERE country.SurfaceArea > ( SELECT MAX(country.SurfaceArea) FROM country WHERE country.Continent = "value" )
Correct: 0

Level: extra
Gold SQL: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")
Pred SQL: SELECT country.Name FROM country WHERE country.Population < ( SELECT MIN(country.Population) FROM country WHERE country.Continent = "value" )
Correct: 0

Level: extra
Gold SQL: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  "Asia")
Pred SQL: SELECT country.Name FROM country WHERE country.Population < ( SELECT MIN(country.Population) FROM country WHERE country.Continent = "value" )
Correct: 0

Level: extra
Gold SQL: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  "Africa")
Pred SQL: SELECT country.Name FROM country WHERE country.Population > ( SELECT MAX(country.Population) FROM country WHERE country.Continent = "value" )
Correct: 0

Level: extra
Gold SQL: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")
Pred SQL: SELECT country.Name FROM country WHERE country.Population > ( SELECT MAX(country.Population) FROM country WHERE country.Continent = "value" )
Correct: 0

Level: hard
Gold SQL: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
Pred SQL: SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language != "value"
Correct: 0

Level: hard
Gold SQL: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
Pred SQL: SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language != "value"
Correct: 0

Level: easy
Gold SQL: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
Pred SQL: SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language != "value"
Correct: True

Level: easy
Gold SQL: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
Pred SQL: SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language != "value"
Correct: True

Level: hard
Gold SQL: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
Pred SQL: SELECT country.Code FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value" AND country.GovernmentForm != "value"
Correct: 0

Level: hard
Gold SQL: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
Pred SQL: SELECT country.Code FROM countrylanguage JOIN country WHERE countrylanguage.Language = "value" AND country.GovernmentForm != "value"
Correct: 0

Level: extra
Gold SQL: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
Pred SQL: SELECT city.Name FROM city JOIN country JOIN countrylanguage WHERE countrylanguage.Language = "value" AND countrylanguage.Language = "value" AND countrylanguage.IsOfficial != "value"
Correct: 0

Level: extra
Gold SQL: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
Pred SQL: SELECT city.Name FROM city JOIN country JOIN countrylanguage WHERE countrylanguage.Language = "value" AND country.Continent = "value" AND countrylanguage.IsOfficial != "value"
Correct: 0

Level: hard
Gold SQL: select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  "asia"
Pred SQL: SELECT city.Name FROM city JOIN country JOIN countrylanguage WHERE country.Continent = "value" AND countrylanguage.Language = "value"
Correct: 0

Level: hard
Gold SQL: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"
Pred SQL: SELECT city.Name FROM city JOIN country JOIN countrylanguage WHERE country.Continent = "value" AND countrylanguage.Language = "value"
Correct: 0

Level: medium
Gold SQL: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
Pred SQL: SELECT country.Name , country.IndepYear , country.SurfaceArea FROM country ORDER BY country.Population ASC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
Pred SQL: SELECT country.Name , country.IndepYear , country.SurfaceArea FROM country ORDER BY country.Population ASC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
Pred SQL: SELECT country.Population , country.Name , country.HeadOfState FROM country ORDER BY country.SurfaceArea DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
Pred SQL: SELECT country.Name , country.Population , country.HeadOfState FROM country ORDER BY country.Population DESC LIMIT 1
Correct: 0

Level: medium
Gold SQL: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
Pred SQL: SELECT country.Name , COUNT(*) FROM countrylanguage JOIN country GROUP BY countrylanguage.CountryCode HAVING COUNT(*) >= "value"
Correct: 0

Level: medium
Gold SQL: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
Pred SQL: SELECT country.Name , COUNT(*) FROM countrylanguage JOIN country GROUP BY countrylanguage.CountryCode HAVING COUNT(*) > "value"
Correct: 0

Level: extra
Gold SQL: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
Pred SQL: SELECT COUNT(*) , city.District FROM city WHERE city.Population > ( SELECT AVG(city.Population) FROM city ) GROUP BY city.District
Correct: True

Level: extra
Gold SQL: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
Pred SQL: SELECT COUNT(*) , city.District FROM city WHERE city.Population > ( SELECT AVG(city.Population) FROM city ) GROUP BY city.District
Correct: True

Level: medium
Gold SQL: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
Pred SQL: SELECT country.GovernmentForm , SUM(country.Population) FROM country GROUP BY country.GovernmentForm HAVING AVG(country.LifeExpectancy) > "value"
Correct: True

Level: medium
Gold SQL: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
Pred SQL: SELECT country.GovernmentForm , SUM(country.Population) FROM country GROUP BY country.GovernmentForm HAVING AVG(country.LifeExpectancy) > "value"
Correct: True

Level: medium
Gold SQL: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
Pred SQL: SELECT country.Name , AVG(country.LifeExpectancy) , SUM(country.Population) FROM country GROUP BY country.Continent
Correct: 0

Level: medium
Gold SQL: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
Pred SQL: SELECT country.Continent , SUM(country.Population) , AVG(country.LifeExpectancy) FROM country GROUP BY country.Continent
Correct: 0

Level: medium
Gold SQL: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
Pred SQL: SELECT country.Name , country.SurfaceArea FROM country ORDER BY country.SurfaceArea DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
Pred SQL: SELECT country.Name , country.SurfaceArea FROM country ORDER BY country.SurfaceArea DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT Name FROM country ORDER BY Population DESC LIMIT 3
Pred SQL: SELECT country.Name FROM country ORDER BY country.Population DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT Name FROM country ORDER BY Population DESC LIMIT 3
Pred SQL: SELECT country.Name FROM country ORDER BY country.Population DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT Name FROM country ORDER BY Population ASC LIMIT 3
Pred SQL: SELECT country.Name FROM country ORDER BY country.Population ASC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT Name FROM country ORDER BY Population ASC LIMIT 3
Pred SQL: SELECT country.Name FROM country ORDER BY country.Population ASC LIMIT 1
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM country WHERE continent  =  "Asia"
Pred SQL: SELECT COUNT(*) FROM country WHERE country.Continent = "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM country WHERE continent  =  "Asia"
Pred SQL: SELECT COUNT(*) FROM country WHERE country.Continent = "value"
Correct: True

Level: medium
Gold SQL: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
Pred SQL: SELECT country.Name FROM country WHERE country.Continent = "value" AND country.Population > "value"
Correct: 0

Level: medium
Gold SQL: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
Pred SQL: SELECT country.Name FROM country WHERE country.Continent = "value" AND country.Population >= "value"
Correct: 0

Level: hard
Gold SQL: select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
Pred SQL: SELECT SUM(country.Population) , AVG(country.SurfaceArea) FROM country WHERE country.Continent = "value" AND country.Continent > "value"
Correct: 0

Level: hard
Gold SQL: select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
Pred SQL: SELECT SUM(country.Population) , AVG(country.SurfaceArea) FROM country WHERE country.Continent = "value" AND country.Continent > "value"
Correct: 0

Level: easy
Gold SQL: SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000
Pred SQL: SELECT city.Name FROM city WHERE city.Population BETWEEN "value" AND "value"
Correct: True

Level: easy
Gold SQL: select name from city where population between 160000 and 900000
Pred SQL: SELECT city.Name FROM city WHERE city.Population BETWEEN "value" AND "value"
Correct: True

Level: hard
Gold SQL: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
Pred SQL: SELECT countrylanguage.Language FROM countrylanguage JOIN country GROUP BY country.Name
Correct: 0

Level: medium
Gold SQL: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
Pred SQL: SELECT countrylanguage.CountryCode , MAX(countrylanguage.Language) FROM countrylanguage GROUP BY countrylanguage.CountryCode
Correct: 0

Level: extra
Gold SQL: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
Pred SQL: SELECT * FROM countrylanguage WHERE countrylanguage.Language = "value" ORDER BY countrylanguage.Percentage DESC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
Pred SQL: SELECT COUNT(*) FROM countrylanguage WHERE countrylanguage.Language = "value"
Correct: 0

Level: medium
Gold SQL: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
Pred SQL: SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = "value" ORDER BY countrylanguage.Percentage DESC LIMIT 1
Correct: 0

Level: medium
Gold SQL: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
Pred SQL: SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = "value"
Correct: 0

Level: easy
Gold SQL: SELECT count(*) FROM conductor
Pred SQL: SELECT COUNT(*) FROM conductor
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM conductor
Pred SQL: SELECT COUNT(*) FROM conductor
Correct: True

Level: easy
Gold SQL: SELECT Name FROM conductor ORDER BY Age ASC
Pred SQL: SELECT conductor.Name FROM conductor ORDER BY conductor.Age ASC
Correct: True

Level: easy
Gold SQL: SELECT Name FROM conductor ORDER BY Age ASC
Pred SQL: SELECT conductor.Name FROM conductor ORDER BY conductor.Age ASC
Correct: True

Level: easy
Gold SQL: SELECT Name FROM conductor WHERE Nationality != 'USA'
Pred SQL: SELECT conductor.Name FROM conductor WHERE conductor.Nationality != "value"
Correct: True

Level: easy
Gold SQL: SELECT Name FROM conductor WHERE Nationality != 'USA'
Pred SQL: SELECT conductor.Name FROM conductor WHERE conductor.Nationality != "value"
Correct: True

Level: easy
Gold SQL: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
Pred SQL: SELECT orchestra.Record_Company FROM orchestra ORDER BY orchestra.Year_of_Founded DESC
Correct: True

Level: easy
Gold SQL: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
Pred SQL: SELECT orchestra.Record_Company FROM orchestra ORDER BY orchestra.Year_of_Founded DESC
Correct: True

Level: easy
Gold SQL: SELECT avg(Attendance) FROM SHOW
Pred SQL: SELECT AVG(show.Attendance) FROM show
Correct: True

Level: easy
Gold SQL: SELECT avg(Attendance) FROM SHOW
Pred SQL: SELECT AVG(show.Attendance) FROM show
Correct: True

Level: medium
Gold SQL: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
Pred SQL: SELECT MAX(performance.Share) , MIN(performance.Share) FROM performance WHERE performance.Type != "value"
Correct: True

Level: medium
Gold SQL: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
Pred SQL: SELECT MAX(performance.Share) , MIN(performance.Share) FROM performance WHERE performance.Type != "value"
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT Nationality) FROM conductor
Pred SQL: SELECT COUNT(conductor.Nationality) FROM conductor
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT Nationality) FROM conductor
Pred SQL: SELECT COUNT(conductor.Nationality) FROM conductor
Correct: True

Level: easy
Gold SQL: SELECT Name FROM conductor ORDER BY Year_of_Work DESC
Pred SQL: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work DESC
Correct: True

Level: easy
Gold SQL: SELECT Name FROM conductor ORDER BY Year_of_Work DESC
Pred SQL: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work DESC
Correct: True

Level: medium
Gold SQL: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
Pred SQL: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
Pred SQL: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
Pred SQL: SELECT conductor.Name , orchestra.Orchestra FROM performance JOIN conductor JOIN orchestra
Correct: False

Level: medium
Gold SQL: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
Pred SQL: SELECT conductor.Name , orchestra.Orchestra FROM conductor JOIN orchestra
Correct: True

Level: medium
Gold SQL: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
Pred SQL: SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY conductor.Name HAVING COUNT(*) > "value"
Correct: 0

Level: medium
Gold SQL: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
Pred SQL: SELECT conductor.Name FROM performance JOIN orchestra JOIN conductor GROUP BY conductor.Name HAVING COUNT(*) > "value"
Correct: 0

Level: extra
Gold SQL: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
Pred SQL: SELECT conductor.Name FROM conductor JOIN orchestra JOIN performance GROUP BY performance.Orchestra_ID ORDER BY COUNT(*) DESC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
Pred SQL: SELECT conductor.Name FROM conductor JOIN orchestra JOIN performance GROUP BY conductor.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
Correct: False

Level: medium
Gold SQL: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
Pred SQL: SELECT conductor.Name FROM conductor JOIN orchestra WHERE orchestra.Year_of_Founded > "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
Pred SQL: SELECT conductor.Name FROM orchestra JOIN conductor WHERE orchestra.Year_of_Founded > "value"
Correct: True

Level: medium
Gold SQL: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
Pred SQL: SELECT orchestra.Record_Company , COUNT(*) FROM orchestra GROUP BY orchestra.Record_Company
Correct: True

Level: medium
Gold SQL: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
Pred SQL: SELECT orchestra.Record_Company , COUNT(*) FROM orchestra GROUP BY orchestra.Record_Company
Correct: True

Level: medium
Gold SQL: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
Pred SQL: SELECT orchestra.Major_Record_Format FROM orchestra GROUP BY orchestra.Major_Record_Format ORDER BY COUNT(*) ASC
Correct: True

Level: medium
Gold SQL: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
Pred SQL: SELECT orchestra.Major_Record_Format FROM orchestra GROUP BY orchestra.Major_Record_Format ORDER BY COUNT(*) ASC
Correct: True

Level: hard
Gold SQL: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
Pred SQL: SELECT orchestra.Record_Company FROM orchestra GROUP BY orchestra.Record_Company ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
Pred SQL: SELECT orchestra.Record_Company FROM orchestra GROUP BY orchestra.Record_Company ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
Pred SQL: SELECT orchestra.Orchestra FROM orchestra WHERE orchestra.Orchestra_ID NOT IN ( SELECT performance.Orchestra_ID FROM performance )
Correct: True

Level: hard
Gold SQL: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
Pred SQL: SELECT orchestra.Orchestra FROM orchestra WHERE orchestra.Orchestra_ID NOT IN ( SELECT performance.Orchestra_ID FROM performance )
Correct: True

Level: hard
Gold SQL: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
Pred SQL: SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < "value" INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded > "value"
Correct: True

Level: hard
Gold SQL: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
Pred SQL: SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < "value" INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded > "value"
Correct: True

Level: medium
Gold SQL: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
Pred SQL: SELECT COUNT(*) FROM orchestra WHERE orchestra.Major_Record_Format = "value" OR orchestra.Major_Record_Format = "value"
Correct: True

Level: medium
Gold SQL: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
Pred SQL: SELECT COUNT(*) FROM orchestra WHERE orchestra.Major_Record_Format = "value" OR orchestra.Major_Record_Format = "value"
Correct: True

Level: medium
Gold SQL: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
Pred SQL: SELECT orchestra.Year_of_Founded FROM performance JOIN orchestra JOIN show GROUP BY performance.Orchestra_ID HAVING COUNT(*) > "value"
Correct: False

Level: medium
Gold SQL: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
Pred SQL: SELECT orchestra.Year_of_Founded FROM performance JOIN orchestra GROUP BY performance.Orchestra_ID HAVING COUNT(*) > "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM Highschooler
Pred SQL: SELECT COUNT(*) FROM Highschooler
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM Highschooler
Pred SQL: SELECT COUNT(*) FROM Highschooler
Correct: True

Level: medium
Gold SQL: SELECT name ,  grade FROM Highschooler
Pred SQL: SELECT Highschooler.name , Highschooler.grade FROM Highschooler
Correct: True

Level: medium
Gold SQL: SELECT name ,  grade FROM Highschooler
Pred SQL: SELECT Highschooler.name , Highschooler.grade FROM Highschooler
Correct: True

Level: easy
Gold SQL: SELECT grade FROM Highschooler
Pred SQL: SELECT Highschooler.grade FROM Highschooler
Correct: True

Level: easy
Gold SQL: SELECT grade FROM Highschooler
Pred SQL: SELECT Highschooler.grade FROM Highschooler
Correct: True

Level: easy
Gold SQL: SELECT grade FROM Highschooler WHERE name  =  "Kyle"
Pred SQL: SELECT Highschooler.grade FROM Highschooler WHERE Highschooler.name = "value"
Correct: True

Level: easy
Gold SQL: SELECT grade FROM Highschooler WHERE name  =  "Kyle"
Pred SQL: SELECT Highschooler.grade FROM Highschooler WHERE Highschooler.name = "value"
Correct: True

Level: easy
Gold SQL: SELECT name FROM Highschooler WHERE grade  =  10
Pred SQL: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.grade = "value"
Correct: True

Level: easy
Gold SQL: SELECT name FROM Highschooler WHERE grade  =  10
Pred SQL: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.grade = "value"
Correct: True

Level: easy
Gold SQL: SELECT ID FROM Highschooler WHERE name  =  "Kyle"
Pred SQL: SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = "value"
Correct: True

Level: easy
Gold SQL: SELECT ID FROM Highschooler WHERE name  =  "Kyle"
Pred SQL: SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
Pred SQL: SELECT COUNT(*) FROM Highschooler WHERE Highschooler.grade = "value" OR Highschooler.grade = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
Pred SQL: SELECT COUNT(*) FROM Highschooler WHERE Highschooler.grade = "value" OR Highschooler.grade = "value"
Correct: True

Level: medium
Gold SQL: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
Pred SQL: SELECT Highschooler.grade , COUNT(*) FROM Highschooler GROUP BY Highschooler.grade
Correct: True

Level: medium
Gold SQL: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
Pred SQL: SELECT COUNT(*) , Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade
Correct: True

Level: hard
Gold SQL: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: easy
Gold SQL: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
Pred SQL: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING COUNT(*) >= "value"
Correct: True

Level: easy
Gold SQL: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
Pred SQL: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING COUNT(*) >= "value"
Correct: True

Level: medium
Gold SQL: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
Pred SQL: SELECT Friend.student_id , COUNT(*) FROM Friend GROUP BY Friend.student_id
Correct: True

Level: medium
Gold SQL: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
Pred SQL: SELECT COUNT(*) FROM Friend
Correct: 0

Level: medium
Gold SQL: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
Pred SQL: SELECT Highschooler.name , COUNT(*) FROM Highschooler JOIN Friend GROUP BY Friend.student_id
Correct: True

Level: medium
Gold SQL: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
Pred SQL: SELECT Highschooler.name , COUNT(*) FROM Highschooler JOIN Friend GROUP BY Friend.student_id
Correct: True

Level: extra
Gold SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
Pred SQL: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING COUNT(*) >= "value"
Correct: True

Level: medium
Gold SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
Pred SQL: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING COUNT(*) >= "value"
Correct: True

Level: hard
Gold SQL: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
Pred SQL: SELECT Highschooler.name FROM Friend JOIN Highschooler JOIN Highschooler WHERE Highschooler.name = "value"
Correct: True

Level: hard
Gold SQL: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
Pred SQL: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.name = "value"
Correct: False

Level: medium
Gold SQL: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
Pred SQL: SELECT COUNT(*) FROM Highschooler JOIN Friend WHERE Highschooler.name = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
Pred SQL: SELECT COUNT(Friend.friend_id) FROM Friend JOIN Highschooler WHERE Highschooler.name = "value"
Correct: 0

Level: hard
Gold SQL: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
Pred SQL: SELECT Highschooler.ID FROM Highschooler EXCEPT SELECT Friend.student_id FROM Friend
Correct: True

Level: hard
Gold SQL: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
Pred SQL: SELECT Highschooler.ID FROM Highschooler EXCEPT SELECT Friend.student_id FROM Friend
Correct: True

Level: hard
Gold SQL: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
Pred SQL: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.ID NOT IN ( SELECT Friend.student_id FROM Friend )
Correct: 0

Level: hard
Gold SQL: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
Pred SQL: SELECT Highschooler.name FROM Highschooler EXCEPT SELECT Highschooler.name FROM Highschooler JOIN Friend
Correct: True

Level: hard
Gold SQL: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
Pred SQL: SELECT Highschooler.ID FROM Highschooler INTERSECT SELECT Likes.student_id FROM Likes
Correct: 0

Level: hard
Gold SQL: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
Pred SQL: SELECT Friend.student_id FROM Friend INTERSECT SELECT Likes.student_id FROM Likes
Correct: 0

Level: hard
Gold SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
Pred SQL: SELECT Highschooler.name FROM Highschooler JOIN Friend INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Likes
Correct: True

Level: hard
Gold SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
Pred SQL: SELECT Highschooler.name FROM Highschooler JOIN Friend INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Likes
Correct: True

Level: medium
Gold SQL: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
Pred SQL: SELECT COUNT(*) , Likes.student_id FROM Likes GROUP BY Likes.student_id
Correct: True

Level: medium
Gold SQL: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
Pred SQL: SELECT Likes.student_id , COUNT(*) FROM Likes GROUP BY Likes.student_id
Correct: True

Level: medium
Gold SQL: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
Pred SQL: SELECT Highschooler.name , COUNT(*) FROM Highschooler JOIN Likes GROUP BY Likes.student_id
Correct: True

Level: medium
Gold SQL: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
Pred SQL: SELECT Highschooler.name , COUNT(*) FROM Highschooler JOIN Likes GROUP BY Likes.student_id
Correct: True

Level: extra
Gold SQL: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Highschooler.name FROM Highschooler JOIN Likes ORDER BY Likes.student_id DESC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Highschooler.name FROM Highschooler JOIN Likes ORDER BY Highschooler.name DESC LIMIT 1
Correct: 0

Level: medium
Gold SQL: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
Pred SQL: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id HAVING COUNT(*) >= "value"
Correct: True

Level: medium
Gold SQL: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
Pred SQL: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id HAVING COUNT(*) >= "value"
Correct: True

Level: hard
Gold SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
Pred SQL: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade > "value" GROUP BY Friend.student_id HAVING COUNT(*) >= "value"
Correct: True

Level: hard
Gold SQL: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
Pred SQL: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade > "value" AND Friend.student_id >= "value"
Correct: 0

Level: medium
Gold SQL: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
Pred SQL: SELECT COUNT(*) FROM Likes JOIN Highschooler WHERE Highschooler.name = "value"
Correct: True

Level: medium
Gold SQL: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
Pred SQL: SELECT COUNT(*) FROM Highschooler JOIN Likes WHERE Highschooler.name = "value"
Correct: True

Level: hard
Gold SQL: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
Pred SQL: SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN ( SELECT Friend.student_id FROM Friend )
Correct: 0

Level: hard
Gold SQL: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
Pred SQL: SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN ( SELECT Friend.student_id FROM Friend )
Correct: 0

Level: extra
Gold SQL: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
Pred SQL: SELECT MIN(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID NOT IN ( SELECT Friend.student_id FROM Friend )
Correct: 0

Level: extra
Gold SQL: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
Pred SQL: SELECT MIN(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID NOT IN ( SELECT Friend.student_id FROM Friend )
Correct: 0

Level: hard
Gold SQL: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
Pred SQL: SELECT Owners.state FROM Owners INTERSECT SELECT Professionals.state FROM Professionals
Correct: True

Level: hard
Gold SQL: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
Pred SQL: SELECT Owners.state FROM Owners INTERSECT SELECT Professionals.state FROM Professionals
Correct: True

Level: hard
Gold SQL: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
Pred SQL: SELECT AVG(Dogs.age) FROM Dogs WHERE Dogs.dog_id IN ( SELECT Treatments.dog_id FROM Treatments )
Correct: True

Level: hard
Gold SQL: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
Pred SQL: SELECT AVG(Dogs.age) FROM Dogs
Correct: 0

Level: extra
Gold SQL: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
Pred SQL: SELECT Professionals.professional_id , Professionals.last_name , Professionals.cell_number FROM Professionals JOIN Treatments WHERE Professionals.state = "value" UNION SELECT Professionals.professional_id , Professionals.last_name , Professionals.cell_number FROM Professionals JOIN Treatments GROUP BY Professionals.professional_id HAVING COUNT(*) > "value"
Correct: False

Level: extra
Gold SQL: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
Pred SQL: SELECT Professionals.professional_id , Professionals.last_name , Professionals.cell_number FROM Treatments JOIN Professionals WHERE Professionals.state = "value" UNION SELECT Professionals.professional_id , Professionals.last_name , Professionals.cell_number FROM Treatments JOIN Professionals GROUP BY Professionals.professional_id HAVING COUNT(*) > "value"
Correct: False

Level: hard
Gold SQL: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
Pred SQL: SELECT Dogs.name FROM Dogs EXCEPT SELECT Dogs.name FROM Dogs JOIN Treatments WHERE Treatments.cost_of_treatment > "value"
Correct: 0

Level: hard
Gold SQL: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
Pred SQL: SELECT Dogs.name FROM Dogs EXCEPT SELECT Dogs.name FROM Dogs JOIN Treatments WHERE Treatments.cost_of_treatment > "value"
Correct: 0

Level: hard
Gold SQL: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
Pred SQL: SELECT Professionals.first_name FROM Professionals EXCEPT SELECT Professionals.first_name FROM Professionals JOIN Dogs
Correct: 0

Level: hard
Gold SQL: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
Pred SQL: SELECT Professionals.first_name FROM Professionals EXCEPT SELECT Professionals.first_name FROM Professionals JOIN Dogs
Correct: 0

Level: extra
Gold SQL: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
Pred SQL: SELECT Professionals.professional_id , Professionals.role_code , Professionals.email_address FROM Professionals EXCEPT SELECT Professionals.professional_id , Professionals.role_code , Professionals.email_address FROM Professionals JOIN Treatments
Correct: True

Level: extra
Gold SQL: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
Pred SQL: SELECT Professionals.professional_id , Professionals.role_code , Professionals.email_address FROM Professionals EXCEPT SELECT Professionals.professional_id , Professionals.role_code , Professionals.email_address FROM Professionals JOIN Treatments
Correct: True

Level: extra
Gold SQL: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Owners.owner_id , Owners.first_name , Owners.last_name FROM Owners JOIN Dogs GROUP BY Owners.owner_id ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Owners.owner_id , Owners.first_name , Owners.last_name FROM Owners JOIN Dogs GROUP BY Owners.owner_id ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
Pred SQL: SELECT Professionals.professional_id , Professionals.role_code , Professionals.first_name FROM Treatments JOIN Professionals GROUP BY Professionals.professional_id HAVING COUNT(*) >= "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
Pred SQL: SELECT Treatments.professional_id , Professionals.role_code , Professionals.first_name FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING COUNT(*) >= "value"
Correct: True

Level: extra
Gold SQL: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Breeds.breed_name FROM Breeds JOIN Dogs GROUP BY Dogs.breed_code ORDER BY COUNT(*) DESC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Breeds.breed_name FROM Breeds JOIN Dogs GROUP BY Dogs.breed_code ORDER BY COUNT(*) DESC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Owners.owner_id , Owners.last_name FROM Treatments JOIN Dogs JOIN Owners GROUP BY Owners.owner_id ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
Pred SQL: SELECT Owners.owner_id , Owners.last_name FROM Owners JOIN Dogs JOIN Treatments GROUP BY Owners.owner_id ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
Pred SQL: SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments GROUP BY Treatment_Types.treatment_type_code ORDER BY SUM(Treatments.cost_of_treatment) ASC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
Pred SQL: SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments GROUP BY Treatment_Types.treatment_type_code ORDER BY SUM(Treatments.cost_of_treatment) ASC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
Pred SQL: SELECT Owners.owner_id , Owners.zip_code FROM Charges JOIN Dogs JOIN Owners GROUP BY Owners.owner_id ORDER BY SUM(Charges.charge_amount) DESC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
Pred SQL: SELECT Owners.owner_id , Owners.zip_code FROM Owners JOIN Dogs GROUP BY Owners.owner_id ORDER BY SUM(Dogs.date_arrived) DESC LIMIT 1
Correct: 0

Level: medium
Gold SQL: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
Pred SQL: SELECT Professionals.professional_id , Professionals.cell_number FROM Professionals JOIN Treatments GROUP BY Professionals.professional_id HAVING COUNT(*) >= "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
Pred SQL: SELECT Professionals.professional_id , Professionals.cell_number FROM Professionals JOIN Treatments GROUP BY Professionals.professional_id HAVING COUNT(*) >= "value"
Correct: True

Level: extra
Gold SQL: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
Pred SQL: SELECT Professionals.first_name , Professionals.last_name FROM Professionals JOIN Treatments WHERE Treatments.cost_of_treatment < ( SELECT AVG(Treatments.cost_of_treatment) FROM Treatments )
Correct: True

Level: extra
Gold SQL: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
Pred SQL: SELECT Professionals.first_name , Professionals.last_name FROM Professionals JOIN Treatments WHERE Treatments.cost_of_treatment < ( SELECT AVG(Treatments.cost_of_treatment) FROM Treatments )
Correct: True

Level: medium
Gold SQL: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
Pred SQL: SELECT Treatments.date_of_treatment , Professionals.first_name FROM Treatments JOIN Professionals
Correct: True

Level: medium
Gold SQL: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
Pred SQL: SELECT Treatments.date_of_treatment , Professionals.first_name FROM Treatments JOIN Professionals
Correct: True

Level: medium
Gold SQL: SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
Pred SQL: SELECT Treatments.cost_of_treatment , Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types
Correct: True

Level: medium
Gold SQL: SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
Pred SQL: SELECT Treatments.cost_of_treatment , Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types
Correct: True

Level: medium
Gold SQL: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
Pred SQL: SELECT Owners.first_name , Owners.last_name , Dogs.size_code FROM Owners JOIN Dogs
Correct: True

Level: medium
Gold SQL: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
Pred SQL: SELECT Owners.first_name , Owners.last_name , Dogs.size_code FROM Owners JOIN Dogs
Correct: True

Level: medium
Gold SQL: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
Pred SQL: SELECT Owners.first_name , Dogs.name FROM Owners JOIN Dogs
Correct: True

Level: medium
Gold SQL: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
Pred SQL: SELECT Owners.first_name , Dogs.name FROM Owners JOIN Dogs
Correct: True

Level: extra
Gold SQL: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
Pred SQL: SELECT Dogs.name , Treatments.date_of_treatment FROM Treatments JOIN Dogs ORDER BY Dogs.breed_code ASC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
Pred SQL: SELECT Dogs.name , Treatments.date_of_treatment FROM Treatments JOIN Dogs ORDER BY Dogs.breed_code ASC LIMIT 1
Correct: 0

Level: medium
Gold SQL: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
Pred SQL: SELECT Owners.first_name , Dogs.name FROM Dogs JOIN Owners WHERE Owners.state = "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
Pred SQL: SELECT Owners.first_name , Dogs.name FROM Owners JOIN Dogs WHERE Owners.state = "value"
Correct: True

Level: medium
Gold SQL: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
Pred SQL: SELECT Dogs.date_arrived , Dogs.date_departed FROM Treatments JOIN Dogs
Correct: True

Level: medium
Gold SQL: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
Pred SQL: SELECT Dogs.date_arrived , Dogs.date_departed FROM Dogs JOIN Treatments
Correct: True

Level: extra
Gold SQL: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
Pred SQL: SELECT Owners.last_name FROM Owners JOIN Dogs ORDER BY Dogs.age ASC LIMIT 1
Correct: 0

Level: extra
Gold SQL: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
Pred SQL: SELECT Owners.last_name FROM Owners JOIN Dogs ORDER BY Dogs.age ASC LIMIT 1
Correct: 0

Level: medium
Gold SQL: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
Pred SQL: SELECT Professionals.email_address FROM Professionals WHERE Professionals.state = "value" OR Professionals.state = "value"
Correct: True

Level: medium
Gold SQL: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
Pred SQL: SELECT Professionals.email_address FROM Professionals WHERE Professionals.state = "value" OR Professionals.state = "value"
Correct: True

Level: medium
Gold SQL: SELECT date_arrived ,  date_departed FROM Dogs
Pred SQL: SELECT Dogs.date_arrived , Dogs.date_departed FROM Dogs
Correct: True

Level: medium
Gold SQL: SELECT date_arrived ,  date_departed FROM Dogs
Pred SQL: SELECT Dogs.date_arrived , Dogs.date_departed FROM Dogs
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT dog_id) FROM Treatments
Pred SQL: SELECT COUNT(Treatments.dog_id) FROM Treatments
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT dog_id) FROM Treatments
Pred SQL: SELECT COUNT(Treatments.dog_id) FROM Treatments
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT professional_id) FROM Treatments
Pred SQL: SELECT COUNT(Treatments.professional_id) FROM Treatments
Correct: True

Level: easy
Gold SQL: SELECT count(DISTINCT professional_id) FROM Treatments
Pred SQL: SELECT COUNT(Treatments.professional_id) FROM Treatments
Correct: True

Level: medium
Gold SQL: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
Pred SQL: SELECT Professionals.role_code , Professionals.street , Professionals.city , Professionals.state FROM Professionals WHERE Professionals.city LIKE "value"
Correct: True

Level: medium
Gold SQL: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
Pred SQL: SELECT Professionals.role_code , Professionals.street , Professionals.city , Professionals.state FROM Professionals WHERE Professionals.city LIKE "value"
Correct: True

Level: medium
Gold SQL: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
Pred SQL: SELECT Owners.first_name , Owners.last_name , Owners.email_address FROM Owners WHERE Owners.state LIKE "value"
Correct: True

Level: medium
Gold SQL: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
Pred SQL: SELECT Owners.first_name , Owners.last_name , Owners.email_address FROM Owners WHERE Owners.state LIKE "value"
Correct: True

Level: hard
Gold SQL: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
Pred SQL: SELECT COUNT(*) FROM Dogs WHERE Dogs.age < ( SELECT AVG(Dogs.age) FROM Dogs )
Correct: True

Level: hard
Gold SQL: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
Pred SQL: SELECT COUNT(*) FROM Dogs WHERE Dogs.age < ( SELECT AVG(Dogs.age) FROM Dogs )
Correct: True

Level: medium
Gold SQL: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
Pred SQL: SELECT Treatments.cost_of_treatment FROM Treatments ORDER BY Treatments.date_of_treatment DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
Pred SQL: SELECT Treatments.cost_of_treatment FROM Treatments ORDER BY Treatments.date_of_treatment DESC LIMIT 1
Correct: True

Level: extra
Gold SQL: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )
Pred SQL: SELECT COUNT(*) FROM Dogs WHERE Dogs.dog_id NOT IN ( SELECT Treatments.dog_id FROM Treatments )
Correct: True

Level: extra
Gold SQL: select count(*) from dogs where dog_id not in ( select dog_id from treatments )
Pred SQL: SELECT COUNT(*) FROM Dogs WHERE Dogs.dog_id NOT IN ( SELECT Treatments.dog_id FROM Treatments )
Correct: True

Level: extra
Gold SQL: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
Pred SQL: SELECT COUNT(*) FROM Owners WHERE Owners.owner_id NOT IN ( SELECT Dogs.owner_id FROM Dogs )
Correct: True

Level: extra
Gold SQL: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
Pred SQL: SELECT COUNT(*) FROM Owners WHERE Owners.owner_id NOT IN ( SELECT Dogs.owner_id FROM Dogs )
Correct: True

Level: extra
Gold SQL: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
Pred SQL: SELECT COUNT(*) FROM Professionals WHERE Professionals.professional_id NOT IN ( SELECT Treatments.professional_id FROM Treatments )
Correct: True

Level: extra
Gold SQL: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
Pred SQL: SELECT COUNT(*) FROM Professionals WHERE Professionals.professional_id NOT IN ( SELECT Treatments.professional_id FROM Treatments )
Correct: True

Level: medium
Gold SQL: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
Pred SQL: SELECT Dogs.name , Dogs.age , Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = "value"
Correct: True

Level: medium
Gold SQL: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
Pred SQL: SELECT Dogs.name , Dogs.age , Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = "value" INTERSECT SELECT Dogs.name , Dogs.age , Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = "value"
Correct: 0

Level: easy
Gold SQL: SELECT avg(age) FROM Dogs
Pred SQL: SELECT AVG(Dogs.age) FROM Dogs
Correct: True

Level: easy
Gold SQL: SELECT avg(age) FROM Dogs
Pred SQL: SELECT AVG(Dogs.age) FROM Dogs
Correct: True

Level: easy
Gold SQL: SELECT max(age) FROM Dogs
Pred SQL: SELECT Dogs.age FROM Dogs ORDER BY Dogs.age DESC LIMIT 1
Correct: 0

Level: easy
Gold SQL: SELECT max(age) FROM Dogs
Pred SQL: SELECT Dogs.age FROM Dogs ORDER BY Dogs.age DESC LIMIT 1
Correct: 0

Level: medium
Gold SQL: SELECT charge_type ,  charge_amount FROM Charges
Pred SQL: SELECT Charges.charge_type , SUM(Charges.charge_amount) FROM Charges GROUP BY Charges.charge_type
Correct: 0

Level: medium
Gold SQL: SELECT charge_type ,  charge_amount FROM Charges
Pred SQL: SELECT Charges.charge_type , SUM(Charges.charge_amount) FROM Charges GROUP BY Charges.charge_type
Correct: 0

Level: easy
Gold SQL: SELECT max(charge_amount) FROM Charges
Pred SQL: SELECT Charges.charge_type FROM Charges ORDER BY Charges.charge_amount DESC LIMIT 1
Correct: 0

Level: easy
Gold SQL: SELECT max(charge_amount) FROM Charges
Pred SQL: SELECT Charges.charge_type FROM Charges ORDER BY Charges.charge_amount DESC LIMIT 1
Correct: 0

Level: medium
Gold SQL: SELECT email_address ,  cell_number ,  home_phone FROM professionals
Pred SQL: SELECT Professionals.email_address , Professionals.cell_number , Professionals.home_phone FROM Professionals
Correct: True

Level: medium
Gold SQL: SELECT email_address ,  cell_number ,  home_phone FROM professionals
Pred SQL: SELECT Professionals.email_address , Professionals.cell_number , Professionals.home_phone FROM Professionals
Correct: True

Level: medium
Gold SQL: SELECT DISTINCT breed_code ,  size_code FROM dogs
Pred SQL: SELECT Dogs.breed_code , Sizes.size_description FROM Breeds JOIN Dogs JOIN Sizes
Correct: 0

Level: medium
Gold SQL: SELECT DISTINCT breed_code ,  size_code FROM dogs
Pred SQL: SELECT Dogs.breed_code , Dogs.size_code FROM Dogs
Correct: True

Level: medium
Gold SQL: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
Pred SQL: SELECT Professionals.first_name , Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments JOIN Treatment_Types
Correct: True

Level: medium
Gold SQL: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
Pred SQL: SELECT Professionals.first_name , Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments JOIN Treatment_Types
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM singer
Pred SQL: SELECT COUNT(*) FROM singer
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM singer
Pred SQL: SELECT COUNT(*) FROM singer
Correct: True

Level: easy
Gold SQL: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
Pred SQL: SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions ASC
Correct: True

Level: easy
Gold SQL: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
Pred SQL: SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions ASC
Correct: True

Level: medium
Gold SQL: SELECT Birth_Year ,  Citizenship FROM singer
Pred SQL: SELECT singer.Birth_Year , singer.Citizenship FROM singer
Correct: True

Level: medium
Gold SQL: SELECT Birth_Year ,  Citizenship FROM singer
Pred SQL: SELECT singer.Birth_Year , singer.Citizenship FROM singer
Correct: True

Level: easy
Gold SQL: SELECT Name FROM singer WHERE Citizenship != "France"
Pred SQL: SELECT singer.Name FROM singer WHERE singer.Citizenship != "value"
Correct: True

Level: easy
Gold SQL: SELECT Name FROM singer WHERE Citizenship != "France"
Pred SQL: SELECT singer.Name FROM singer WHERE singer.Citizenship != "value"
Correct: True

Level: medium
Gold SQL: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
Pred SQL: SELECT singer.Name FROM singer WHERE singer.Birth_Year = "value" OR singer.Birth_Year = "value"
Correct: True

Level: medium
Gold SQL: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
Pred SQL: SELECT singer.Name FROM singer WHERE singer.Birth_Year = "value" OR singer.Birth_Year = "value"
Correct: True

Level: medium
Gold SQL: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
Pred SQL: SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
Pred SQL: SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
Pred SQL: SELECT singer.Citizenship , COUNT(*) FROM singer GROUP BY singer.Citizenship
Correct: True

Level: medium
Gold SQL: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
Pred SQL: SELECT singer.Citizenship , COUNT(*) FROM singer GROUP BY singer.Citizenship
Correct: True

Level: hard
Gold SQL: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
Pred SQL: SELECT singer.Citizenship FROM singer GROUP BY singer.Citizenship ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: hard
Gold SQL: select citizenship from singer group by citizenship order by count(*) desc limit 1
Pred SQL: SELECT singer.Citizenship FROM singer GROUP BY singer.Citizenship ORDER BY COUNT(*) DESC LIMIT 1
Correct: True

Level: medium
Gold SQL: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
Pred SQL: SELECT singer.Citizenship , MAX(singer.Net_Worth_Millions) FROM singer GROUP BY singer.Citizenship
Correct: True

Level: medium
Gold SQL: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
Pred SQL: SELECT singer.Citizenship , MAX(singer.Net_Worth_Millions) FROM singer GROUP BY singer.Citizenship
Correct: True

Level: medium
Gold SQL: SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
Pred SQL: SELECT song.Title , singer.Name FROM singer JOIN song
Correct: True

Level: medium
Gold SQL: SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
Pred SQL: SELECT song.Title , singer.Name FROM singer JOIN song
Correct: True

Level: medium
Gold SQL: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
Pred SQL: SELECT singer.Name FROM singer JOIN song WHERE song.Sales > "value"
Correct: True

Level: medium
Gold SQL: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
Pred SQL: SELECT singer.Name FROM singer JOIN song WHERE song.Sales > "value"
Correct: True

Level: medium
Gold SQL: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
Pred SQL: SELECT singer.Name FROM singer JOIN song GROUP BY song.Singer_ID HAVING COUNT(*) > "value"
Correct: 0

Level: medium
Gold SQL: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
Pred SQL: SELECT singer.Name FROM singer JOIN song GROUP BY song.Singer_ID HAVING COUNT(*) > "value"
Correct: 0

Level: medium
Gold SQL: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
Pred SQL: SELECT singer.Name , SUM(song.Sales) FROM singer JOIN song GROUP BY singer.Name
Correct: True

Level: medium
Gold SQL: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
Pred SQL: SELECT SUM(song.Sales) , singer.Name FROM singer JOIN song GROUP BY singer.Name
Correct: True

Level: hard
Gold SQL: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
Pred SQL: SELECT singer.Name FROM singer WHERE singer.Singer_ID NOT IN ( SELECT song.Singer_ID FROM song )
Correct: True

Level: hard
Gold SQL: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
Pred SQL: SELECT singer.Name FROM singer WHERE singer.Singer_ID NOT IN ( SELECT song.Singer_ID FROM song )
Correct: True

Level: hard
Gold SQL: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
Pred SQL: SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year < "value" INTERSECT SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year > "value"
Correct: True

Level: hard
Gold SQL: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
Pred SQL: SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year < "value" INTERSECT SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year > "value"
Correct: True

Level: easy
Gold SQL: SELECT count(*) FROM Other_Available_Features
Pred SQL: SELECT COUNT(*) FROM Other_Available_Features
Correct: True

Level: medium
Gold SQL: SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon"
Pred SQL: SELECT Ref_Feature_Types.feature_type_name FROM Ref_Feature_Types JOIN Other_Available_Features WHERE Other_Available_Features.feature_name = "value"
Correct: True

Level: medium
Gold SQL: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code
Pred SQL: SELECT Ref_Property_Types.property_type_description FROM Ref_Property_Types JOIN Properties
Correct: 0

Level: hard
Gold SQL: SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  "Apartment" AND room_count  >  1
Pred SQL: SELECT Properties.property_name FROM Properties WHERE Properties.room_count > "value" OR Properties.property_type_code = "value"
Correct: 0

