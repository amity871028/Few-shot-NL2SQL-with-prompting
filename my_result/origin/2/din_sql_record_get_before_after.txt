index is 0
before:
SELECT COUNT(Singer_ID) FROM singer
after:
SELECT COUNT(Singer_ID) FROM singer

index is 1
before:
SELECT COUNT(*) FROM singer
after:
SELECT COUNT(*) FROM singer

index is 2
before:
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
after:
SELECT Name, Country, Age FROM singer ORDER BY Age DESC

index is 3
before:
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
after:
SELECT singer.Name, singer.Country, singer.Age FROM singer ORDER BY singer.Age DESC

index is 4
before:
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'
after:
SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age FROM singer WHERE Country = 'France'

index is 5
before:
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'French'
after:
SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age FROM singer WHERE Country = 'French'

index is 6
before:
SELECT Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer)
after:
SELECT singer.Song_Name, singer.Song_release_year  FROM singer  WHERE singer.Age = (SELECT MIN(singer.Age) FROM singer)

index is 7
before:
SELECT Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer)
after:
SELECT singer.Song_Name, singer.Song_release_year  FROM singer  WHERE singer.Age = (SELECT MIN(singer.Age) FROM singer)

index is 8
before:
SELECT DISTINCT Country FROM singer WHERE Age > 20
after:
SELECT DISTINCT Country FROM singer WHERE Age > 20

index is 9
before:
SELECT DISTINCT Country FROM singer WHERE Age > 20
after:
SELECT DISTINCT Country FROM singer WHERE Age > 20

index is 10
before:
SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country
after:
SELECT Country, COUNT(*)  FROM singer  GROUP BY Country

index is 11
before:
SELECT COUNT(Singer_ID), Country FROM singer GROUP BY Country
after:
SELECT COUNT(Singer_ID) AS Singer_Count, Country  FROM singer  GROUP BY Country

index is 12
before:
SELECT Song_Name FROM singer WHERE Age > (SELECT avg(Age) FROM singer)
after:
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)

index is 13
before:
SELECT Song_Name FROM singer WHERE Age > (SELECT avg(Age) FROM singer)
after:
SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT AVG(singer.Age) FROM singer)

index is 14
before:
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
after:
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000

index is 15
before:
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
after:
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000

index is 16
before:
SELECT MAX(Capacity), AVG(Capacity) FROM stadium
after:
SELECT MAX(Capacity) AS Maximum_Capacity, AVG(Capacity) AS Average_Capacity FROM stadium

index is 17
before:
SELECT AVG(Capacity), MAX(Highest) FROM stadium
after:
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Maximum_Capacity FROM stadium

index is 18
before:
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
after:
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)

index is 19
before:
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
after:
SELECT Name, Capacity FROM stadium ORDER BY Average DESC LIMIT 1

index is 20
before:
SELECT COUNT(*) FROM concert WHERE Year = 2014 OR Year = 2015
after:
SELECT COUNT(*) FROM concert WHERE Year = 2014 OR Year = 2015

index is 21
before:
SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015)
after:
SELECT COUNT(DISTINCT concert_ID) FROM concert WHERE Year IN (2014, 2015)

index is 22
before:
SELECT T1.Name, COUNT(T2.concert_ID) FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Name
after:
SELECT T1.Name, COUNT(T2.concert_ID) FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Name

index is 23
before:
SELECT Stadium.Stadium_ID, COUNT(concert.concert_ID) FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY stadium.Stadium_ID
after:
SELECT stadium.Stadium_ID, COUNT(concert.concert_ID) AS Concert_Count FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY stadium.Stadium_ID

index is 24
before:
SELECT
after:
SELECT SELECT stadium.Name, stadium.Capacity FROM stadium JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID WHERE concert.Year >= 2014 GROUP BY stadium.Name, stadium.Capacity ORDER BY COUNT(concert.concert_ID) DESC LIMIT 1;

index is 25
before:
SELECT T1.Name, T1.Capacity FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year > 2013 GROUP BY T1.Stadium_ID ORDER BY count(T2.concert_ID) DESC LIMIT 1
after:
SELECT T1.Name, T1.Capacity  FROM stadium AS T1  JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T2.Year > 2013  GROUP BY T1.Stadium_ID  ORDER BY COUNT(T2.concert_ID) DESC  LIMIT 1

index is 26
before:
LIMIT 1
after:
SELECT Year, COUNT(concert_ID) AS num_concerts FROM concert GROUP BY Year ORDER BY num_concerts DESC LIMIT 1

index is 27
before:
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
after:
SELECT concert.Year FROM concert GROUP BY concert.Year ORDER BY COUNT(*) DESC LIMIT 1

index is 28
before:
SELECT Name FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert_ID IS NULL
after:
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT DISTINCT Stadium_ID FROM concert)

index is 29
before:
SELECT Name FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.concert_ID IS NULL
after:
SELECT Name FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Stadium_ID IS NULL

index is 30
before:
SELECT DISTINCT Country FROM singer WHERE Age > 40 INTERSECT SELECT DISTINCT Country FROM singer WHERE Age < 30
after:
SELECT DISTINCT Country FROM singer WHERE Age > 40 INTERSECT SELECT DISTINCT Country FROM singer WHERE Age < 30

index is 31
before:
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014)
after:
SELECT Name FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year != 2014 OR concert.Year IS NULL

index is 32
before:
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT DISTINCT Stadium_ID FROM concert WHERE Year = 2014)
after:
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (     SELECT DISTINCT Stadium_ID     FROM concert     WHERE Year = 2014 )

index is 33
before:
GROUP BY concert_Name, Theme
after:
SELECT concert_Name, Theme, COUNT(DISTINCT singer.Singer_ID) AS singer_count FROM concert LEFT JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID LEFT JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY concert_Name, Theme

index is 34
before:
SELECT concert_Name, Theme, COUNT(Singer_ID) FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_ID
after:
SELECT concert.concert_Name, concert.Theme, COUNT(singer.Singer_ID)  FROM concert  JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID  GROUP BY concert.concert_ID

index is 35
before:
SELECT Name, COUNT(singer_in_concert.Singer_ID) FROM singer LEFT JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Singer_ID
after:
SELECT singer.Name, COUNT(singer_in_concert.Singer_ID) AS concert_count FROM singer LEFT JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Name

index is 36
before:
SELECT Name, COUNT(concert_ID) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY Name
after:
SELECT singer.Name, COUNT(singer_in_concert.concert_ID) AS concert_count FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Name

index is 37
before:
SELECT T1.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.Year = 2014
after:
SELECT T1.Name  FROM singer AS T1  JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID  JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID  WHERE T3.Year = 2014

index is 38
before:
SELECT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014
after:
SELECT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014

index is 39
before:
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
after:
SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE '%Hey%'

index is 40
before:
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
after:
SELECT singer.Name, singer.Country  FROM singer  WHERE singer.Song_Name LIKE '%Hey%'

index is 41
before:
SELECT Name ,  Location FROM stadium WHERE Stadium_ID IN (SELECT Stadium_ID FROM concert WHERE Year = 2014) AND Stadium_ID IN (SELECT Stadium_ID FROM concert WHERE Year = 2015)
after:
SELECT Name, Location  FROM stadium  WHERE Stadium_ID IN (     SELECT Stadium_ID      FROM concert      WHERE Year = 2014 )  AND Stadium_ID IN (     SELECT Stadium_ID      FROM concert      WHERE Year = 2015 )

index is 42
before:
SELECT T1.Name, T1.Location FROM stadium AS T1 WHERE T1.Stadium_ID IN (SELECT T2.Stadium_ID FROM concert AS T2 WHERE T2.Year = 2014) AND T1.Stadium_ID IN (SELECT T3.Stadium_ID FROM concert AS T3 WHERE T3.Year = 2015)
after:
SELECT T1.Name, T1.Location FROM stadium AS T1 WHERE T1.Stadium_ID IN (   SELECT T2.Stadium_ID   FROM concert AS T2   WHERE T2.Year = 2014   INTERSECT   SELECT T3.Stadium_ID   FROM concert AS T3   WHERE T3.Year = 2015 )

index is 43
before:
SELECT count(concert_ID) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
after:
SELECT count(concert_ID) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)

index is 44
before:
SELECT COUNT(concert_ID) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium WHERE Capacity = (SELECT MAX(Capacity) FROM stadium))
after:
SELECT COUNT(concert_ID) AS Concert_Count FROM concert WHERE Stadium_ID = (     SELECT Stadium_ID     FROM stadium     WHERE Capacity = (         SELECT MAX(Capacity)         FROM stadium     ) )

index is 45
before:
SELECT COUNT(Pets.PetID) FROM Pets WHERE weight > 10
after:
SELECT COUNT(Pets.PetID) FROM Pets WHERE Pets.weight > 10

index is 46
before:
SELECT COUNT(*) FROM Pets WHERE weight > 10
after:
SELECT COUNT(DISTINCT PetID) FROM Pets WHERE weight > 10

index is 47
before:
SELECT weight FROM Pets WHERE PetType = 'dog' ORDER BY pet_age ASC LIMIT 1
after:
SELECT Pets.weight FROM Pets JOIN Has_Pet ON Has_Pet.PetID = Pets.PetID JOIN Student ON Student.StuID = Has_Pet.StuID WHERE Pets.PetType = 'dog' ORDER BY Pets.pet_age ASC LIMIT 1

index is 48
before:
SELECT weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
after:
SELECT weight  FROM Pets  WHERE pet_age = (     SELECT MIN(pet_age)      FROM Pets      WHERE PetType = 'dog' )  AND PetType = 'dog'  ORDER BY weight ASC  LIMIT 1

index is 49
before:
SELECT MAX(weight) AS max_weight, PetType FROM Pets GROUP BY PetType
after:
SELECT MAX(pets.weight) AS max_weight, pets.PetType FROM Pets GROUP BY pets.PetType

index is 50
before:
SELECT PetType, MAX(weight) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID GROUP BY PetType
after:
SELECT PetType, MAX(weight) AS max_weight FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID GROUP BY PetType

index is 51
before:
SELECT COUNT(PetID) FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.Age > 20
after:
SELECT COUNT(Has_Pet.PetID)  FROM Has_Pet  JOIN Student ON Has_Pet.StuID = Student.StuID  WHERE Student.Age > 20

index is 52
before:
SELECT COUNT(Pets.PetID) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 20
after:
SELECT COUNT(DISTINCT Pets.PetID) FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Student.Age > 20

index is 53
before:
SELECT count(*) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Pets.PetType = 'Dog' AND Student.Sex = 'F'
after:
SELECT count(DISTINCT Pets.PetID) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Pets.PetType = 'Dog' AND Student.Sex = 'F'

index is 54
before:
SELECT count(*) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Pets.PetType = 'dog' AND Student.Sex = 'female'
after:
SELECT count(DISTINCT Pets.PetID)  FROM Pets  JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID  JOIN Student ON Has_Pet.StuID = Student.StuID  WHERE Pets.PetType = 'dog'  AND Student.Sex = 'female'

index is 55
before:
SELECT COUNT(DISTINCT PetType) FROM Pets
after:
SELECT COUNT(DISTINCT PetType) FROM Pets

index is 56
before:
SELECT COUNT(DISTINCT PetType) FROM Pets
after:
SELECT COUNT(DISTINCT PetType) AS TotalPetTypes FROM Pets

index is 57
before:
WHERE Pets.PetType = 'cat' OR Pets.PetType = 'dog'
after:
SELECT DISTINCT Student.Fname  FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog')

index is 58
before:
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' OR Pets.PetType = 'dog'
after:
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog')

index is 59
before:
SELECT DISTINCT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'dog')) AND StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat'))
after:
SELECT DISTINCT Student.Fname  FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'dog' OR PetType = 'cat' GROUP BY Student.StuID HAVING COUNT(DISTINCT PetType) = 2;

index is 60
before:
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Student.Fname IN (SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog')
after:
SELECT DISTINCT Student.Fname  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Pets.PetType = 'cat'    AND Student.StuID IN (     SELECT DISTINCT Has_Pet.StuID      FROM Has_Pet      JOIN Pets ON Has_Pet.PetID = Pets.PetID      WHERE Pets.PetType = 'dog'   )

index is 61
before:
SELECT Major ,  Age FROM Student WHERE StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID  =  Pets.PetID WHERE Pets.PetType  =  'cat')
after:
SELECT Major, Age FROM Student WHERE StuID NOT IN (     SELECT Has_Pet.StuID     FROM Has_Pet     JOIN Pets ON Has_Pet.PetID = Pets.PetID     WHERE Pets.PetType = 'cat' )

index is 62
before:
SELECT Major ,  Age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat'))
after:
SELECT Major, Age FROM Student WHERE StuID NOT IN (     SELECT StuID     FROM Has_Pet     WHERE PetID IN (         SELECT PetID         FROM Pets         WHERE PetType = 'cat'     ) )

index is 63
before:
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat')
after:
SELECT Student.StuID  FROM Student  WHERE Student.StuID NOT IN (   SELECT Has_Pet.StuID    FROM Has_Pet    JOIN Pets ON Has_Pet.PetID = Pets.PetID    WHERE Pets.PetType = 'cat' )

index is 64
before:
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat')
after:
SELECT Student.StuID  FROM Student  WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID                              FROM Has_Pet                              JOIN Pets ON Has_Pet.PetID = Pets.PetID                              WHERE Pets.PetType = 'cat')

index is 65
before:
SELECT Fname , Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID = (SELECT PetID FROM Pets WHERE PetType = 'dog')) AND StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID = (SELECT PetID FROM Pets WHERE PetType = 'cat'))
after:
SELECT Fname, Age FROM Student WHERE StuID IN (     SELECT StuID     FROM Has_Pet     WHERE PetID IN (         SELECT PetID         FROM Pets         WHERE PetType = 'dog'     ) ) AND StuID NOT IN (     SELECT StuID     FROM Has_Pet     WHERE PetID IN (         SELECT PetID         FROM Pets         WHERE PetType = 'cat'     ) )

index is 66
before:
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' AND Student.StuID NOT IN (SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat')
after:
SELECT Student.Fname  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Pets.PetType = 'dog'  AND Student.StuID NOT IN (     SELECT Student.StuID      FROM Student      JOIN Has_Pet ON Student.StuID = Has_Pet.StuID      JOIN Pets ON Has_Pet.PetID = Pets.PetID      WHERE Pets.PetType = 'cat' )

index is 67
before:
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
after:
SELECT PetType, weight FROM Pets WHERE pet_age = (     SELECT MIN(pet_age)     FROM Pets )

index is 68
before:
SELECT PetType, weight FROM Pets ORDER BY pet_age ASC, weight ASC LIMIT 1
after:
SELECT PetType, weight  FROM Pets  ORDER BY pet_age ASC, weight ASC  LIMIT 1

index is 69
before:
SELECT PetID, weight FROM Pets WHERE pet_age > 1
after:
SELECT Pets.PetID, Pets.weight  FROM Pets  WHERE Pets.pet_age > 1

index is 70
before:
SELECT PetID, weight FROM Pets WHERE pet_age > 1
after:
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.pet_age > 1

index is 71
before:
SELECT PetType, AVG(pet_age), MAX(pet_age) FROM Pets GROUP BY PetType
after:
SELECT PetType, AVG(pet_age), MAX(pet_age) FROM Pets GROUP BY PetType

index is 72
before:
SELECT PetType, AVG(pet_age), MAX(pet_age) FROM Pets GROUP BY PetType
after:
SELECT Pets.PetType, AVG(Pets.pet_age), MAX(Pets.pet_age) FROM Pets GROUP BY Pets.PetType

index is 73
before:
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
after:
SELECT PetType, AVG(weight) AS AverageWeight FROM Pets GROUP BY PetType

index is 74
before:
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
after:
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType

index is 75
before:
SELECT Fname, Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID
after:
SELECT Fname, Age  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID;

index is 76
before:
SELECT DISTINCT Fname, Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID
after:
SELECT DISTINCT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID

index is 77
before:
SELECT Pets.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'Smith'
after:
SELECT Pets.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'Smith'

index is 78
before:
SELECT Pets.PetID FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID JOIN Student ON Student.StuID = Has_Pet.StuID WHERE Student.LName = 'Smith'
after:
SELECT Pets.PetID  FROM Pets  JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID  JOIN Student ON Student.StuID = Has_Pet.StuID  WHERE Student.LName = 'Smith'

index is 79
before:
SELECT COUNT(Pets.PetID), Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Student.StuID
after:
SELECT COUNT(Pets.PetID) AS num_pets, Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Student.StuID

index is 80
before:
SELECT Student.StuID, COUNT(Has_Pet.PetID) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID
after:
SELECT Student.StuID, COUNT(Has_Pet.PetID)  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  GROUP BY Student.StuID

index is 81
before:
SELECT
after:
SELECT SELECT Student.Fname, Student.Sex FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID HAVING COUNT(Has_Pet.PetID) > 1;

index is 82
before:
SELECT Fname, Sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet GROUP BY StuID HAVING COUNT(PetID) > 1)
after:
SELECT Fname, Sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet GROUP BY StuID HAVING COUNT(PetID) > 1)

index is 83
before:
SELECT LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3
after:
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3 ORDER BY Student.StuID DESC LIMIT 1

index is 84
before:
SELECT LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3
after:
SELECT LName  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Pets.PetType = 'cat'  AND Pets.pet_age = 3 ORDER BY Student.StuID DESC LIMIT 1

index is 85
before:
SELECT avg(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
after:
SELECT avg(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)

index is 86
before:
SELECT avg(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
after:
SELECT avg(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)

index is 87
before:
SELECT COUNT(*) FROM continents
after:
SELECT COUNT(*) FROM continents

index is 88
before:
SELECT COUNT(ContId) FROM continents
after:
SELECT COUNT(ContId) FROM continents

index is 89
before:
GROUP BY ContId, Continent
after:
SELECT ContId, Continent, COUNT(CountryId) AS num_countries FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY ContId, Continent

index is 90
before:
SELECT continents.ContId, continents.Continent, count(countries.CountryName) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent
after:
SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) AS CountryCount FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;

index is 91
before:
SELECT COUNT(*) FROM countries
after:
SELECT COUNT(*) FROM countries

index is 92
before:
SELECT COUNT(*) FROM countries
after:
SELECT COUNT(*) FROM countries

index is 93
before:
SELECT FullName, Id, COUNT(Model) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY Id
after:
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model)  FROM car_makers  JOIN model_list ON car_makers.Id = model_list.Maker  GROUP BY car_makers.Id, car_makers.FullName

index is 94
before:
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName
after:
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) AS ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName

index is 95
before:
LIMIT 1
after:
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.ModelId = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Horsepower ASC LIMIT 1

index is 96
before:
SELECT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T2.Model = T1.ModelId JOIN cars_data AS T3 ON T3.Id = T2.MakeId ORDER BY T3.Horsepower ASC LIMIT 1
after:
SELECT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T2.Model = T1.ModelId JOIN cars_data AS T3 ON T3.Id = T2.MakeId ORDER BY T3.Horsepower ASC LIMIT 1

index is 97
before:
SELECT Model FROM model_list WHERE ModelId IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data) AND Weight  <  (SELECT avg(Weight) FROM cars_data))
after:
SELECT Model FROM model_list WHERE ModelId IN (   SELECT MakeId   FROM car_names   WHERE Model IN (     SELECT Model     FROM cars_data     WHERE Weight < (       SELECT AVG(Weight)       FROM cars_data     )   ) )

index is 98
before:
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT avg(Weight) FROM cars_data)
after:
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data)

index is 99
before:
SELECT DISTINCT Maker FROM car_makers JOIN cars_data ON car_makers.Id = cars_data.Id WHERE cars_data.Year = 1970
after:
SELECT FullName FROM car_makers JOIN cars_data ON car_makers.Id = cars_data.Id WHERE cars_data.Year = 1970

index is 100
before:
SELECT DISTINCT Maker FROM car_makers JOIN cars_data ON car_makers.Id = cars_data.Id WHERE cars_data.Year = 1970
after:
SELECT FullName FROM car_makers JOIN cars_data ON car_makers.Id = cars_data.Id WHERE cars_data.Year = 1970

index is 101
before:
SELECT T1.Maker, T4.Year FROM car_makers AS T1, car_names AS T2, model_list AS T3, cars_data AS T4 WHERE T1.Id = T2.MakeId AND T2.Model = T3.Model AND T3.Maker = T1.Id ORDER BY T4.Year ASC LIMIT 1
after:
SELECT T1.Maker, T4.Year FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.Model JOIN cars_data AS T4 ON T2.MakeId = T4.Id ORDER BY T4.Year ASC LIMIT 1

index is 102
before:
SELECT T1.Maker , T2.Year FROM car_makers AS T1 JOIN cars_data AS T2 ON T1.Id = T2.Id ORDER BY T2.Year ASC LIMIT 1
after:
SELECT T1.Maker, T2.Year FROM car_makers AS T1 JOIN car_names AS CN ON T1.Id = CN.MakeId JOIN cars_data AS T2 ON CN.Model = T2.Id ORDER BY T2.Year ASC LIMIT 1

index is 103
before:
SELECT DISTINCT Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980
after:
SELECT DISTINCT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980

index is 104
before:
SELECT DISTINCT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model JOIN cars_data AS T3 ON T2.MakeId = T3.Id WHERE T3.Year > 1980
after:
SELECT T2.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model JOIN cars_data AS T3 ON T2.MakeId = T3.Id WHERE T3.Year > 1980

index is 105
before:
GROUP BY continents.Continent
after:
SELECT continents.Continent, COUNT(DISTINCT car_makers.Id)  FROM continents JOIN countries ON countries.Continent = continents.ContId JOIN car_makers ON car_makers.Country = countries.CountryId GROUP BY continents.Continent

index is 106
before:
SELECT
after:
SELECT continents.Continent AS Continent, COUNT(DISTINCT car_makers.Id) AS CarMakersCount FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.ContId, continents.Continent

index is 107
before:
SELECT
after:
SELECT SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId ORDER BY COUNT(car_makers.Id) DESC LIMIT 1;

index is 108
before:
SELECT CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY CountryName ORDER BY count(car_makers.Id) DESC LIMIT 1
after:
SELECT countries.CountryName  FROM countries  JOIN car_makers ON countries.CountryId = car_makers.Country  GROUP BY countries.CountryName  ORDER BY COUNT(car_makers.Id) DESC  LIMIT 1

index is 109
before:
SELECT car_makers.FullName, COUNT(DISTINCT car_names.Model) FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId GROUP BY car_makers.FullName
after:
SELECT car_makers.FullName, COUNT(DISTINCT car_names.Model) AS ModelCount  FROM car_makers  JOIN car_names ON car_makers.Id = car_names.MakeId  GROUP BY car_makers.FullName

index is 110
before:
GROUP BY Id, FullName
after:
SELECT COUNT(DISTINCT car_names.Model) AS NumModels, car_makers.Id, car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model GROUP BY car_makers.Id, car_makers.FullName

index is 111
before:
SELECT
after:
SELECT SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'amc' AND car_names.Model = 'hornet sportabout (sw)'

index is 112
before:
WHERE Model = 'amc hornet sportabout (sw)'
after:
SELECT Accelerate  FROM cars_data  JOIN car_names ON car_names.MakeId = cars_data.Id  JOIN model_list ON model_list.Model = car_names.Model  JOIN car_makers ON car_makers.Id = model_list.Maker  WHERE car_names.Model = 'amc hornet sportabout (sw)'

index is 113
before:
SELECT count(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France'
after:
SELECT count(DISTINCT car_makers.Id) FROM car_makers  JOIN countries ON car_makers.Country = countries.CountryId  WHERE countries.CountryName = 'France'

index is 114
before:
SELECT count(DISTINCT car_makers.Id) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France'
after:
SELECT count(DISTINCT car_makers.Id)  FROM car_makers  JOIN countries ON car_makers.Country = countries.CountryId  WHERE countries.CountryName = 'France'

index is 115
before:
SELECT COUNT(DISTINCT T1.ModelId) FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model JOIN car_makers AS T3 ON T2.MakeId = T3.Id JOIN countries AS T4 ON T3.Country = T4.CountryId WHERE T4.CountryName = 'USA'
after:
SELECT COUNT(DISTINCT T1.ModelId)  FROM model_list AS T1  JOIN car_names AS T2 ON T1.ModelId = T2.Model  JOIN car_makers AS T3 ON T2.MakeId = T3.Id  JOIN countries AS T4 ON T3.Country = T4.CountryId  WHERE T4.CountryName = 'USA'

index is 116
before:
WHERE T3.CountryName = 'United States'
after:
SELECT COUNT(DISTINCT T1.Model)  FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id JOIN countries AS T3 ON T2.Country = T3.CountryId WHERE T3.CountryName = 'United States'

index is 117
before:
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4
after:
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4

index is 118
before:
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4
after:
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4

index is 119
before:
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974
after:
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974

index is 120
before:
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974
after:
SELECT MIN(Weight)  FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE Cylinders = 8  AND Year = 1974

index is 121
before:
SELECT Maker, Model FROM car_makers, model_list
after:
SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker

index is 122
before:
SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id
after:
SELECT car_makers.Maker, model_list.Model  FROM car_makers  JOIN model_list ON car_makers.Id = model_list.Maker  JOIN car_names ON model_list.Model = car_names.Model  JOIN cars_data ON car_names.MakeId = cars_data.Id

index is 123
before:
SELECT CountryName, CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country
after:
SELECT CountryName, CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country

index is 124
before:
SELECT CountryName, CountryId FROM countries JOIN car_makers ON car_makers.Country = countries.CountryId
after:
SELECT CountryName, CountryId FROM countries WHERE CountryId IN (SELECT Country FROM car_makers)

index is 125
before:
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150
after:
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150

index is 126
before:
SELECT COUNT(Id) FROM cars_data WHERE Horsepower > 150
after:
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150

index is 127
before:
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
after:
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year

index is 128
before:
SELECT AVG(Weight), Year FROM cars_data GROUP BY Year
after:
SELECT AVG(Weight) AS AverageWeight, Year  FROM cars_data  GROUP BY Year

index is 129
before:
HAVING COUNT(DISTINCT Id) >= 3
after:
SELECT CountryName  FROM countries  JOIN continents ON countries.Continent = continents.ContId  JOIN car_makers ON car_makers.Country = countries.CountryId  WHERE continents.Continent = 'Europe'  GROUP BY CountryName  HAVING COUNT(DISTINCT car_makers.Id) >= 3

index is 130
before:
SELECT T1.CountryName FROM countries AS T1 JOIN continents AS T2 ON T1.Continent  =  T2.ContId JOIN car_makers AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'Europe' GROUP BY T1.CountryName HAVING count(T3.*) >= 3
after:
SELECT T1.CountryName FROM countries AS T1 JOIN continents AS T2 ON T1.Continent = T2.ContId JOIN car_makers AS T3 ON T1.CountryId = T3.Country WHERE T2.Continent = 'Europe' GROUP BY T1.CountryName HAVING COUNT(DISTINCT T3.Id) >= 3

index is 131
before:
SELECT max(Horsepower), Maker FROM cars_data JOIN car_makers ON car_makers.Id = cars_data.Id WHERE Cylinders = 3
after:
SELECT max(cars_data.Horsepower) AS max_horsepower, car_makers.Maker FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 3 GROUP BY car_makers.Maker

index is 132
before:
```
after:
SELECT MAX(Horsepower) AS max_horsepower, car_makers.Maker FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 3 GROUP BY car_makers.Maker ORDER BY max_horsepower DESC LIMIT 1;

index is 133
before:
LIMIT 1
after:
SELECT cars_data.Model  FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.ModelId ORDER BY cars_data.MPG DESC LIMIT 1

index is 134
before:
LIMIT 1
after:
SELECT Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1

index is 135
before:
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980
after:
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980

index is 136
before:
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980
after:
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980

index is 137
before:
WHERE model_list.Maker = 'volvo'
after:
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo'

index is 138
before:
SELECT avg(Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo'
after:
SELECT avg(cars_data.Edispl)  FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE car_makers.FullName = 'volvo'

index is 139
before:
SELECT MAX(Accelerate), Cylinders FROM cars_data GROUP BY Cylinders
after:
SELECT MAX(Accelerate) AS Max_Accelerate, Cylinders  FROM cars_data  GROUP BY Cylinders

index is 140
before:
SELECT MAX(Accelerate), Cylinders FROM cars_data GROUP BY Cylinders
after:
SELECT MAX(Accelerate) AS Max_Accelerate, Cylinders FROM cars_data GROUP BY Cylinders

index is 141
before:
)
after:
SELECT Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY Model HAVING COUNT(DISTINCT car_makers.FullName) = (     SELECT MAX(count_distinct_maker)     FROM (         SELECT Model, COUNT(DISTINCT car_makers.FullName) AS count_distinct_maker         FROM model_list         JOIN car_makers ON model_list.Maker = car_makers.Id         GROUP BY Model     ) AS counts )

index is 142
before:
SELECT Model FROM model_list GROUP BY Model HAVING COUNT(DISTINCT ModelId) = (SELECT MAX(cnt) FROM (SELECT Model, COUNT(DISTINCT ModelId) AS cnt FROM model_list GROUP BY Model) AS subquery)
after:
SELECT Model  FROM model_list  GROUP BY Model  HAVING COUNT(DISTINCT ModelId) = (   SELECT MAX(cnt)    FROM (     SELECT Model, COUNT(DISTINCT ModelId) AS cnt      FROM model_list      GROUP BY Model   ) AS subquery )

index is 143
before:
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4
after:
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4

index is 144
before:
SELECT COUNT(Id) FROM cars_data WHERE Cylinders > 4
after:
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4

index is 145
before:
SELECT COUNT(Id) FROM cars_data WHERE Year = 1980
after:
SELECT COUNT(Id) FROM cars_data WHERE Year = 1980

index is 146
before:
SELECT COUNT(*) FROM cars_data WHERE Year = 1980
after:
SELECT COUNT(*) FROM cars_data WHERE Year = 1980

index is 147
before:
SELECT count(*) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = 'American Motor Company'
after:
SELECT count(DISTINCT model_list.ModelId) FROM model_list  JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE car_makers.FullName = 'American Motor Company'

index is 148
before:
SELECT COUNT(T2.ModelId) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.Maker = 'American Motor Company'
after:
SELECT COUNT(T2.ModelId)  FROM car_makers AS T1  JOIN model_list AS T2 ON T1.Id = T2.Maker  WHERE T1.FullName = 'American Motor Company'

index is 149
before:
SELECT FullName, Id FROM car_makers GROUP BY FullName, Id HAVING COUNT(model_list.ModelId) > 3
after:
SELECT FullName, Id  FROM car_makers  JOIN model_list ON car_makers.Id = model_list.Maker  GROUP BY FullName, Id  HAVING COUNT(model_list.ModelId) > 3

index is 150
before:
```
after:
SELECT Maker, Id  FROM car_makers  WHERE Id IN (   SELECT Maker    FROM model_list    GROUP BY Maker    HAVING COUNT(*) > 3 )

index is 151
before:
```
after:
SELECT DISTINCT car_names.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500

index is 152
before:
SELECT DISTINCT T1.Model FROM model_list AS T1 JOIN car_makers AS T2 ON T2.Id = T1.Maker JOIN car_names AS T3 ON T3.Model = T1.Model JOIN cars_data AS T4 ON T4.Id = T3.MakeId WHERE T2.Maker = 'General Motors' OR T4.Weight > 3500
after:
SELECT DISTINCT T1.Model  FROM model_list AS T1  JOIN car_makers AS T2 ON T2.Id = T1.Maker  JOIN car_names AS T3 ON T3.Model = T1.Model  JOIN cars_data AS T4 ON T4.Id = T3.MakeId  WHERE T2.FullName = 'General Motors' OR T4.Weight > 3500

index is 153
before:
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000
after:
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000;

index is 154
before:
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 AND Year IN (SELECT DISTINCT Year FROM cars_data WHERE Weight > 3000)
after:
SELECT DISTINCT Year  FROM cars_data  WHERE Weight < 4000 OR Weight > 3000

index is 155
before:
SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1
after:
SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Accelerate DESC LIMIT 1

index is 156
before:
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)
after:
SELECT cars_data.Horsepower FROM cars_data WHERE Accelerate = (     SELECT MAX(Accelerate) FROM cars_data )

index is 157
before:
SELECT min(cars_data.Cylinders) FROM car_names JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON car_names.MakeId = car_makers.Id JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1
after:
SELECT cars_data.Cylinders  FROM car_names  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON car_names.MakeId = car_makers.Id  JOIN cars_data ON car_names.MakeId = cars_data.Id  WHERE car_makers.Maker = 'volvo'  ORDER BY cars_data.Accelerate ASC  LIMIT 1

index is 158
before:
WHERE car_makers.Maker = 'volvo'
after:
SELECT cars_data.Cylinders FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.ModelId = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'volvo' ORDER BY cars_data.Accelerate LIMIT 1

index is 159
before:
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)
after:
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)

index is 160
before:
SELECT COUNT(Id) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)
after:
SELECT COUNT(Id)  FROM cars_data  WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)

index is 161
before:
SELECT COUNT(DISTINCT T1.CountryName) FROM countries AS T1 JOIN car_makers AS T2 ON T2.Country = T1.CountryId GROUP BY T2.Country HAVING COUNT(DISTINCT T2.Id) > 2
after:
SELECT

index is 162
before:
SELECT count(DISTINCT T1.CountryName) FROM countries AS T1 JOIN car_makers AS T2 ON T2.Country = T1.CountryId GROUP BY T1.CountryId HAVING count(DISTINCT T2.Id) > 2
after:
SELECT count(DISTINCT T1.CountryName)  FROM countries AS T1  JOIN car_makers AS T2 ON T2.Country = T1.CountryId  GROUP BY T1.CountryId  HAVING count(DISTINCT T2.Id) > 2

index is 163
before:
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6
after:
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6

index is 164
before:
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6
after:
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6

index is 165
before:
SELECT Model FROM cars_data WHERE Cylinders = 4 ORDER BY Horsepower DESC LIMIT 1
after:
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1

index is 166
before:
SELECT Model FROM cars_data WHERE Cylinders = 4 ORDER BY Horsepower DESC LIMIT 1
after:
SELECT Model  FROM cars_data  WHERE Cylinders = 4  GROUP BY Model  ORDER BY Horsepower DESC  LIMIT 1

index is 167
before:
SELECT MakeId ,  Make FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Horsepower > (SELECT min(Horsepower) FROM cars_data) AND Cylinders <= 3)
after:
SELECT MakeId, Make FROM car_names WHERE MakeId IN (   SELECT MakeId   FROM cars_data   WHERE Horsepower > (     SELECT MIN(Horsepower)     FROM cars_data   )   AND Cylinders <= 3 )

index is 168
before:
AND T4.Cylinders < 4
after:
SELECT T4.MakeId, T3.Make FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker JOIN car_names AS T3 ON T2.Model = T3.Model JOIN cars_data AS T4 ON T3.MakeId = T4.Id WHERE T4.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND T4.Cylinders < 4

index is 169
before:
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 AND Year < 1980
after:
SELECT MAX(MPG)  FROM cars_data  WHERE Cylinders = 8 AND Year < 1980

index is 170
before:
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
after:
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980

index is 171
before:
AND car_makers.Maker <> 'Ford Motor Company'
after:
SELECT model_list.Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Weight < 3500 AND car_makers.Maker <> 'Ford Motor Company'

index is 172
before:
WHERE Weight < 3500 AND Maker <> 'Ford Motor Company'
after:
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON car_names.Model = model_list.ModelId JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.Maker <> 'Ford Motor Company'

index is 173
before:
SELECT CountryName FROM countries WHERE CountryName NOT IN (SELECT Country FROM car_makers)
after:
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers)

index is 174
before:
SELECT CountryName FROM countries WHERE NOT EXISTS (SELECT * FROM car_makers WHERE car_makers.Country = countries.CountryId)
after:
SELECT CountryName  FROM countries  WHERE CountryId NOT IN (SELECT Country FROM car_makers)

index is 175
before:
SELECT Id, Maker FROM car_makers GROUP BY Id, Maker HAVING COUNT(*) >= 2 AND COUNT(*) > 3
after:
SELECT Id, Maker FROM car_makers GROUP BY Id, Maker HAVING COUNT(DISTINCT Model) >= 2 AND COUNT(DISTINCT Id) > 3

index is 176
before:
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(model_list.Model) >= 2 AND car_makers.Id IN (SELECT car_names.MakeId FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_names.MakeId HAVING COUNT(car_names.Model) > 3)
after:
SELECT car_makers.Id, car_makers.Maker  FROM car_makers  JOIN model_list ON car_makers.Id = model_list.Maker  JOIN car_names ON car_names.MakeId = model_list.ModelId JOIN cars_data ON cars_data.Id = car_names.MakeId GROUP BY car_makers.Id, car_makers.Maker  HAVING COUNT(DISTINCT model_list.Model) >= 2  AND COUNT(DISTINCT car_names.Model) > 3

index is 177
before:
)
after:
SELECT CountryId, CountryName FROM countries WHERE CountryId IN (     SELECT car_makers.Country     FROM car_makers     GROUP BY car_makers.Country     HAVING COUNT(DISTINCT car_makers.Id) > 3 ) OR CountryId IN (     SELECT car_makers.Country     FROM car_makers     JOIN car_names ON car_names.MakeId = car_makers.Id     JOIN model_list ON model_list.Model = car_names.Model     WHERE model_list.Maker = 'fiat' )

index is 178
before:
SELECT CountryId, CountryName FROM countries WHERE (SELECT COUNT(DISTINCT car_makers.Id) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR (SELECT COUNT(*) FROM model_list WHERE Maker = 'fiat' AND Maker = car_makers.Id AND car_makers.Country = countries.CountryId) > 0
after:
SELECT CountryId, CountryName FROM countries WHERE CountryId IN (   SELECT Country   FROM car_makers   GROUP BY Country   HAVING COUNT(DISTINCT Id) > 3 ) OR CountryId IN (   SELECT car_makers.Country   FROM car_makers   JOIN model_list ON car_makers.Id = model_list.Maker   JOIN car_names ON model_list.Model = car_names.Model   WHERE car_names.Make = 'fiat' )

index is 179
before:
SELECT Country FROM airlines WHERE Airline = 'JetBlue Airways'
after:
SELECT Country FROM airlines WHERE Airline = 'JetBlue Airways'

index is 180
before:
SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways'
after:
SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways'

index is 181
before:
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue Airways'
after:
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue Airways'

index is 182
before:
SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways'
after:
SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways'

index is 183
before:
SELECT Airline, Abbreviation FROM airlines JOIN airports ON airports.CountryAbbrev = airlines.uid WHERE airports.Country = 'USA'
after:
SELECT Airline, Abbreviation  FROM airlines  JOIN airports ON airports.CountryAbbrev = airlines.CountryAbbrev  WHERE airports.Country = 'USA'

index is 184
before:
SELECT Airline ,  Abbreviation FROM airlines JOIN airports ON airlines.Country  =  airports.Country WHERE airports.Country  =  'USA'
after:
SELECT Airline, Abbreviation FROM airlines WHERE airlines.Country = 'USA'

index is 185
before:
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'
after:
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'

index is 186
before:
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'
after:
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'

index is 187
before:
SELECT COUNT(*) FROM airlines
after:
SELECT COUNT(*) FROM airlines

index is 188
before:
SELECT COUNT(uid) FROM airlines
after:
SELECT COUNT(*) FROM airlines

index is 189
before:
SELECT COUNT(*) FROM airports
after:
SELECT COUNT(*) FROM airports

index is 190
before:
SELECT COUNT(*) FROM airports
after:
SELECT COUNT(AirportCode) FROM airports

index is 191
before:
SELECT COUNT(*) FROM flights
after:
SELECT COUNT(*) FROM flights

index is 192
before:
SELECT COUNT(*) FROM flights
after:
SELECT COUNT(*) FROM flights

index is 193
before:
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL'
after:
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL'

index is 194
before:
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL'
after:
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL'

index is 195
before:
SELECT COUNT(*) FROM airlines WHERE Country = 'USA'
after:
SELECT COUNT(*) FROM airlines WHERE Country = 'USA'

index is 196
before:
SELECT COUNT(uid) FROM airlines WHERE Country = 'USA'
after:
SELECT COUNT(*) FROM airlines WHERE Country = 'USA'

index is 197
before:
SELECT City, Country FROM airports WHERE AirportName = 'Alton'
after:
SELECT City, Country FROM airports WHERE AirportName = 'Alton';

index is 198
before:
SELECT City, Country FROM airports WHERE AirportName = 'Alton'
after:
SELECT City, Country FROM airports WHERE AirportName = 'Alton';

index is 199
before:
SELECT AirportName FROM airports WHERE AirportCode = 'AKO'
after:
SELECT AirportName  FROM airports  WHERE AirportCode = 'AKO'

index is 200
before:
SELECT AirportName FROM airports WHERE AirportCode = 'AKO'
after:
SELECT AirportName FROM airports WHERE AirportCode = 'AKO'

index is 201
before:
SELECT AirportName FROM airports WHERE City = 'Aberdeen'
after:
SELECT AirportName  FROM airports  WHERE City = 'Aberdeen'

index is 202
before:
SELECT AirportName FROM airports WHERE City = 'Aberdeen'
after:
SELECT AirportName FROM airports WHERE City = 'Aberdeen'

index is 203
before:
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'APG'
after:
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG'

index is 204
before:
SELECT COUNT(FlightNo) FROM flights WHERE SourceAirport = 'APG'
after:
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG'

index is 205
before:
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO'
after:
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO'

index is 206
before:
SELECT count(*) FROM flights WHERE DestAirport = 'ATO'
after:
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO'

index is 207
before:
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
after:
SELECT COUNT(flights.FlightNo) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'

index is 208
before:
SELECT COUNT(flights.FlightNo) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
after:
SELECT COUNT(flights.FlightNo)  FROM flights  JOIN airports ON flights.SourceAirport = airports.AirportCode  WHERE airports.City = 'Aberdeen' AND flights.SourceAirport = airports.AirportCode

index is 209
before:
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
after:
SELECT COUNT(*) FROM flights  JOIN airports ON flights.DestAirport = airports.AirportCode  WHERE airports.City = 'Aberdeen';

index is 210
before:
SELECT
after:
SELECT COUNT(*) AS ArrivalFlights FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'

index is 211
before:
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen' AND flights.DestAirport = (SELECT AirportCode FROM airports WHERE City = 'Ashley')
after:
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode JOIN airports AS dest_airports ON flights.DestAirport = dest_airports.AirportCode WHERE airports.City = 'Aberdeen' AND dest_airports.City = 'Ashley';

index is 212
before:
WHERE A1.AirportName = 'Aberdeen' AND A2.AirportName = 'Ashley'
after:
SELECT count(*) FROM flights JOIN airports AS A1 ON flights.SourceAirport = A1.AirportCode JOIN airports AS A2 ON flights.DestAirport = A2.AirportCode WHERE A1.City = 'Aberdeen' AND A2.City = 'Ashley'

index is 213
before:
SELECT COUNT(FlightNo) FROM flights WHERE Airline IN (SELECT uid FROM airlines WHERE Airline = 'JetBlue Airways')
after:
SELECT COUNT(FlightNo)  FROM flights  WHERE Airline IN (SELECT uid FROM airlines WHERE Airline = 'JetBlue Airways')

index is 214
before:
SELECT COUNT(FlightNo) FROM flights JOIN airlines ON flights.Airline = airlines.Abbreviation WHERE airlines.Airline = 'Jetblue Airways'
after:
SELECT COUNT(FlightNo)  FROM flights  JOIN airlines ON flights.Airline = airlines.Abbreviation  WHERE airlines.Airline = 'Jetblue Airways'

index is 215
before:
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.AirportCode = 'ASY'
after:
SELECT COUNT(*) FROM flights  JOIN airlines ON flights.Airline = airlines.uid  JOIN airports ON flights.DestAirport = airports.AirportCode  WHERE airlines.Airline = 'United Airlines'  AND flights.DestAirport = 'ASY'

index is 216
before:
WHERE flights.Airline = 'United Airlines' AND airports.AirportCode = 'ASY'
after:
SELECT COUNT(*)  FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE flights.Airline = 'United Airlines' AND airports.AirportCode = 'ASY'

index is 217
before:
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE flights.Airline = 'United Airlines' AND airports.AirportCode = 'AHD'
after:
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Abbreviation JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.AirportCode = 'AHD'

index is 218
before:
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode JOIN airlines ON flights.Airline = airlines.Airline WHERE airlines.Airline = 'United Airlines' AND airports.AirportCode = 'AHD'
after:
SELECT COUNT(*)  FROM flights  JOIN airports ON flights.SourceAirport = airports.AirportCode  JOIN airlines ON flights.Airline = airlines.Airline  WHERE airlines.Airline = 'United Airlines'  AND airports.AirportCode = 'AHD' AND flights.SourceAirport = 'AHD'

index is 219
before:
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Abbreviation JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen'
after:
SELECT COUNT(DISTINCT flights.FlightNo) FROM flights  JOIN airlines ON flights.Airline = airlines.Abbreviation  JOIN airports ON flights.DestAirport = airports.AirportCode  WHERE airlines.Airline = 'United Airlines'  AND airports.City = 'Aberdeen'

index is 220
before:
SELECT COUNT(FlightNo) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode JOIN airlines ON airlines.uid = flights.Airline WHERE airports.City = 'Aberdeen' AND airlines.Airline = 'United Airlines'
after:
SELECT COUNT(flights.FlightNo) FROM flights  JOIN airports ON flights.DestAirport = airports.AirportCode  JOIN airlines ON airlines.uid = flights.Airline  WHERE airports.City = 'Aberdeen'  AND airlines.Airline = 'United Airlines'

index is 221
before:
SELECT
after:
SELECT SELECT airports.City, COUNT(*) AS num_arriving_flights FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode GROUP BY airports.City ORDER BY num_arriving_flights DESC LIMIT 1;

index is 222
before:
SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T2.DestAirport ORDER BY count(T2.DestAirport) DESC LIMIT 1
after:
SELECT T1.City  FROM airports AS T1  JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport  GROUP BY T2.DestAirport, T1.City  ORDER BY COUNT(T2.DestAirport) DESC  LIMIT 1

index is 223
before:
SELECT airports.City, count(flights.SourceAirport) as num_departing_flights FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY airports.City ORDER BY num_departing_flights DESC LIMIT 1
after:
SELECT airports.City, COUNT(flights.SourceAirport) AS num_departing_flights  FROM airports  JOIN flights ON airports.AirportCode = flights.SourceAirport  GROUP BY airports.City  ORDER BY num_departing_flights DESC  LIMIT 1

index is 224
before:
SELECT airports.City, COUNT(flights.SourceAirport) AS frequency FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY airports.City ORDER BY frequency DESC LIMIT 1
after:
SELECT airports.City, COUNT(flights.SourceAirport) AS frequency FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY airports.City ORDER BY frequency DESC LIMIT 1

index is 225
before:
SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport OR airports.AirportCode = flights.DestAirport GROUP BY airports.AirportCode ORDER BY count(*) DESC LIMIT 1
after:
SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport OR airports.AirportCode = flights.DestAirport GROUP BY airports.AirportCode ORDER BY COUNT(*) DESC LIMIT 1

index is 226
before:
)
after:
SELECT AirportCode FROM airports WHERE AirportCode IN (     SELECT SourceAirport     FROM flights     GROUP BY SourceAirport     HAVING COUNT(FlightNo) = (         SELECT MAX(FlightCount)         FROM (             SELECT COUNT(FlightNo) AS FlightCount             FROM flights             GROUP BY SourceAirport         ) AS T     ) ) LIMIT 1

index is 227
before:
SELECT T1.AirportCode FROM airports AS T1 LEFT JOIN flights AS T2 ON T2.SourceAirport = T1.AirportCode OR T2.DestAirport = T1.AirportCode GROUP BY T1.AirportCode ORDER BY COUNT(T2.FlightNo) ASC LIMIT 1
after:
SELECT T1.AirportCode FROM airports AS T1 LEFT JOIN flights AS T2 ON T2.SourceAirport = T1.AirportCode OR T2.DestAirport = T1.AirportCode GROUP BY T1.AirportCode ORDER BY COUNT(DISTINCT T2.FlightNo) ASC LIMIT 1

index is 228
before:
This query performs a left join between the "airports" and "flights" tables, connecting them through the SourceAirport and DestAirport columns. It groups the results by the AirportCode and orders them by the count of FlightNo in ascending order. Finally, it limits the result to just one row, which will be the airport with the least flights.
after:
SELECT AirportCode FROM airports LEFT JOIN flights ON airports.AirportCode = flights.SourceAirport OR airports.AirportCode = flights.DestAirport GROUP BY AirportCode ORDER BY COUNT(DISTINCT flights.FlightNo) ASC LIMIT 1

index is 229
before:
SELECT
after:
SELECT SELECT airlines.Airline, COUNT(*) AS FlightCount FROM airlines JOIN flights ON airlines.uid = flights.Airline GROUP BY airlines.Airline ORDER BY FlightCount DESC LIMIT 1;

index is 230
before:
LIMIT 1
after:
SELECT A.Airline FROM airlines AS A JOIN flights AS F ON A.Abbreviation = F.Airline GROUP BY A.Airline ORDER BY COUNT(*) DESC LIMIT 1

index is 231
before:
SELECT
after:
SELECT SELECT airlines.Abbreviation, airlines.Country FROM airlines JOIN flights ON airlines.uid = flights.Airline GROUP BY airlines.Abbreviation, airlines.Country ORDER BY COUNT(flights.FlightNo) ASC LIMIT 1;

index is 232
before:
LIMIT 1
after:
SELECT airlines.Abbreviation, airlines.Country  FROM airlines INNER JOIN flights ON airlines.uid = flights.Airline GROUP BY airlines.Abbreviation, airlines.Country ORDER BY COUNT(*) ASC LIMIT 1

index is 233
before:
SELECT DISTINCT airlines.Airline FROM airlines, flights, airports WHERE flights.SourceAirport = 'AHD' AND flights.Airline = airlines.uid
after:
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON flights.Airline = airlines.uid WHERE flights.SourceAirport = 'AHD'

index is 234
before:
SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = 'AHD'
after:
SELECT T1.Airline  FROM airlines AS T1  JOIN flights AS T2 ON T1.uid = T2.Airline  WHERE T2.SourceAirport = 'AHD'

index is 235
before:
SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.DestAirport = 'AHD'
after:
SELECT airlines.Airline  FROM airlines  JOIN flights ON airlines.uid = flights.Airline  WHERE flights.DestAirport = 'AHD'

index is 236
before:
SELECT Airline FROM airlines JOIN flights ON flights.Airline = airlines.uid JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportCode = 'AHD'
after:
SELECT Airline FROM airlines JOIN flights ON flights.Airline = airlines.uid JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportCode = 'AHD'

index is 237
before:
SELECT DISTINCT Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.SourceAirport = 'APG' INTERSECT SELECT DISTINCT Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.SourceAirport = 'CVO'
after:
SELECT DISTINCT Airline  FROM airlines  JOIN flights ON airlines.uid = flights.Airline  WHERE flights.SourceAirport IN ('APG', 'CVO') GROUP BY Airline HAVING COUNT(DISTINCT flights.SourceAirport) = 2

index is 238
before:
SELECT Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.SourceAirport = 'APG' INTERSECT SELECT Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.SourceAirport = 'CVO'
after:
SELECT Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode IN ('APG', 'CVO') GROUP BY airlines.uid HAVING COUNT(DISTINCT airports.AirportCode) = 2

index is 239
before:
SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T2.SourceAirport = T3.AirportCode WHERE T2.SourceAirport = 'CVO' AND T1.Airline NOT IN (SELECT T4.uid FROM airlines AS T4 JOIN flights AS T5 ON T4.uid = T5.Airline JOIN airports AS T6 ON T5.SourceAirport = T6.AirportCode WHERE T5.SourceAirport = 'APG')
after:
SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T2.SourceAirport = T3.AirportCode WHERE T2.SourceAirport = 'CVO' AND T1.Airline NOT IN (   SELECT T4.uid   FROM airlines AS T4   JOIN flights AS T5 ON T4.uid = T5.Airline   JOIN airports AS T6 ON T5.SourceAirport = T6.AirportCode   WHERE T6.AirportCode = 'APG' )

index is 240
before:
SELECT DISTINCT Airline FROM flights WHERE SourceAirport = 'CVO' AND Airline NOT IN (SELECT DISTINCT Airline FROM flights WHERE SourceAirport = 'APG')
after:
SELECT Airline FROM flights WHERE SourceAirport = 'CVO'   AND Airline NOT IN (     SELECT DISTINCT Airline     FROM flights     WHERE SourceAirport = 'APG'   )   AND SourceAirport <> 'APG'

index is 241
before:
SELECT DISTINCT A.Airline FROM airlines AS A JOIN flights AS F ON A.Abbreviation = F.Airline GROUP BY A.Airline HAVING COUNT(*) >= 10
after:
SELECT DISTINCT A.Airline  FROM airlines AS A  JOIN flights AS F ON A.Abbreviation = F.Airline  GROUP BY A.Airline  HAVING COUNT(*) >= 10

index is 242
before:
SELECT DISTINCT A.Airline FROM airlines AS A JOIN flights AS F ON A.uid = F.Airline GROUP BY A.Airline HAVING COUNT(*) >= 10
after:
SELECT DISTINCT A.Airline  FROM airlines AS A  JOIN flights AS F ON A.uid = F.Airline  GROUP BY A.Airline  HAVING COUNT(*) >= 10

index is 243
before:
SELECT Airline FROM airlines WHERE uid IN (SELECT Airline FROM flights GROUP BY Airline HAVING count(*) < 200)
after:
SELECT Airline FROM airlines WHERE uid IN (SELECT Airline FROM flights GROUP BY Airline HAVING count(*) < 200)

index is 244
before:
SELECT A.Airline FROM airlines AS A JOIN flights AS F ON A.uid = F.Airline GROUP BY A.Airline HAVING COUNT(*) < 200
after:
SELECT A.Airline  FROM airlines AS A  JOIN flights AS F ON A.uid = F.Airline  GROUP BY A.uid, A.Airline  HAVING COUNT(*) < 200

index is 245
before:
SELECT FlightNo FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = 'United Airlines'
after:
SELECT flights.FlightNo  FROM flights  JOIN airlines ON flights.Airline = airlines.Airline  WHERE airlines.Airline = 'United Airlines'

index is 246
before:
SELECT FlightNo FROM flights JOIN airlines ON flights.Airline = airlines.Abbreviation WHERE airlines.Airline = 'United Airlines'
after:
SELECT FlightNo FROM flights JOIN airlines ON flights.Airline = airlines.Abbreviation WHERE airlines.Airline = 'United Airlines'

index is 247
before:
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'APG'
after:
SELECT flights.FlightNo FROM flights  JOIN airports ON flights.SourceAirport = airports.AirportCode  WHERE airports.AirportCode = 'APG'

index is 248
before:
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'APG'
after:
SELECT FlightNo  FROM flights  JOIN airports ON flights.SourceAirport = airports.AirportCode  WHERE airports.AirportCode = 'APG'

index is 249
before:
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportCode = 'APG'
after:
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportCode = 'APG'

index is 250
before:
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportCode = 'APG'
after:
SELECT FlightNo FROM flights WHERE flights.DestAirport = 'APG'

index is 251
before:
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
after:
SELECT flights.FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'

index is 252
before:
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportName = 'Aberdeen'
after:
SELECT flights.FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportName = 'Aberdeen'

index is 253
before:
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
after:
SELECT flights.FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'

index is 254
before:
SELECT
after:
SELECT SELECT flights.FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';

index is 255
before:
SELECT
after:
SELECT SELECT COUNT(*)  FROM flights  JOIN airports ON flights.DestAirport = airports.AirportCode  WHERE airports.City = 'Aberdeen' OR airports.City = 'Abilene'

index is 256
before:
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen' OR airports.City = 'Abilene'
after:
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City IN ('Aberdeen', 'Abilene')

index is 257
before:
SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights)
after:
SELECT AirportName  FROM airports  WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights)  AND AirportCode NOT IN (SELECT DestAirport FROM flights)

index is 258
before:
SELECT AirportCode FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights)
after:
SELECT AirportCode FROM airports LEFT JOIN flights ON airports.AirportCode = flights.SourceAirport OR airports.AirportCode = flights.DestAirport WHERE flights.SourceAirport IS NULL AND flights.DestAirport IS NULL

index is 259
before:
SELECT COUNT(*) FROM employee
after:
SELECT COUNT(*) FROM employee

index is 260
before:
SELECT COUNT(Employee_ID) FROM employee
after:
SELECT COUNT(*) FROM employee

index is 261
before:
ORDER BY Age ASC;
after:
SELECT Name FROM employee ORDER BY Age ASC;

index is 262
before:
SELECT Name FROM employee ORDER BY Age ASC
after:
SELECT employee.Name FROM employee ORDER BY employee.Age ASC

index is 263
before:
SELECT City, COUNT(Employee_ID) FROM employee GROUP BY City
after:
SELECT City, COUNT(Employee_ID)  FROM employee  GROUP BY City

index is 264
before:
SELECT city, COUNT(employee_id) FROM employee GROUP BY city
after:
SELECT city, COUNT(*) FROM employee GROUP BY city

index is 265
before:
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1
after:
SELECT City  FROM employee  WHERE Age < 30  GROUP BY City  HAVING COUNT(DISTINCT Employee_ID) > 1

index is 266
before:
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1.
after:
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1;

index is 267
before:
SELECT COUNT(Shop_ID), Location FROM shop GROUP BY Location
after:
SELECT COUNT(DISTINCT Shop_ID) AS Number_of_Shops, Location  FROM shop  GROUP BY Location

index is 268
before:
SELECT COUNT(Shop_ID), Location FROM shop GROUP BY Location
after:
SELECT COUNT(Shop_ID), Location  FROM shop  GROUP BY Location

index is 269
before:
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
after:
SELECT Manager_name, District FROM shop WHERE Number_products = (   SELECT MAX(Number_products)   FROM shop )

index is 270
before:
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
after:
SELECT Manager_name, District FROM shop WHERE Shop_ID = (   SELECT Shop_ID   FROM shop   WHERE Number_products = (     SELECT MAX(Number_products)     FROM shop   ) ) LIMIT 1

index is 271
before:
SELECT MIN(Number_products), MAX(Number_products) FROM shop
after:
SELECT MIN(Number_products) AS Min_Number_products, MAX(Number_products) AS Max_Number_products FROM shop

index is 272
before:
SELECT MIN(Number_products), MAX(Number_products) FROM shop
after:
SELECT MIN(Number_products), MAX(Number_products) FROM shop;

index is 273
before:
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
after:
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC

index is 274
before:
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
after:
SELECT shop.Name, shop.Location, shop.District  FROM shop  ORDER BY shop.Number_products DESC

index is 275
before:
SELECT Name FROM shop WHERE Number_products > (SELECT avg(Number_products) FROM shop)
after:
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)

index is 276
before:
SELECT Name FROM shop WHERE Number_products > (SELECT avg(Number_products) FROM shop)
after:
SELECT shop.Name  FROM shop  WHERE shop.Number_products > (     SELECT avg(shop.Number_products)      FROM shop )

index is 277
before:
SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Year_awarded = (SELECT max(Year_awarded) FROM evaluation)
after:
SELECT T1.Name  FROM employee AS T1  JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID  GROUP BY T1.Name  HAVING T2.Year_awarded = (SELECT max(Year_awarded) FROM evaluation)

index is 278
before:
SELECT T2.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T2.Employee_ID ORDER BY count(*) DESC LIMIT 1
after:
SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T1.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1

index is 279
before:
SELECT Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY Bonus DESC LIMIT 1
after:
SELECT employee.Name  FROM employee  JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID  ORDER BY evaluation.Bonus DESC  LIMIT 1

index is 280
before:
SELECT Name FROM employee ORDER BY Bonus DESC LIMIT 1
after:
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1

index is 281
before:
SELECT Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
after:
SELECT Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation WHERE Year_awarded IS NOT NULL)

index is 282
before:
SELECT Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
after:
SELECT Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)

index is 283
before:
SELECT T1.Name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Shop_ID ORDER BY count(T2.Employee_ID) DESC LIMIT 1
after:
SELECT T1.Name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1

index is 284
before:
SELECT Name FROM shop GROUP BY Shop_ID ORDER BY COUNT(Employee_ID) DESC LIMIT 1
after:
SELECT shop.Name  FROM shop  JOIN hiring ON shop.Shop_ID = hiring.Shop_ID  GROUP BY shop.Shop_ID  ORDER BY COUNT(hiring.Employee_ID) DESC  LIMIT 1

index is 285
before:
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring)
after:
SELECT shop.Name FROM shop LEFT JOIN hiring ON shop.Shop_ID = hiring.Shop_ID WHERE hiring.Shop_ID IS NULL

index is 286
before:
SELECT Name FROM shop LEFT JOIN hiring ON shop.Shop_ID = hiring.Shop_ID WHERE hiring.Employee_ID IS NULL
after:
SELECT Name  FROM shop  LEFT JOIN hiring ON shop.Shop_ID = hiring.Shop_ID  WHERE hiring.Employee_ID IS NULL

index is 287
before:
SELECT count(hiring.Employee_ID), shop.Name FROM hiring JOIN shop ON hiring.Shop_ID = shop.Shop_ID GROUP BY hiring.Shop_ID, shop.Name
after:
SELECT count(hiring.Employee_ID), shop.Name  FROM hiring  JOIN shop ON hiring.Shop_ID = shop.Shop_ID  GROUP BY shop.Name

index is 288
before:
SELECT Name, COUNT(employee.Employee_ID) FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID JOIN employee ON hiring.Employee_ID = employee.Employee_ID GROUP BY shop.Shop_ID
after:
SELECT shop.Name, COUNT(employee.Employee_ID)  FROM shop  JOIN hiring ON shop.Shop_ID = hiring.Shop_ID  JOIN employee ON hiring.Employee_ID = employee.Employee_ID  GROUP BY shop.Shop_ID

index is 289
before:
SELECT SUM(Bonus) FROM evaluation
after:
SELECT SUM(Bonus) AS Total_Bonus FROM evaluation

index is 290
before:
SELECT SUM(Bonus) FROM evaluation
after:
SELECT SUM(Bonus) AS TotalBonus FROM evaluation

index is 291
before:
SELECT * FROM hiring
after:
SELECT hiring.* FROM hiring

index is 292
before:
SELECT * FROM hiring
after:
SELECT hiring.* FROM hiring

index is 293
before:
SELECT District FROM shop WHERE Number_products  <  3000 INTERSECT SELECT District FROM shop WHERE Number_products  >  10000
after:
SELECT District FROM shop WHERE District IN (     SELECT District     FROM shop     WHERE Number_products < 3000 ) AND District IN (     SELECT District     FROM shop     WHERE Number_products > 10000 )

index is 294
before:
SELECT District FROM shop WHERE Number_products  <  3000 INTERSECT SELECT District FROM shop WHERE Number_products  >  10000.
after:
SELECT DISTINCT District  FROM shop  WHERE District IN (     SELECT District FROM shop WHERE Number_products < 3000     INTERSECT      SELECT District FROM shop WHERE Number_products > 10000 );

index is 295
before:
SELECT COUNT(DISTINCT Location) FROM shop
after:
SELECT COUNT(DISTINCT Location) FROM shop

index is 296
before:
SELECT COUNT(DISTINCT Location) FROM shop
after:
SELECT COUNT(DISTINCT Location) AS Number_of_Store_Locations FROM shop

index is 297
before:
SELECT COUNT(Document_ID) FROM Documents
after:
SELECT COUNT(Document_ID) FROM Documents

index is 298
before:
SELECT COUNT(*) FROM Documents
after:
SELECT COUNT(Document_ID) FROM Documents

index is 299
before:
SELECT Document_ID, Document_Name, Document_Description FROM Documents
after:
SELECT Document_ID, Document_Name, Document_Description FROM Documents

index is 300
before:
SELECT Document_ID, Document_Name, Document_Description FROM Documents
after:
SELECT Document_ID, Document_Name, Document_Description FROM Documents

index is 301
before:
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
after:
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'

index is 302
before:
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
after:
SELECT Document_Name, Template_ID  FROM Documents  WHERE Document_Description LIKE '%w%';

index is 303
before:
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
after:
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'

index is 304
before:
WHERE Document_Name = 'Robbin CV'
after:
SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description FROM Documents WHERE Documents.Document_Name = 'Robbin CV'

index is 305
before:
SELECT COUNT(DISTINCT Templates.Template_ID) FROM Templates JOIN Documents ON Documents.Template_ID = Templates.Template_ID
after:
SELECT COUNT(DISTINCT Templates.Template_ID) FROM Templates JOIN Documents ON Documents.Template_ID = Templates.Template_ID

index is 306
before:
SELECT COUNT(DISTINCT T1.Template_ID) FROM Templates AS T1
after:
SELECT COUNT(DISTINCT D.Template_ID) FROM Documents AS D JOIN Templates AS T ON D.Template_ID = T.Template_ID

index is 307
before:
SELECT
after:
SELECT SELECT COUNT(DISTINCT Documents.Document_ID) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'PPT'

index is 308
before:
```
after:
SELECT COUNT(DISTINCT Documents.Document_ID) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'PPT'

index is 309
before:
SELECT Templates.Template_ID, count(Documents.Template_ID) FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID
after:
SELECT Templates.Template_ID, count(Documents.Document_ID)  FROM Templates  JOIN Documents ON Templates.Template_ID = Documents.Template_ID  GROUP BY Templates.Template_ID

index is 310
before:
This query will give you a result with two columns: "Template_ID" and "Usage_Count". Each row represents a unique template id used in documents, along with the number of times it was used.
after:
SELECT Templates.Template_ID, COUNT(Documents.Document_ID) AS Usage_Count FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID GROUP BY Templates.Template_ID;

index is 311
before:
SELECT T1.Template_ID, T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID, T1.Template_Type_Code ORDER BY COUNT(T2.Template_ID) DESC LIMIT 1
after:
SELECT T1.Template_ID, T1.Template_Type_Code  FROM Templates AS T1  JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID  GROUP BY T1.Template_ID, T1.Template_Type_Code  ORDER BY COUNT(T2.Document_ID) DESC  LIMIT 1

index is 312
before:
SELECT Template_ID, Template_Type_Code FROM Templates GROUP BY Template_ID, Template_Type_Code ORDER BY COUNT(Documents.Template_ID) DESC LIMIT 1
after:
SELECT Templates.Template_ID, Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID, Templates.Template_Type_Code ORDER BY COUNT(Documents.Document_ID) DESC LIMIT 1

index is 313
before:
SELECT DISTINCT T1.Template_ID FROM Templates AS T1 INNER JOIN Documents AS T2 ON T2.Template_ID = T1.Template_ID GROUP BY T1.Template_ID HAVING COUNT(T2.Template_ID) > 1
after:
SELECT T1.Template_ID  FROM Templates AS T1  INNER JOIN Documents AS T2 ON T2.Template_ID = T1.Template_ID  GROUP BY T1.Template_ID  HAVING COUNT(DISTINCT T2.Document_ID) > 1

index is 314
before:
SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(*) > 1.
after:
SELECT Templates.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID GROUP BY Templates.Template_ID HAVING COUNT(DISTINCT Documents.Document_ID) > 1;

index is 315
before:
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)
after:
SELECT Templates.Template_ID  FROM Templates  LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID  WHERE Documents.Document_ID IS NULL

index is 316
before:
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)
after:
SELECT Templates.Template_ID  FROM Templates  LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Template_ID IS NULL

index is 317
before:
SELECT COUNT(Template_ID) FROM Templates
after:
SELECT COUNT(Template_ID) FROM Templates

index is 318
before:
SELECT COUNT(Template_ID) FROM Templates
after:
SELECT COUNT(Template_ID) FROM Templates

index is 319
before:
INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code
after:
SELECT Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code FROM Templates

index is 320
before:
Note: Since there are no specific conditions or joins mentioned in the question, the query simply retrieves the columns from the "Templates" table.
after:
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates

index is 321
before:
SELECT DISTINCT Template_Type_Code FROM Templates
after:
SELECT DISTINCT Template_Type_Code FROM Templates

index is 322
before:
SELECT Template_Type_Code FROM Ref_Template_Types
after:
SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types

index is 323
before:
SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT'
after:
SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Templates.Template_Type_Code = 'PP' OR Templates.Template_Type_Code = 'PPT'

index is 324
before:
SELECT Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Templates.Template_Type_Code = 'PP' OR Templates.Template_Type_Code = 'PPT'
after:
SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Templates.Template_Type_Code = 'PP' OR Templates.Template_Type_Code = 'PPT'

index is 325
before:
SELECT count(Templates.Template_ID) FROM Templates WHERE Templates.Template_Type_Code = 'CV'
after:
SELECT count(*) FROM Templates WHERE Templates.Template_Type_Code = 'CV'

index is 326
before:
SELECT COUNT(Templates.Template_ID) FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'CV'
after:
SELECT COUNT(DISTINCT Templates.Template_ID) AS Total_Templates FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'CV'

index is 327
before:
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
after:
SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 5

index is 328
before:
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
after:
SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 5

index is 329
before:
SELECT
after:
SELECT Ref_Template_Types.Template_Type_Code, COUNT(Templates.Template_ID) AS Number_of_Templates FROM Ref_Template_Types LEFT JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code GROUP BY Ref_Template_Types.Template_Type_Code;

index is 330
before:
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code
after:
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID)  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code

index is 331
before:
SELECT Template_Type_Code, COUNT(*) FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
after:
SELECT Template_Type_Code, COUNT(*)  FROM Templates  GROUP BY Template_Type_Code  ORDER BY COUNT(*) DESC  LIMIT 1

index is 332
before:
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code ORDER BY count(*) DESC LIMIT 1
after:
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code  ORDER BY COUNT(*) DESC  LIMIT 1

index is 333
before:
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(Template_ID) >= 3)
after:
SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types LEFT JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code GROUP BY Ref_Template_Types.Template_Type_Code HAVING COUNT(Templates.Template_ID) < 3

index is 334
before:
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code HAVING COUNT(T2.Template_ID) < 3
after:
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code  HAVING COUNT(T2.Template_ID) < 3

index is 335
before:
SELECT MIN(Version_Number), Template_Type_Code FROM Templates
after:
SELECT MIN(Version_Number) AS Smallest_Version_Number, Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY Smallest_Version_Number ASC LIMIT 1

index is 336
before:
SELECT Version_Number ,  Template_Type_Code FROM Templates WHERE Version_Number  =  (SELECT min(Version_Number) FROM Templates)
after:
SELECT Templates.Version_Number, Templates.Template_Type_Code  FROM Templates  WHERE Templates.Version_Number = (SELECT MIN(Version_Number) FROM Templates)

index is 337
before:
SELECT Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = 'Data base'
after:
SELECT Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = 'Data base'

index is 338
before:
SELECT Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = 'Data base'
after:
SELECT Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = 'Data base'

index is 339
before:
SELECT Document_Name FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'BK'
after:
SELECT Document_Name FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'BK'

index is 340
before:
SELECT Document_Name FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK'
after:
SELECT Document_Name  FROM Documents  JOIN Templates ON Documents.Template_ID = Templates.Template_ID  JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'BK'

index is 341
before:
```
after:
SELECT T1.Template_Type_Code, COUNT(T3.Document_ID)  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  LEFT JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID  GROUP BY T1.Template_Type_Code

index is 342
before:
SELECT Ref_Template_Types.Template_Type_Code , COUNT(Documents.Document_ID) FROM Ref_Template_Types JOIN Templates ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code JOIN Documents ON Documents.Template_ID = Templates.Template_ID GROUP BY Ref_Template_Types.Template_Type_Code
after:
SELECT Ref_Template_Types.Template_Type_Code, COUNT(DISTINCT Documents.Document_ID)  FROM Ref_Template_Types  JOIN Templates ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code  JOIN Documents ON Documents.Template_ID = Templates.Template_ID  GROUP BY Ref_Template_Types.Template_Type_Code

index is 343
before:
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_ID GROUP BY T1.Template_Type_Code ORDER BY count(T2.*) DESC LIMIT 1
after:
SELECT Ref_Template_Types.Template_Type_Code  FROM Ref_Template_Types  JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code  JOIN Documents ON Templates.Template_ID = Documents.Template_ID  GROUP BY Ref_Template_Types.Template_Type_Code  ORDER BY COUNT(Documents.Document_ID) DESC  LIMIT 1

index is 344
before:
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code JOIN Documents AS T3 ON T3.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code ORDER BY count(T3.Template_ID) DESC LIMIT 1
after:
SELECT T2.Template_Type_Code  FROM Ref_Template_Types AS T1  JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  JOIN Documents AS T3 ON T3.Template_ID = T2.Template_ID  GROUP BY T2.Template_Type_Code  ORDER BY COUNT(T3.Template_ID) DESC  LIMIT 1

index is 345
before:
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT DISTINCT Template_Type_Code FROM Documents)
after:
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (   SELECT DISTINCT Template_Type_Code   FROM Templates   INNER JOIN Documents ON Documents.Template_ID = Templates.Template_ID )

index is 346
before:
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT Templates.Template_Type_Code FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID)
after:
SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types LEFT JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_ID IS NULL

index is 347
before:
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
after:
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types

index is 348
before:
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
after:
SELECT Template_Type_Code, Template_Type_Description  FROM Ref_Template_Types

index is 349
before:
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
after:
SELECT Template_Type_Description  FROM Ref_Template_Types  WHERE Template_Type_Code = 'AD'

index is 350
before:
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
after:
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'

index is 351
before:
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
after:
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'

index is 352
before:
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
after:
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'

index is 353
before:
SELECT DISTINCT T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID
after:
SELECT DISTINCT T1.Template_Type_Description  FROM Ref_Template_Types AS T1  JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID

index is 354
before:
JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID
after:
SELECT T2.Template_Type_Description FROM Templates AS T2 JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID JOIN Ref_Template_Types AS T1 ON T2.Template_Type_Code = T1.Template_Type_Code GROUP BY T2.Template_Type_Description

index is 355
before:
SELECT Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation'
after:
SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation'

index is 356
before:
SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation'
after:
SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation'

index is 357
before:
SELECT COUNT(*) FROM Paragraphs
after:
SELECT COUNT(*) FROM Paragraphs

index is 358
before:
SELECT COUNT(*) FROM Paragraphs
after:
SELECT COUNT(*) AS Paragraph_Count FROM Paragraphs

index is 359
before:
SELECT COUNT(*) FROM Paragraphs JOIN Documents ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'Summer Show'
after:
SELECT COUNT(Paragraphs.Paragraph_ID) FROM Paragraphs JOIN Documents ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'Summer Show'

index is 360
before:
SELECT COUNT(Paragraphs.Paragraph_ID) FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'Summer Show'
after:
SELECT COUNT(Paragraphs.Paragraph_ID) AS Paragraph_Count FROM Documents  JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID  WHERE Documents.Document_Name = 'Summer Show'

index is 361
before:
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea'
after:
SELECT Paragraph_ID, Document_ID, Paragraph_Text, Other_Details  FROM Paragraphs  WHERE Paragraph_Text = 'Korea'

index is 362
before:
SELECT * FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'
after:
SELECT Paragraphs.* FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Paragraph_Text LIKE '%Korea%'

index is 363
before:
SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Welcome to NY'
after:
SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text  FROM Paragraphs  JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID  JOIN Templates ON Documents.Template_ID = Templates.Template_ID  JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Documents.Document_Name = 'Welcome to NY'

index is 364
before:
SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = 'Welcome to NY'
after:
SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = 'Welcome to NY'

index is 365
before:
SELECT Paragraph_Text FROM Paragraphs JOIN Documents ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'Customer reviews'
after:
SELECT Paragraphs.Paragraph_Text FROM Paragraphs JOIN Documents ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'Customer reviews'

index is 366
before:
SELECT Paragraph_Text FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'Customer reviews'
after:
SELECT Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'Customer reviews'

index is 367
before:
ORDER BY Documents.Document_ID
after:
SELECT Documents.Document_ID, COUNT(Paragraphs.Paragraph_ID) AS paragraph_count  FROM Documents  JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID  GROUP BY Documents.Document_ID  ORDER BY Documents.Document_ID

index is 368
before:
ORDER BY Document_ID
after:
SELECT Document_ID, COUNT(Paragraph_ID) FROM Documents JOIN Paragraphs ON Paragraphs.Document_ID = Documents.Document_ID GROUP BY Document_ID ORDER BY Document_ID

index is 369
before:
SELECT Document_ID, Document_Name, COUNT(Paragraph_ID) FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Document_ID, Document_Name
after:
SELECT Document_ID, Document_Name, COUNT(Paragraph_ID)  FROM Documents  JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID  GROUP BY Document_ID, Document_Name

index is 370
before:
GROUP BY Documents.Document_ID, Documents.Document_Name
after:
SELECT Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID) AS Paragraph_Count FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID, Documents.Document_Name

index is 371
before:
SELECT DISTINCT Documents.Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID HAVING COUNT(Paragraphs.Paragraph_ID) >= 2
after:
SELECT DISTINCT Documents.Document_ID  FROM Documents  JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID  GROUP BY Documents.Document_ID  HAVING COUNT(Paragraphs.Paragraph_ID) >= 2

index is 372
before:
SELECT Documents.Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID HAVING count(*) >= 2
after:
SELECT Documents.Document_ID  FROM Documents  JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID  GROUP BY Documents.Document_ID  HAVING COUNT(*) >= 2

index is 373
before:
LIMIT 1
after:
SELECT Document_ID, Document_Name FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Document_ID, Document_Name ORDER BY COUNT(Paragraphs.Paragraph_ID) DESC LIMIT 1

index is 374
before:
LIMIT 1
after:
SELECT Documents.Document_ID, Documents.Document_Name FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID, Documents.Document_Name ORDER BY COUNT(Paragraphs.Paragraph_ID) DESC LIMIT 1

index is 375
before:
SELECT Document_ID FROM Documents LEFT JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Document_ID ORDER BY COUNT(Paragraph_ID) ASC LIMIT 1
after:
SELECT Documents.Document_ID  FROM Documents  LEFT JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID  GROUP BY Documents.Document_ID  ORDER BY COUNT(Paragraphs.Paragraph_ID) ASC  LIMIT 1

index is 376
before:
SELECT
after:
SELECT SELECT Documents.Document_ID FROM Documents JOIN (   SELECT Document_ID, COUNT(*) AS num_paragraphs   FROM Paragraphs   GROUP BY Document_ID ) AS paragraph_counts ON Documents.Document_ID = paragraph_counts.Document_ID ORDER BY num_paragraphs ASC LIMIT 1;

index is 377
before:
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 1 AND COUNT(*) <= 2
after:
SELECT Documents.Document_ID FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID GROUP BY Documents.Document_ID HAVING COUNT(Paragraphs.Paragraph_ID) >= 1 AND COUNT(Paragraphs.Paragraph_ID) <= 2

index is 378
before:
SELECT Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Document_ID HAVING COUNT(Paragraph_ID) BETWEEN 1 AND 2
after:
SELECT Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Document_ID HAVING COUNT(Paragraph_ID) BETWEEN 1 AND 2

index is 379
before:
SELECT T1.Document_ID FROM Paragraphs AS T1 WHERE T1.Paragraph_Text  IN  ('Brazil', 'Ireland')
after:
SELECT T1.Document_ID FROM Paragraphs AS T1 WHERE T1.Paragraph_Text IN ('Brazil', 'Ireland')

index is 380
before:
SELECT T1.Document_ID FROM Paragraphs AS T1 WHERE T1.Paragraph_Text  =  'Brazil' AND EXISTS (SELECT * FROM Paragraphs AS T2 WHERE T2.Document_ID  =  T1.Document_ID AND T2.Paragraph_Text  =  'Ireland')
after:
SELECT T1.Document_ID  FROM Paragraphs AS T1  WHERE T1.Paragraph_Text = 'Brazil'  AND EXISTS (   SELECT *    FROM Paragraphs AS T2    WHERE T2.Document_ID = T1.Document_ID    AND T2.Paragraph_Text = 'Ireland' )

index is 381
before:
SELECT COUNT(Teacher_ID) FROM teacher
after:
SELECT COUNT(*) FROM teacher

index is 382
before:
SELECT COUNT(*) FROM teacher
after:
SELECT COUNT(Teacher_ID) FROM teacher

index is 383
before:
SELECT Name FROM teacher ORDER BY Age ASC
after:
SELECT teacher.Name FROM teacher ORDER BY teacher.Age ASC

index is 384
before:
SELECT Name FROM teacher ORDER BY Age ASC
after:
SELECT teacher.Name  FROM teacher  ORDER BY teacher.Age ASC

index is 385
before:
SELECT Age, Hometown FROM teacher
after:
SELECT Age, Hometown FROM teacher

index is 386
before:
SELECT Age, Hometown FROM teacher
after:
SELECT Name, Age, Hometown FROM teacher

index is 387
before:
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District'
after:
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District'

index is 388
before:
SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District'
after:
SELECT Name  FROM teacher  WHERE Hometown <> 'Little Lever Urban District'

index is 389
before:
SELECT Name FROM teacher WHERE Age IN (32, 33)
after:
SELECT Name FROM teacher WHERE Age IN (32, 33)

index is 390
before:
SELECT Name FROM teacher WHERE Age IN (32, 33)
after:
SELECT teacher.Name  FROM teacher  WHERE teacher.Age IN (32, 33)

index is 391
before:
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
after:
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)

index is 392
before:
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)
after:
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher)

index is 393
before:
SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown
after:
SELECT Hometown, COUNT(*) FROM teacher GROUP BY Hometown

index is 394
before:
SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown
after:
SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown

index is 395
before:
SELECT Hometown, COUNT(*) as count FROM teacher GROUP BY Hometown ORDER BY count DESC LIMIT 1
after:
SELECT Hometown, COUNT(*) as count  FROM teacher  GROUP BY Hometown  ORDER BY count DESC  LIMIT 1

index is 396
before:
SELECT Hometown, COUNT(*) AS count FROM teacher GROUP BY Hometown ORDER BY count DESC LIMIT 1
after:
SELECT Hometown, COUNT(*) AS count FROM teacher GROUP BY Hometown ORDER BY count DESC LIMIT 1

index is 397
before:
SELECT Hometown FROM teacher GROUP BY Hometown HAVING count(*)  >=  2
after:
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(DISTINCT Teacher_ID) >= 2

index is 398
before:
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2
after:
SELECT Hometown  FROM teacher  GROUP BY Hometown  HAVING COUNT(DISTINCT Teacher_ID) >= 2

index is 399
before:
SELECT teacher.Name, course.Course FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course.Course_ID = course_arrange.Course_ID
after:
SELECT teacher.Name, course.Course FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course.Course_ID = course_arrange.Course_ID;

index is 400
before:
SELECT teacher.Name, course.Course FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course.Course_ID = course_arrange.Course_ID
after:
SELECT teacher.Name, course.Course FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course.Course_ID = course_arrange.Course_ID

index is 401
before:
SELECT T1.Name, T3.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC
after:
SELECT T1.Name, T3.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC

index is 402
before:
ORDER BY T1.Name ASC
after:
SELECT T1.Name, T3.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC

index is 403
before:
SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID WHERE T3.Course = 'math'
after:
SELECT T1.Name  FROM teacher AS T1  JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  JOIN course AS T3 ON T2.Course_ID = T3.Course_ID  WHERE T3.Course = 'math'

index is 404
before:
WHERE course.Course = 'math'
after:
SELECT Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = 'math'

index is 405
before:
SELECT T1.Name , count(DISTINCT T2.Course_ID) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Teacher_ID
after:
SELECT T1.Name, COUNT(DISTINCT T2.Course_ID) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name

index is 406
before:
SELECT Name, COUNT(Course_ID) FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY Name
after:
SELECT Name, COUNT(DISTINCT course_arrange.Course_ID) FROM teacher  JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID  GROUP BY teacher.Name

index is 407
before:
SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Teacher_ID HAVING count(DISTINCT T2.Course_ID) >= 2
after:
SELECT T1.Name  FROM teacher AS T1  JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name  HAVING COUNT(DISTINCT T2.Course_ID) >= 2

index is 408
before:
SELECT T1.Name FROM teacher AS T1 WHERE (SELECT count(*) FROM course_arrange WHERE course_arrange.Teacher_ID = T1.Teacher_ID) >= 2
after:
SELECT T1.Name  FROM teacher AS T1  INNER JOIN course_arrange AS CA ON T1.Teacher_ID = CA.Teacher_ID  GROUP BY T1.Teacher_ID  HAVING COUNT(DISTINCT CA.Course_ID) >= 2

index is 409
before:
SELECT T1.Name FROM teacher AS T1 WHERE T1.Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange)
after:
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS CA ON T1.Teacher_ID = CA.Teacher_ID WHERE CA.Teacher_ID IS NULL

index is 410
before:
SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T2.Teacher_ID IS NULL
after:
SELECT T1.Name  FROM teacher AS T1  LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  WHERE T2.Teacher_ID IS NULL

index is 411
before:
SELECT COUNT(*) FROM visitor WHERE Age < 30
after:
SELECT COUNT(*) FROM visitor WHERE Age < 30

index is 412
before:
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC
after:
SELECT visitor.Name  FROM visitor  WHERE visitor.Level_of_membership > 4  ORDER BY visitor.Level_of_membership DESC

index is 413
before:
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4
after:
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4

index is 414
before:
ORDER BY Age DESC
after:
SELECT visitor.Name, visitor.Level_of_membership FROM visitor WHERE visitor.Level_of_membership > 4 ORDER BY visitor.Age DESC

index is 415
before:
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)
after:
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)

index is 416
before:
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < 2009
after:
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < 2009

index is 417
before:
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'
after:
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'

index is 418
before:
SELECT Name FROM museum WHERE Num_of_Staff > (SELECT min(Num_of_Staff) FROM museum WHERE Open_Year > 2010)
after:
SELECT Name FROM museum WHERE Num_of_Staff > (   SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > 2010 )

index is 419
before:
SELECT ID, Name, Age FROM visitor WHERE ID IN (SELECT visitor_ID FROM visit GROUP BY visitor_ID HAVING COUNT(*) > 1)
after:
SELECT visitor.ID, visitor.Name, visitor.Age  FROM visitor  WHERE visitor.ID IN (   SELECT visit.visitor_ID    FROM visit    GROUP BY visit.visitor_ID    HAVING COUNT(*) > 1 )

index is 420
before:
```
after:
SELECT visitor.ID, visitor.Name, visitor.Level_of_membership FROM visitor JOIN visit ON visit.visitor_ID = visitor.ID GROUP BY visitor.ID ORDER BY SUM(visit.Total_spent) DESC LIMIT 1

index is 421
before:
SELECT museum.Museum_ID, museum.Name FROM museum LEFT JOIN visit ON museum.Museum_ID = visit.Museum_ID GROUP BY museum.Museum_ID, museum.Name ORDER BY count(visit.Museum_ID) DESC LIMIT 1
after:
SELECT museum.Museum_ID, museum.Name  FROM museum  LEFT JOIN visit ON museum.Museum_ID = visit.Museum_ID  GROUP BY museum.Museum_ID, museum.Name  ORDER BY COUNT(visit.Museum_ID) DESC  LIMIT 1

index is 422
before:
SELECT Name FROM museum WHERE Museum_ID NOT IN (SELECT Museum_ID FROM visit)
after:
SELECT Name FROM museum WHERE Museum_ID NOT IN (   SELECT Museum_ID   FROM visit )

index is 423
before:
SELECT T1.Name, T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID ORDER BY T2.Num_of_Ticket DESC LIMIT 1
after:
SELECT T1.Name, T1.Age  FROM visitor AS T1  JOIN visit AS T2 ON T1.ID = T2.visitor_ID  ORDER BY T2.Num_of_Ticket DESC  LIMIT 1

index is 424
before:
SELECT AVG(Num_of_Ticket), MAX(Num_of_Ticket) FROM visit
after:
SELECT AVG(Num_of_Ticket), MAX(Num_of_Ticket) FROM visit;

index is 425
before:
SELECT
after:
SELECT SELECT SUM(visit.Total_spent) AS Total_Expense FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID WHERE visitor.Level_of_membership = 1;

index is 426
before:
SELECT visitor.Name FROM visitor WHERE visitor.ID IN (SELECT visit.visitor_ID FROM visit WHERE visit.Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year < 2009) INTERSECT SELECT visit.visitor_ID FROM visit WHERE visit.Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year > 2011))
after:
SELECT visitor.Name  FROM visitor  WHERE visitor.ID IN (     SELECT visit.visitor_ID      FROM visit      WHERE visit.Museum_ID IN (         SELECT museum.Museum_ID          FROM museum          WHERE museum.Open_Year < 2009     )      INTERSECT      SELECT visit.visitor_ID      FROM visit      WHERE visit.Museum_ID IN (         SELECT museum.Museum_ID          FROM museum          WHERE museum.Open_Year > 2011     ) )

index is 427
before:
SELECT COUNT(DISTINCT ID) FROM visitor WHERE ID NOT IN (SELECT visitor_ID FROM visit WHERE Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year > 2010))
after:
SELECT COUNT(DISTINCT visitor.ID)  FROM visitor  WHERE visitor.ID NOT IN (   SELECT visit.visitor_ID    FROM visit    JOIN museum ON visit.Museum_ID = museum.Museum_ID   WHERE museum.Open_Year > 2010 )

index is 428
before:
SELECT COUNT(*) FROM museum WHERE Open_Year > 2013 OR Open_Year < 2008
after:
SELECT COUNT(*) FROM museum WHERE Open_Year > 2013 OR Open_Year < 2008

index is 429
before:
SELECT COUNT(*) FROM players
after:
SELECT COUNT(player_id) FROM players

index is 430
before:
SELECT COUNT(*) FROM players
after:
SELECT COUNT(DISTINCT player_id) FROM players

index is 431
before:
SELECT COUNT(*) FROM matches
after:
SELECT COUNT(*) FROM matches;

index is 432
before:
SELECT COUNT(*) FROM matches
after:
SELECT COUNT(*) FROM matches

index is 433
before:
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'
after:
SELECT first_name, birth_date  FROM players  WHERE country_code = 'USA'

index is 434
before:
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'
after:
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'

index is 435
before:
SELECT AVG(loser_age) AS avg_loser_age, AVG(winner_age) AS avg_winner_age FROM matches
after:
SELECT AVG(loser_age) AS avg_loser_age, AVG(winner_age) AS avg_winner_age FROM matches JOIN players ON matches.winner_id = players.player_id JOIN players AS p2 ON matches.loser_id = p2.player_id

index is 436
before:
SELECT
after:
SELECT SELECT AVG(loser_age) AS average_loser_age, AVG(winner_age) AS average_winner_age FROM matches

index is 437
before:
SELECT avg(rankings.ranking) FROM rankings JOIN matches ON rankings.player_id = matches.winner_id
after:
SELECT avg(rankings.ranking) AS average_rank FROM rankings JOIN matches ON rankings.player_id = matches.winner_id GROUP BY matches.winner_id

index is 438
before:
SELECT AVG(rankings.ranking) FROM rankings JOIN matches ON rankings.player_id = matches.winner_id
after:
SELECT AVG(rankings.ranking) AS average_rank FROM rankings JOIN matches ON rankings.player_id = matches.winner_id GROUP BY rankings.player_id

index is 439
before:
SELECT MAX(loser_rank) FROM matches JOIN players ON matches.loser_id = players.player_id
after:
SELECT

index is 440
before:
SELECT MAX(loser_rank) FROM matches
after:
SELECT MAX(loser_rank) AS best_rank_of_losers FROM matches

index is 441
before:
SELECT COUNT(DISTINCT country_code) FROM players
after:
SELECT COUNT(DISTINCT country_code) FROM players

index is 442
before:
SELECT COUNT(DISTINCT country_code) FROM players
after:
SELECT COUNT(DISTINCT country_code) AS distinct_countries FROM players

index is 443
before:
SELECT count(DISTINCT T1.last_name) FROM players AS T1 JOIN matches AS T2 ON T2.loser_id = T1.player_id
after:
SELECT COUNT(DISTINCT T1.loser_name) FROM players AS T1 JOIN matches AS T2 ON T2.loser_id = T1.player_id

index is 444
before:
SELECT COUNT(DISTINCT loser_name) FROM matches
after:
SELECT COUNT(DISTINCT loser_name) FROM matches

index is 445
before:
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10
after:
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10

index is 446
before:
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10
after:
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10

index is 447
before:
SELECT T1.first_name, T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.year = 2013 INTERSECT SELECT T1.first_name, T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.year = 2016
after:
SELECT T1.first_name, T1.last_name  FROM players AS T1  JOIN matches AS T2 ON T1.player_id = T2.winner_id  WHERE T2.year = 2013  INTERSECT  SELECT T1.first_name, T1.last_name  FROM players AS T1  JOIN matches AS T2 ON T1.player_id = T2.winner_id  WHERE T2.year = 2016

index is 448
before:
SELECT DISTINCT first_name, last_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.year = 2013 AND players.player_id IN (SELECT winner_id FROM matches WHERE year = 2016)
after:
SELECT DISTINCT players.first_name, players.last_name  FROM players  JOIN matches ON players.player_id = matches.winner_id  WHERE matches.year = 2013  AND players.player_id IN (SELECT winner_id FROM matches WHERE year = 2016)

index is 449
before:
SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2016
after:
SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2016

index is 450
before:
SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2016
after:
SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2016

index is 451
before:
SELECT T1.country_code, T1.first_name FROM players AS T1 WHERE T1.player_id IN (SELECT T2.winner_id FROM matches AS T2 WHERE T2.tourney_name = 'WTA Championships') AND T1.player_id IN (SELECT T3.winner_id FROM matches AS T3 WHERE T3.tourney_name = 'Australian Open')
after:
SELECT T1.country_code, T1.first_name  FROM players AS T1  WHERE T1.player_id IN (     SELECT T2.winner_id      FROM matches AS T2      WHERE T2.tourney_name = 'WTA Championships' AND T2.tourney_level = 'D'      INTERSECT      SELECT T3.winner_id      FROM matches AS T3      WHERE T3.tourney_name = 'Australian Open' AND T3.tourney_level = 'G' )

index is 452
before:
SELECT
after:
SELECT SELECT players.first_name, players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id JOIN tournaments ON matches.tourney_id = tournaments.tourney_id WHERE tournaments.tourney_name = 'WTA Championships'    OR tournaments.tourney_name = 'Australian Open' GROUP BY players.player_id HAVING COUNT(DISTINCT tournaments.tourney_name) = 2

index is 453
before:
SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1
after:
SELECT first_name, country_code  FROM players  ORDER BY birth_date ASC  LIMIT 1

index is 454
before:
SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1
after:
SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1

index is 455
before:
SELECT first_name, last_name FROM players ORDER BY birth_date
after:
SELECT players.first_name, players.last_name  FROM players  ORDER BY players.birth_date

index is 456
before:
SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM players ORDER BY birth_date
after:
SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM players ORDER BY birth_date

index is 457
before:
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date
after:
SELECT first_name, last_name  FROM players  WHERE hand = 'L'  ORDER BY birth_date;

index is 458
before:
ORDER BY birth_date
after:
SELECT CONCAT(first_name, ' ', last_name) AS full_name  FROM players  WHERE hand = 'left'  ORDER BY birth_date;

index is 459
before:
LIMIT 1
after:
SELECT players.first_name, players.country_code FROM players JOIN rankings ON rankings.player_id = players.player_id GROUP BY players.player_id ORDER BY COUNT(rankings.tours) DESC LIMIT 1

index is 460
before:
SELECT first_name, country_code FROM players JOIN rankings ON players.player_id = rankings.player_id ORDER BY tours DESC LIMIT 1
after:
SELECT players.first_name, players.country_code  FROM players  JOIN rankings ON players.player_id = rankings.player_id  GROUP BY players.player_id  ORDER BY COUNT(rankings.tours) DESC  LIMIT 1

index is 461
before:
SELECT year FROM matches GROUP BY year ORDER BY count(*) DESC LIMIT 1
after:
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1

index is 462
before:
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1
after:
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1

index is 463
before:
LIMIT 1
after:
SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) AS total_rank_points FROM players JOIN matches ON matches.winner_id = players.player_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT(matches.match_num) DESC LIMIT 1

index is 464
before:
SELECT
after:
SELECT SELECT winner_name, SUM(winner_rank_points) AS total_rank_points FROM matches JOIN players ON matches.winner_id = players.player_id GROUP BY winner_name ORDER BY total_rank_points DESC LIMIT 1;

index is 465
before:
SELECT players.first_name, players.last_name FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON matches.winner_id = players.player_id WHERE matches.tourney_name = 'Australian Open' ORDER BY rankings.ranking_points DESC LIMIT 1
after:
SELECT players.first_name, players.last_name  FROM players  JOIN rankings ON players.player_id = rankings.player_id  JOIN matches ON matches.winner_id = players.player_id  WHERE matches.tourney_name = 'Australian Open'  GROUP BY players.first_name, players.last_name  ORDER BY rankings.ranking_points DESC  LIMIT 1

index is 466
before:
SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id JOIN tournaments ON matches.tourney_id = tournaments.tourney_id WHERE tournaments.tourney_name = 'Australian Open' ORDER BY rankings.ranking_points DESC LIMIT 1
after:
SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id JOIN tournaments ON matches.tourney_id = tournaments.tourney_id WHERE tournaments.tourney_name = 'Australian Open' GROUP BY players.player_id ORDER BY rankings.ranking_points DESC LIMIT 1

index is 467
before:
WHERE T1.player_id = T2.loser_id OR T1.player_id = T2.winner_id
after:
SELECT T1.first_name, T1.last_name FROM players AS T1 JOIN matches AS T2 ON T2.minutes = (SELECT MAX(minutes) FROM matches) WHERE T1.player_id = T2.loser_id OR T1.player_id = T2.winner_id

index is 468
before:
SELECT T1.first_name, T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id OR T1.player_id = T2.loser_id WHERE T2.minutes = (SELECT MAX(minutes) FROM matches)
after:
SELECT T1.first_name AS winner_first_name, T1.last_name AS winner_last_name, T2.loser_name FROM matches AS T2 JOIN players AS T1 ON T1.player_id = T2.winner_id JOIN players AS T2 ON T2.player_id = T2.loser_id WHERE T2.minutes = (SELECT MAX(minutes) FROM matches)

index is 469
before:
SELECT players.first_name, AVG(rankings.ranking) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name
after:
SELECT players.first_name, AVG(rankings.ranking)  FROM players  JOIN rankings ON players.player_id = rankings.player_id  GROUP BY players.player_id, players.first_name

index is 470
before:
SELECT players.first_name, avg(rankings.ranking) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name
after:
SELECT players.first_name, avg(rankings.ranking) AS average_ranking  FROM players  JOIN rankings ON players.player_id = rankings.player_id  GROUP BY players.first_name

index is 471
before:
SELECT sum(ranking_points), first_name FROM rankings JOIN players ON rankings.player_id = players.player_id GROUP BY first_name
after:
SELECT SUM(rankings.ranking_points) AS total_ranking_points, players.first_name FROM rankings JOIN players ON rankings.player_id = players.player_id GROUP BY players.player_id, players.first_name

index is 472
before:
SELECT first_name, sum(ranking_points) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY first_name
after:
SELECT first_name, SUM(ranking_points) AS total_ranking_points  FROM players  JOIN rankings ON players.player_id = rankings.player_id  GROUP BY players.player_id, players.first_name

index is 473
before:
GROUP BY country_code;
after:
SELECT country_code, COUNT(DISTINCT player_id) AS player_count FROM players GROUP BY country_code;

index is 474
before:
SELECT country_code, COUNT(*) FROM players GROUP BY country_code
after:
SELECT country_code, COUNT(DISTINCT player_id) AS player_count FROM players GROUP BY country_code

index is 475
before:
SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
after:
SELECT country_code  FROM players  GROUP BY country_code  ORDER BY COUNT(*) DESC  LIMIT 1

index is 476
before:
SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
after:
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1

index is 477
before:
SELECT country_code FROM players GROUP BY country_code HAVING count(player_id) > 50
after:
SELECT country_code  FROM players  GROUP BY country_code  HAVING COUNT(player_id) > 50

index is 478
before:
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
after:
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50

index is 479
before:
SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date
after:
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date

index is 480
before:
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date
after:
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date

index is 481
before:
SELECT year, COUNT(*) AS num_matches FROM matches GROUP BY year
after:
SELECT year, COUNT(*) AS num_matches  FROM matches  GROUP BY year

index is 482
before:
SELECT year, COUNT(*) FROM matches GROUP BY year
after:
SELECT year, COUNT(*)  FROM matches  GROUP BY year

index is 483
before:
This query retrieves the first name, last name, and ranking of the three youngest winners across all matches by joining the `players`, `rankings`, and `matches` tables. It orders the results by birth date in ascending order and limits the output to three rows.
after:
SELECT T1.first_name, T1.last_name, T2.ranking FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id JOIN matches AS T3 ON T3.winner_id = T1.player_id ORDER BY T1.birth_date ASC LIMIT 3

index is 484
before:
SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON matches.winner_id = players.player_id ORDER BY players.birth_date DESC LIMIT 3
after:
SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON matches.winner_id = players.player_id ORDER BY players.birth_date ASC LIMIT 3

index is 485
before:
SELECT COUNT(DISTINCT T1.winner_id) FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'WTA Championships' AND T1.hand = 'L'
after:
SELECT COUNT(DISTINCT T2.winner_id)  FROM players AS T1  JOIN matches AS T2 ON T1.player_id = T2.winner_id  WHERE T2.tourney_name = 'WTA Championships'  AND T1.hand = 'L'

index is 486
before:
SELECT COUNT(DISTINCT players.player_id) FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'WTA Championships' AND players.hand = 'Left'
after:
SELECT COUNT(DISTINCT players.player_id)  FROM players  JOIN matches ON players.player_id = matches.winner_id  WHERE matches.tourney_name = 'WTA Championships'  AND players.hand = 'Left'

index is 487
before:
SELECT
after:
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN matches ON matches.winner_id = players.player_id JOIN rankings ON rankings.player_id = players.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings)

index is 488
before:
This query selects the first name, country code, and birth date of the player with the highest winner rank points across all matches. It joins the `players` and `matches` tables on the `winner_id` column, orders the results by `winner_rank_points` in descending order, and limits the result to 1 row.
after:
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN (     SELECT winner_id, MAX(winner_rank_points) AS max_rank_points     FROM matches     GROUP BY winner_id ) AS T2 ON players.player_id = T2.winner_id WHERE T2.max_rank_points = (     SELECT MAX(winner_rank_points)      FROM matches ) LIMIT 1

index is 489
before:
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand
after:
SELECT hand, COUNT(DISTINCT player_id) AS player_count FROM players GROUP BY hand

index is 490
before:
SELECT hand, COUNT(*) FROM players GROUP BY hand
after:
SELECT hand, COUNT(DISTINCT player_id) AS player_count FROM players GROUP BY hand

index is 491
before:
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured'
after:
SELECT COUNT(id) FROM ship WHERE disposition_of_ship = 'Captured'

index is 492
before:
SELECT name, tonnage FROM ship ORDER BY name DESC
after:
SELECT name, tonnage FROM ship ORDER BY name DESC

index is 493
before:
SELECT name, date, result FROM battle
after:
SELECT name, date, result FROM battle

index is 494
before:
SELECT MAX(killed), MIN(killed) FROM death JOIN ship ON death.caused_by_ship_id = ship.id
after:
SELECT MAX(death.killed), MIN(death.killed) FROM death JOIN ship ON death.caused_by_ship_id = ship.id

index is 495
before:
SELECT avg(injured) FROM death
after:
SELECT avg(injured) FROM death

index is 496
before:
SELECT note, killed, injured FROM death JOIN ship ON death.caused_by_ship_id = ship.id WHERE ship.tonnage = 't'
after:
SELECT note, killed, injured FROM death JOIN ship ON death.caused_by_ship_id = ship.id WHERE ship.tonnage = 't'

index is 497
before:
SELECT name, result FROM battle WHERE bulgarian_commander <> 'Boril'
after:
SELECT name, result FROM battle WHERE bulgarian_commander <> 'Boril'

index is 498
before:
SELECT DISTINCT battle.id, battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.ship_type = 'Brig'
after:
SELECT battle.id, battle.name FROM battle  JOIN ship ON battle.id = ship.lost_in_battle  WHERE ship.ship_type = 'Brig'

index is 499
before:
SELECT battle.id, battle.name FROM battle JOIN death ON battle.id = death.caused_by_ship_id GROUP BY battle.id, battle.name HAVING sum(death.killed) > 10
after:
SELECT battle.id, battle.name  FROM battle  JOIN ship ON ship.lost_in_battle = battle.id  JOIN death ON death.caused_by_ship_id = ship.id  GROUP BY battle.id, battle.name  HAVING SUM(death.killed) > 10

index is 500
before:
LIMIT 1
after:
SELECT ship.id, ship.name  FROM ship  JOIN death ON death.caused_by_ship_id = ship.id  GROUP BY ship.id, ship.name  ORDER BY SUM(death.injured) DESC  LIMIT 1

index is 501
before:
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
after:
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'

index is 502
before:
SELECT COUNT(DISTINCT result) FROM battle
after:
SELECT COUNT(DISTINCT result) FROM battle

index is 503
before:
SELECT count(*) FROM battle WHERE id NOT IN (SELECT DISTINCT battle.id FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.tonnage = '225')
after:
SELECT count(*) FROM battle WHERE id NOT IN (SELECT DISTINCT battle.id FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.tonnage = '225')

index is 504
before:
SELECT
after:
SELECT SELECT battle.name, battle.date FROM battle JOIN ship ON ship.lost_in_battle = battle.id WHERE ship.name = 'Lettice' OR ship.name = 'HMS Atalanta'

index is 505
before:
SELECT name, result, bulgarian_commander FROM battle WHERE id NOT IN (SELECT battle.id FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.location = 'English Channel')
after:
SELECT name, result, bulgarian_commander FROM battle WHERE id NOT IN (     SELECT battle.id     FROM battle     JOIN ship ON battle.id = ship.lost_in_battle     WHERE ship.location = 'English Channel' )

index is 506
before:
SELECT note FROM death WHERE note LIKE '%East%'
after:
SELECT note  FROM death  WHERE note LIKE '%East%'

index is 507
before:
SELECT line_1, line_2 FROM Addresses
after:
SELECT line_1, line_2 FROM Addresses

index is 508
before:
SELECT line_1, line_2 FROM Addresses
after:
SELECT line_1, line_2 FROM Addresses

index is 509
before:
SELECT COUNT(*) FROM Courses
after:
SELECT COUNT(course_id) FROM Courses

index is 510
before:
SELECT COUNT(course_id) FROM Courses
after:
SELECT COUNT(course_id) FROM Courses

index is 511
before:
SELECT course_description FROM Courses WHERE course_name = 'Math'
after:
SELECT course_description FROM Courses WHERE course_name = 'Math'

index is 512
before:
SELECT course_description FROM Courses WHERE course_name LIKE '%Math%'
after:
SELECT Courses.course_description  FROM Courses  WHERE Courses.course_name LIKE '%Math%'

index is 513
before:
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
after:
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'

index is 514
before:
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
after:
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'

index is 515
before:
SELECT T1.department_name, T1.department_id FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_name, T1.department_id ORDER BY count(T2.degree_program_id) DESC LIMIT 1
after:
SELECT T1.department_name, T1.department_id  FROM Departments AS T1  JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id  GROUP BY T1.department_name, T1.department_id  ORDER BY COUNT(T2.degree_program_id) DESC  LIMIT 1

index is 516
before:
This query retrieves the department_name and department_id from the Departments table and joins it with the Degree_Programs table using the department_id foreign key. It then groups the result by department_name and department_id, and orders the groups in descending order based on the count of degree_program_id. Finally, it selects the first row using the LIMIT 1 clause to get the department with the highest number of degrees.
after:
SELECT department_name, department_id FROM Departments JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id GROUP BY department_name, department_id ORDER BY COUNT(Degree_Programs.degree_program_id) DESC LIMIT 1;

index is 517
before:
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs
after:
SELECT COUNT(DISTINCT department_id) FROM Departments

index is 518
before:
SELECT COUNT(DISTINCT T1.department_id) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id
after:
SELECT COUNT(DISTINCT T2.department_id) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id

index is 519
before:
SELECT COUNT(DISTINCT degree_program_id) FROM Degree_Programs
after:
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs

index is 520
before:
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs JOIN Departments ON Degree_Programs.department_id = Departments.department_id
after:
SELECT COUNT(DISTINCT Degree_Programs.degree_summary_name) FROM Degree_Programs JOIN Departments ON Degree_Programs.department_id = Departments.department_id

index is 521
before:
SELECT COUNT(Degree_Programs.degree_program_id) FROM Degree_Programs JOIN Departments ON Degree_Programs.department_id = Departments.department_id WHERE Departments.department_name = 'engineering'
after:
SELECT COUNT(Degree_Programs.degree_program_id)  FROM Degree_Programs  JOIN Departments ON Degree_Programs.department_id = Departments.department_id  WHERE Departments.department_name = 'engineering'

index is 522
before:
SELECT count(T1.degree_program_id) FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'engineering'
after:
SELECT COUNT(T1.degree_program_id) FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'engineering'

index is 523
before:
SELECT section_name, section_description FROM Sections
after:
SELECT section_name, section_description  FROM Sections

index is 524
before:
SELECT section_name, section_description FROM Sections
after:
SELECT section_name, section_description  FROM Sections

index is 525
before:
SELECT course_name, course_id FROM Courses WHERE course_id IN (SELECT course_id FROM Sections GROUP BY course_id HAVING count(*) <= 2)
after:
SELECT course_name, course_id FROM Courses WHERE course_id IN (   SELECT course_id   FROM Sections   GROUP BY course_id   HAVING COUNT(*) <= 2 )

index is 526
before:
SELECT course_name, course_id FROM Courses WHERE course_id NOT IN (SELECT course_id FROM Sections GROUP BY course_id HAVING COUNT(*) >= 2)
after:
SELECT course_name, course_id  FROM Courses  WHERE course_id NOT IN (   SELECT course_id    FROM Sections    GROUP BY course_id    HAVING COUNT(*) >= 2 )

index is 527
before:
SELECT section_name FROM Sections ORDER BY section_name DESC
after:
SELECT section_name  FROM Sections  ORDER BY section_name DESC

index is 528
before:
SELECT section_name FROM Sections ORDER BY section_name DESC
after:
SELECT section_name FROM Sections ORDER BY section_name DESC

index is 529
before:
LIMIT 1
after:
SELECT Semesters.semester_id, Semesters.semester_name FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id GROUP BY Semesters.semester_id, Semesters.semester_name ORDER BY COUNT(Student_Enrolment.student_enrolment_id) DESC LIMIT 1

index is 530
before:
SELECT Semesters.semester_id, Semesters.semester_name FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id  =  Student_Enrolment.semester_id GROUP BY Student_Enrolment.semester_id HAVING COUNT(*)  = (SELECT MAX(cnt) FROM (SELECT Student_Enrolment.semester_id, COUNT(*) AS cnt FROM Student_Enrolment GROUP BY Student_Enrolment.semester_id) AS T1)
after:
SELECT Semesters.semester_id, Semesters.semester_name FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id GROUP BY Semesters.semester_id HAVING COUNT(*) = (     SELECT MAX(cnt)     FROM (         SELECT Student_Enrolment.semester_id, COUNT(*) AS cnt         FROM Student_Enrolment         GROUP BY Student_Enrolment.semester_id     ) AS T1 )

index is 531
before:
SELECT department_description FROM Departments WHERE department_name LIKE '%the computer%'
after:
SELECT department_description FROM Departments WHERE department_name LIKE '%the computer%'

index is 532
before:
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
after:
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'

index is 533
before:
SELECT
after:
SELECT SELECT Students.first_name, Students.middle_name, Students.last_name, Students.student_id FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id GROUP BY Students.student_id HAVING COUNT(DISTINCT Student_Enrolment.degree_program_id) = 2 AND COUNT(DISTINCT Student_Enrolment.semester_id) = 1;

index is 534
before:
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id WHERE T2.degree_program_id IN (SELECT degree_program_id FROM Student_Enrolment GROUP BY student_id HAVING COUNT(DISTINCT degree_program_id) = 2) AND T2.semester_id = [semester_id]
after:
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name  FROM Students AS T1  JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id  WHERE T2.degree_program_id IN (     SELECT degree_program_id      FROM Student_Enrolment      WHERE T2.semester_id = [semester_id]     GROUP BY student_id      HAVING COUNT(DISTINCT degree_program_id) = 2 )

index is 535
before:
SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name = 'Bachelor'
after:
SELECT Students.first_name, Students.middle_name, Students.last_name  FROM Students  JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id  JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id  WHERE Degree_Programs.degree_summary_name = 'Bachelor'

index is 536
before:
SELECT first_name, middle_name, last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name = 'Bachelors'
after:
SELECT first_name, middle_name, last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name = 'Bachelors'

index is 537
before:
SELECT Degree_Programs.degree_summary_name, count(Student_Enrolment.student_enrolment_id) as num_students FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id GROUP BY Degree_Programs.degree_summary_name ORDER BY num_students DESC LIMIT 1
after:
SELECT Degree_Programs.degree_summary_name, COUNT(Student_Enrolment.student_enrolment_id) AS num_students FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id GROUP BY Degree_Programs.degree_summary_name ORDER BY num_students DESC LIMIT 1

index is 538
before:
SELECT
after:
SELECT SELECT Degree_Programs.degree_summary_name, COUNT(Student_Enrolment.student_enrolment_id) AS enrolment_count FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id GROUP BY Degree_Programs.degree_summary_name ORDER BY enrolment_count DESC LIMIT 1;

index is 539
before:
LIMIT 1
after:
SELECT Degree_Programs.degree_program_id, Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id GROUP BY Degree_Programs.degree_program_id, Degree_Programs.degree_summary_name ORDER BY COUNT(Student_Enrolment.student_enrolment_id) DESC LIMIT 1

index is 540
before:
```
after:
SELECT Degree_Programs.degree_program_id, Degree_Programs.degree_summary_description FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id GROUP BY Degree_Programs.degree_program_id ORDER BY COUNT(Student_Enrolment.student_id) DESC LIMIT 1

index is 541
before:
LIMIT 1
after:
SELECT Students.student_id, Students.first_name, Students.middle_name, Students.last_name, COUNT(Student_Enrolment.student_enrolment_id) AS enrollment_count FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id GROUP BY Students.student_id, Students.first_name, Students.middle_name, Students.last_name ORDER BY enrollment_count DESC LIMIT 1

index is 542
before:
LIMIT 1
after:
SELECT first_name, middle_name, last_name, student_id, COUNT(student_enrolment_id) FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id GROUP BY first_name, middle_name, last_name, student_id ORDER BY COUNT(student_enrolment_id) DESC LIMIT 1

index is 543
before:
SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT DISTINCT semester_id FROM Student_Enrolment)
after:
SELECT Semesters.semester_name FROM Semesters LEFT JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id WHERE Student_Enrolment.student_enrolment_id IS NULL;

index is 544
before:
SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT DISTINCT semester_id FROM Student_Enrolment)
after:
SELECT semester_name FROM Semesters LEFT JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id WHERE Student_Enrolment.student_enrolment_id IS NULL

index is 545
before:
SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
after:
SELECT DISTINCT T1.course_name  FROM Courses AS T1  JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id JOIN Student_Enrolment AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id

index is 546
before:
SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T2.course_id = T1.course_id
after:
SELECT T1.course_name  FROM Courses AS T1  JOIN Student_Enrolment_Courses AS T2 ON T2.course_id = T1.course_id JOIN Student_Enrolment AS T3 ON T3.student_enrolment_id = T2.student_enrolment_id GROUP BY T1.course_name

index is 547
before:
SELECT
after:
SELECT SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id GROUP BY Courses.course_id ORDER BY COUNT(Student_Enrolment_Courses.student_enrolment_id) DESC LIMIT 1;

index is 548
before:
SELECT course_name FROM Courses WHERE course_id = (SELECT course_id FROM Student_Enrolment_Courses GROUP BY course_id ORDER BY count(*) DESC LIMIT 1)
after:
SELECT course_name FROM Courses WHERE course_id = (   SELECT course_id   FROM Student_Enrolment_Courses   GROUP BY course_id   ORDER BY COUNT(*) DESC   LIMIT 1 )

index is 549
before:
SELECT last_name FROM students WHERE current_address_id IN (SELECT address_id FROM addresses WHERE state_province_county = 'North Carolina') AND student_id NOT IN (SELECT student_id FROM Student_Enrolment)
after:
SELECT last_name  FROM Students  WHERE current_address_id IN (     SELECT address_id      FROM Addresses      WHERE state_province_county = 'North Carolina' )  AND student_id NOT IN (     SELECT student_id      FROM Student_Enrolment     WHERE degree_program_id IS NOT NULL )

index is 550
before:
SELECT last_name FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE state_province_county = 'North Carolina') AND student_id NOT IN (SELECT student_id FROM Student_Enrolment WHERE degree_program_id IS NOT NULL)
after:
SELECT last_name  FROM Students  WHERE current_address_id IN      (SELECT address_id       FROM Addresses       WHERE state_province_county = 'North Carolina')       AND student_id NOT IN       (SELECT student_id        FROM Student_Enrolment        WHERE degree_program_id IS NOT NULL)

index is 551
before:
SELECT transcript_date, transcript_id FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id HAVING COUNT(*) >= 2)
after:
SELECT transcript_date, transcript_id  FROM Transcripts  WHERE transcript_id IN (     SELECT transcript_id      FROM Transcript_Contents      GROUP BY transcript_id      HAVING COUNT(*) >= 2 )

index is 552
before:
SELECT T1.transcript_date ,  T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id JOIN Student_Enrolment_Courses AS T3 ON T2.student_course_id = T3.student_course_id GROUP BY T1.transcript_id HAVING COUNT(*) >= 2.
after:
SELECT T1.transcript_date, T1.transcript_id  FROM Transcripts AS T1  JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  JOIN Student_Enrolment_Courses AS T3 ON T2.student_course_id = T3.student_course_id  GROUP BY T1.transcript_date, T1.transcript_id  HAVING COUNT(DISTINCT T3.course_id) >= 2.

index is 553
before:
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
after:
SELECT cell_mobile_number  FROM Students  WHERE first_name = 'Timmothy' AND last_name = 'Ward'

index is 554
before:
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
after:
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'

index is 555
before:
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered LIMIT 1
after:
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered LIMIT 1

index is 556
before:
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
after:
SELECT first_name, middle_name, last_name  FROM Students  ORDER BY date_first_registered ASC  LIMIT 1

index is 557
before:
SELECT first_name, middle_name, last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Transcripts ON Student_Enrolment.student_enrolment_id = Transcripts.student_enrolment_id ORDER BY Transcripts.transcript_date ASC LIMIT 1
after:
SELECT first_name, middle_name, last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Transcripts ON Student_Enrolment.student_enrolment_id = Transcripts.student_enrolment_id ORDER BY Transcripts.transcript_date ASC LIMIT 1

index is 558
before:
SELECT first_name ,  middle_name , last_name FROM Students WHERE student_id IN (SELECT Student_Enrolment.student_id FROM Transcript_Contents JOIN Transcripts ON Transcript_Contents.transcript_id = Transcripts.transcript_id JOIN Student_Enrolment_Courses ON Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id JOIN Student_Enrolment ON Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id WHERE Transcripts.transcript_date = (SELECT min(transcript_date) FROM Transcripts))
after:
SELECT first_name, middle_name, last_name FROM Students WHERE student_id IN (   SELECT se.student_id   FROM Student_Enrolment se   JOIN Transcript_Contents tc ON se.student_enrolment_id = tc.student_course_id   JOIN Transcripts t ON tc.transcript_id = t.transcript_id   WHERE t.transcript_date = (     SELECT MIN(transcript_date)     FROM Transcripts   ) )

index is 559
before:
SELECT first_name FROM Students WHERE current_address_id <> permanent_address_id
after:
SELECT Students.first_name FROM Students WHERE Students.current_address_id <> Students.permanent_address_id

index is 560
before:
SELECT first_name FROM Students WHERE permanent_address_id != current_address_id
after:
SELECT first_name  FROM Students  WHERE permanent_address_id <> current_address_id

index is 561
before:
SELECT
after:
SELECT SELECT A.address_id, A.line_1, A.line_2, A.line_3 FROM Addresses A JOIN Students S ON A.address_id = S.current_address_id GROUP BY A.address_id ORDER BY COUNT(S.student_id) DESC LIMIT 1;

index is 562
before:
LIMIT 1)
after:
SELECT address_id, line_1, line_2  FROM Addresses  WHERE address_id = (SELECT current_address_id                      FROM Students                      GROUP BY current_address_id                      ORDER BY COUNT(*) DESC                      LIMIT 1)

index is 563
before:
SELECT AVG(transcript_date) FROM Transcripts
after:
SELECT AVG(transcript_date) AS average_transcript_date FROM Transcripts

index is 564
before:
SELECT AVG(transcript_date) FROM Transcripts
after:
SELECT AVG(transcript_date) AS average_transcript_date FROM Transcripts

index is 565
before:
SELECT transcript_date, other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
after:
SELECT transcript_date, other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

index is 566
before:
SELECT transcript_date, other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
after:
SELECT transcript_date, other_details  FROM Transcripts  ORDER BY transcript_date ASC  LIMIT 1

index is 567
before:
SELECT COUNT(*) FROM Transcripts
after:
SELECT COUNT(transcript_id) FROM Transcripts

index is 568
before:
SELECT COUNT(transcript_id) FROM Transcripts
after:
SELECT COUNT(DISTINCT transcript_id) FROM Transcripts

index is 569
before:
SELECT MAX(transcript_date) FROM Transcripts
after:
SELECT MAX(transcript_date) AS last_transcript_release_date FROM Transcripts

index is 570
before:
SELECT MAX(transcript_date) FROM Transcripts
after:
SELECT MAX(transcript_date) AS last_transcript_date FROM Transcripts

index is 571
before:
SELECT T2.student_enrolment_id, COUNT(T1.transcript_id) AS count FROM Transcript_Contents AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id GROUP BY T2.student_enrolment_id ORDER BY count DESC LIMIT 1"
after:
SELECT T2.student_enrolment_id, COUNT(DISTINCT T1.transcript_id) AS count  FROM Transcript_Contents AS T1  JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id  GROUP BY T2.student_enrolment_id  ORDER BY count DESC  LIMIT 1

index is 572
before:
SELECT COUNT(T1.transcript_id), T2.student_enrolment_id FROM Transcript_Contents AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id GROUP BY T2.student_enrolment_id ORDER BY COUNT(T1.transcript_id) DESC LIMIT 1
after:
SELECT COUNT(T1.transcript_id) AS max_course_count, T2.student_enrolment_id FROM Transcript_Contents AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id = T2.student_course_id GROUP BY T2.student_enrolment_id ORDER BY max_course_count DESC LIMIT 1

index is 573
before:
SELECT T1.transcript_date, T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) LIMIT 1
after:
SELECT T1.transcript_date, T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_date, T1.transcript_id ORDER BY COUNT(*) ASC LIMIT 1

index is 574
before:
SELECT transcript_date, transcript_id FROM Transcripts JOIN Transcript_Contents ON Transcripts.transcript_id = Transcript_Contents.transcript_id GROUP BY Transcripts.transcript_id ORDER BY count(student_course_id) ASC LIMIT 1
after:
SELECT transcripts.transcript_date, transcripts.transcript_id FROM transcripts JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id GROUP BY transcripts.transcript_id ORDER BY COUNT(transcript_contents.student_course_id) ASC LIMIT 1

index is 575
before:
SELECT S1.semester_name FROM Semesters AS S1 JOIN Student_Enrolment AS SE1 ON S1.semester_id = SE1.semester_id JOIN Degree_Programs AS DP1 ON SE1.degree_program_id = DP1.degree_program_id WHERE DP1.degree_summary_name = 'Bachelor' AND SE1.degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Master')
after:
SELECT S1.semester_name  FROM Semesters AS S1  JOIN Student_Enrolment AS SE1 ON S1.semester_id = SE1.semester_id  JOIN Degree_Programs AS DP1 ON SE1.degree_program_id = DP1.degree_program_id  WHERE DP1.degree_summary_name = 'Bachelor'  AND SE1.degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Master')

index is 576
before:
SELECT semester_id FROM Student_Enrolment WHERE degree_program_id = (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Masters') INTERSECT SELECT semester_id FROM Student_Enrolment WHERE degree_program_id = (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Bachelors')
after:
SELECT semester_id  FROM Student_Enrolment  WHERE degree_program_id IN (     SELECT degree_program_id      FROM Degree_Programs      WHERE degree_summary_name = 'Masters' OR degree_summary_name = 'Bachelors' ) GROUP BY semester_id HAVING COUNT(DISTINCT degree_program_id) = 2

index is 577
before:
SELECT COUNT(DISTINCT Students.current_address_id) FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id
after:
SELECT COUNT(DISTINCT Students.current_address_id) FROM Students JOIN Addresses ON Addresses.address_id = Students.current_address_id

index is 578
before:
SELECT DISTINCT * FROM Addresses JOIN Students ON Students.permanent_address_id = Addresses.address_id OR Students.current_address_id = Addresses.address_id
after:
SELECT DISTINCT Addresses.* FROM Addresses JOIN Students ON Students.permanent_address_id = Addresses.address_id OR Students.current_address_id = Addresses.address_id

index is 579
before:
SELECT * FROM student ORDER BY name DESC
after:
SELECT Students.first_name, Students.middle_name, Students.last_name, Students.cell_mobile_number, Students.email_address, Students.ssn FROM Students ORDER BY Students.last_name DESC, Students.first_name DESC, Students.middle_name DESC

index is 580
before:
ORDER BY last_name DESC
after:
SELECT other_student_details, first_name, middle_name, last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id ORDER BY last_name DESC

index is 581
before:
Note: The provided query is not correct as it refers to "section h," which is not a valid table or column name in the given schema.
after:
SELECT The given SQL query is incorrect as it refers to "section h," which is not a valid table or column name in the provided schema. Therefore, there is no need to fix the query.

index is 582
before:
SELECT section_description FROM Sections WHERE section_name = 'h'
after:
SELECT section_description FROM Sections WHERE section_name = 'h'

index is 583
before:
SELECT first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = 'Haiti' OR Students.cell_mobile_number = '09700166582'
after:
SELECT first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = 'Haiti' OR Students.cell_mobile_number = '09700166582'

index is 584
before:
SELECT first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = 'Haiti' OR Students.cell_mobile_number = '09700166582'
after:
SELECT Students.first_name FROM Students  JOIN Addresses ON Students.permanent_address_id = Addresses.address_id  WHERE Addresses.country = 'Haiti' OR Students.cell_mobile_number = '09700166582'

index is 585
before:
SELECT Title FROM Cartoon ORDER BY Title ASC
after:
SELECT Title FROM Cartoon ORDER BY Title ASC

index is 586
before:

after:
SELECT Cartoon.Title FROM Cartoon ORDER BY Cartoon.Title ASC;

index is 587
before:
SELECT * FROM Cartoon WHERE Directed_by = 'Ben Jones'
after:
SELECT Cartoon.* FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Directed_by = 'Ben Jones'

index is 588
before:
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
after:
SELECT Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Directed_by = 'Ben Jones'

index is 589
before:
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'
after:
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'

index is 590
before:
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'
after:
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'

index is 591
before:
SELECT Cartoon.Title, Cartoon.Directed_by FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id ORDER BY Cartoon.Original_air_date ASC
after:
SELECT Cartoon.Title, Cartoon.Directed_by  FROM Cartoon  JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id  JOIN TV_series ON Cartoon.Channel = TV_series.Channel  ORDER BY Cartoon.Original_air_date ASC

index is 592
before:
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
after:
SELECT Cartoon.Title, Cartoon.Directed_by  FROM Cartoon  JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id  ORDER BY Cartoon.Original_air_date

index is 593
before:
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
after:
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'

index is 594
before:
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
after:
SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'Ben Jones' OR Cartoon.Directed_by = 'Brandon Vietti'

index is 595
before:
SELECT Country, COUNT(id) FROM TV_Channel GROUP BY Country ORDER BY COUNT(id) DESC LIMIT 1
after:
SELECT Country, COUNT(id) AS Num_Channels FROM TV_Channel GROUP BY Country ORDER BY Num_Channels DESC LIMIT 1

index is 596
before:
LIMIT 1
after:
SELECT Country, COUNT(*) AS NumChannels FROM TV_Channel GROUP BY Country ORDER BY NumChannels DESC LIMIT 1

index is 597
before:
SELECT COUNT(DISTINCT series_name) AS num_series, COUNT(DISTINCT Content) AS num_contents FROM TV_Channel
after:
SELECT COUNT(DISTINCT series_name) AS num_series, COUNT(DISTINCT Content) AS num_contents  FROM TV_Channel

index is 598
before:
SELECT COUNT(DISTINCT T1.series_name), COUNT(DISTINCT T2.Content) FROM TV_series AS T1, TV_Channel AS T2
after:
SELECT COUNT(DISTINCT T2.series_name), COUNT(DISTINCT T2.Content) FROM TV_Channel AS T2

index is 599
before:
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
after:
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'

index is 600
before:
SELECT
after:
SELECT SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';

index is 601
before:
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
after:
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'

index is 602
before:
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
after:
SELECT Package_Option  FROM TV_Channel  JOIN TV_series ON TV_Channel.id = TV_series.Channel  WHERE TV_Channel.series_name = 'Sky Radio'

index is 603
before:
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English'
after:
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English'

index is 604
before:
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English'
after:
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English'

index is 605
before:
SELECT Language, COUNT(id) FROM TV_Channel GROUP BY Language ORDER BY COUNT(id) ASC LIMIT 1
after:
SELECT Language, COUNT(id)  FROM TV_Channel  GROUP BY Language  ORDER BY COUNT(id) ASC  LIMIT 1

index is 606
before:
)
after:
SELECT TV_Channel.Language, COUNT(*) AS Channel_Count FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel GROUP BY TV_Channel.Language HAVING Channel_Count = (     SELECT MIN(Channel_Count)     FROM (         SELECT TV_Channel.Language, COUNT(*) AS Channel_Count         FROM TV_Channel         JOIN Cartoon ON TV_Channel.id = Cartoon.Channel         JOIN TV_series ON TV_Channel.id = TV_series.Channel         GROUP BY TV_Channel.Language     ) AS Subquery )

index is 607
before:
SELECT Language, COUNT(*) AS Number_of_Channels FROM TV_Channel GROUP BY Language
after:
SELECT Language, COUNT(DISTINCT id) AS Number_of_Channels FROM TV_Channel GROUP BY Language

index is 608
before:
SELECT Language, COUNT(*) AS Channel_Count FROM TV_Channel GROUP BY Language
after:
SELECT Language, COUNT(DISTINCT id) AS Channel_Count FROM TV_Channel GROUP BY Language

index is 609
before:
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Title = 'The Rise of the Blue Beetle!'
after:
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Title = 'The Rise of the Blue Beetle!';

index is 610
before:
JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id
after:
SELECT TV_Channel.series_name FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Title = 'The Rise of the Blue Beetle'

index is 611
before:
SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio'
after:
SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id JOIN TV_series ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio'

index is 612
before:
SELECT
after:
SELECT SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio";

index is 613
before:
SELECT Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id ORDER BY Rating DESC
after:
SELECT TV_series.Episode  FROM TV_series  JOIN TV_Channel ON TV_series.Channel = TV_Channel.id  ORDER BY TV_series.Rating DESC

index is 614
before:
SELECT * FROM TV_series ORDER BY Rating DESC
after:
SELECT TV_series.*  FROM TV_series  ORDER BY Rating DESC

index is 615
before:
SELECT Episode, Rating FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id ORDER BY Rating DESC LIMIT 3
after:
SELECT TV_series.Episode, TV_series.Rating  FROM TV_series  JOIN TV_Channel ON TV_series.Channel = TV_Channel.id  ORDER BY TV_series.Rating DESC  LIMIT 3

index is 616
before:
SELECT Episode, Rating FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id ORDER BY Rating DESC LIMIT 3
after:
SELECT TV_series.Episode, TV_series.Rating  FROM TV_series  JOIN TV_Channel ON TV_series.Channel = TV_Channel.id  ORDER BY TV_series.Rating DESC  LIMIT 3

index is 617
before:
SELECT MIN(Share), MAX(Share) FROM TV_series
after:
SELECT MIN(Share), MAX(Share)  FROM TV_series;

index is 618
before:
SELECT MAX(Share), MIN(Share) FROM TV_series
after:
SELECT MAX(Share) AS Maximum_Share, MIN(Share) AS Minimum_Share FROM TV_series

index is 619
before:
SELECT
after:
SELECT TV_series.Air_Date FROM TV_series WHERE TV_series.Episode = "A Love of a Lifetime"

index is 620
before:
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
after:
SELECT TV_series.Air_Date FROM TV_series WHERE TV_series.Episode = 'A Love of a Lifetime'

index is 621
before:
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
after:
SELECT TV_series.Weekly_Rank FROM TV_series JOIN Cartoon ON Cartoon.id = TV_series.id WHERE Cartoon.Title = 'A Love of a Lifetime'

index is 622
before:
SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime'
after:
SELECT Weekly_Rank  FROM TV_series  WHERE Episode = 'A Love of a Lifetime'

index is 623
before:
SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.Episode = 'A Love of a Lifetime'
after:
SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.Episode = 'A Love of a Lifetime'

index is 624
before:
SELECT series_name FROM TV_series WHERE Episode = 'A Love of a Lifetime'
after:
SELECT series_name FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_series.Episode = 'A Love of a Lifetime'

index is 625
before:
SELECT Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio'
after:
SELECT TV_series.Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio'

index is 626
before:
SELECT Episode FROM TV_series WHERE series_name = 'Sky Radio'
after:
SELECT TV_series.Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio'

index is 627
before:
SELECT Directed_by, COUNT(id) FROM Cartoon WHERE Directed_by IN ('Director1', 'Director2', 'Director3') GROUP BY Directed_by
after:
SELECT

index is 628
before:
SELECT Directed_by, COUNT(id) FROM Cartoon GROUP BY Directed_by
after:
SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by

index is 629
before:
SELECT Cartoon.Production_code, TV_Channel.series_name, Cartoon.Channel FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id JOIN TV_series ON Cartoon.Title = TV_series.Episode WHERE TV_series.Air_Date = (SELECT MAX(Air_Date) FROM TV_series)
after:
SELECT Cartoon.Production_code, TV_Channel.series_name, TV_Channel.Channel FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id JOIN TV_series ON Cartoon.Title = TV_series.Episode WHERE TV_series.Air_Date = (SELECT MAX(Air_Date) FROM TV_series)

index is 630
before:
SELECT Production_code, Channel FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id ORDER BY Original_air_date DESC LIMIT 1
after:
SELECT Production_code, TV_Channel.series_name AS Channel FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id ORDER BY Cartoon.Original_air_date DESC LIMIT 1

index is 631
before:
SELECT TV_Channel.Package_Option, TV_series.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_Channel.Hight_definition_TV = true
after:
SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_Channel.Hight_definition_TV = true

index is 632
before:
SELECT
after:
SELECT SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 1;

index is 633
before:
SELECT DISTINCT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = 'Todd Casey'
after:
SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = 'Todd Casey'

index is 634
before:
SELECT DISTINCT TV_Channel.Country FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = 'Todd Casey'
after:
SELECT TV_Channel.Country  FROM Cartoon  JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id  WHERE Cartoon.Written_by = 'Todd Casey'

index is 635
before:
SELECT DISTINCT Country FROM TV_Channel WHERE Country NOT IN (SELECT DISTINCT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = 'Todd Casey')
after:
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (   SELECT DISTINCT Channel   FROM Cartoon   WHERE Written_by = 'Todd Casey' )

index is 636
before:
SELECT DISTINCT TV_Channel.Country FROM TV_Channel WHERE NOT EXISTS (SELECT * FROM Cartoon WHERE Cartoon.Written_by = 'Todd Casey' AND Cartoon.Channel = TV_Channel.id)
after:
SELECT DISTINCT TV_Channel.Country FROM TV_Channel WHERE TV_Channel.id NOT IN (     SELECT Cartoon.Channel     FROM Cartoon     WHERE Cartoon.Written_by = 'Todd Casey' )

index is 637
before:
SELECT
after:
SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');

index is 638
before:
SELECT T1.series_name, T1.Country FROM Cartoon AS T2 JOIN TV_Channel AS T1 ON T2.Channel = T1.id WHERE T2.Directed_by = 'Ben Jones' OR T2.Directed_by = 'Michael Chang'
after:
SELECT T1.series_name, T1.Country  FROM Cartoon AS T2  JOIN TV_Channel AS T1 ON T2.Channel = T1.id  WHERE T2.Directed_by = 'Ben Jones' OR T2.Directed_by = 'Michael Chang'

index is 639
before:
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
after:
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'

index is 640
before:
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'
after:
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'

index is 641
before:
SELECT id FROM TV_Channel GROUP BY Country HAVING count(*) > 2
after:
SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.Country HAVING COUNT(*) > 2

index is 642
before:
SELECT
after:
SELECT SELECT id FROM TV_Channel GROUP BY id HAVING COUNT(*) > 2

index is 643
before:
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'Ben Jones')
after:
SELECT TV_Channel.id  FROM TV_Channel  LEFT JOIN Cartoon ON Cartoon.Channel = TV_Channel.id  WHERE Cartoon.Directed_by <> 'Ben Jones' OR Cartoon.Directed_by IS NULL

index is 644
before:
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Cartoon.Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
after:
SELECT TV_Channel.id FROM TV_Channel LEFT JOIN Cartoon ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Directed_by <> 'Ben Jones' OR Cartoon.Directed_by IS NULL

index is 645
before:
SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
after:
SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones');

index is 646
before:
SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
after:
SELECT Package_Option FROM TV_Channel  WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')

index is 647
before:
SELECT COUNT(Poker_Player_ID) FROM poker_player
after:
SELECT COUNT(*) FROM poker_player

index is 648
before:
SELECT COUNT(*) FROM poker_player
after:
SELECT COUNT(*) FROM poker_player

index is 649
before:
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
after:
SELECT poker_player.Earnings  FROM poker_player  ORDER BY Earnings DESC

index is 650
before:
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
after:
SELECT poker_player.Earnings  FROM poker_player  ORDER BY poker_player.Earnings DESC

index is 651
before:
SELECT Final_Table_Made, Best_Finish FROM poker_player
after:
SELECT Final_Table_Made, Best_Finish FROM poker_player

index is 652
before:
SELECT Final_Table_Made, Best_Finish FROM poker_player
after:
SELECT Final_Table_Made, Best_Finish FROM poker_player

index is 653
before:
SELECT AVG(Earnings) FROM poker_player
after:
SELECT AVG(Earnings) FROM poker_player

index is 654
before:
SELECT AVG(Earnings) FROM poker_player
after:
SELECT AVG(Earnings) FROM poker_player

index is 655
before:
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT max(Earnings) FROM poker_player)
after:
SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)

index is 656
before:
SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
after:
SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Earnings DESC LIMIT 1

index is 657
before:
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
after:
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000

index is 658
before:
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
after:
SELECT MAX(Final_Table_Made)  FROM poker_player  JOIN people ON poker_player.People_ID = people.People_ID  WHERE Earnings < 200000

index is 659
before:
SELECT Name FROM people JOIN poker_player ON poker_player.People_ID = people.People_ID
after:
SELECT people.Name FROM people JOIN poker_player ON poker_player.People_ID = people.People_ID

index is 660
before:
SELECT Name FROM people
after:
SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID

index is 661
before:
SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE Earnings > 300000
after:
SELECT

index is 662
before:
SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Earnings > 300000
after:
SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Earnings > 300000

index is 663
before:
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC
after:
SELECT T1.Name  FROM people AS T1  JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID  ORDER BY T2.Final_Table_Made ASC

index is 664
before:
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC
after:
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC;

index is 665
before:
SELECT Birth_Date FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY Earnings ASC LIMIT 1
after:
SELECT people.Birth_Date  FROM poker_player  JOIN people ON poker_player.People_ID = people.People_ID  ORDER BY poker_player.Earnings ASC  LIMIT 1

index is 666
before:
SELECT Birth_Date FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY Earnings ASC LIMIT 1
after:
SELECT Birth_Date FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY poker_player.Earnings ASC LIMIT 1

index is 667
before:
SELECT poker_player.Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height = (SELECT max(Height) FROM people)
after:
SELECT poker_player.Money_Rank  FROM poker_player  JOIN people ON poker_player.People_ID = people.People_ID  WHERE people.Height = (SELECT MAX(Height) FROM people)

index is 668
before:
SELECT Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY Height DESC LIMIT 1
after:
SELECT poker_player.Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY people.Height DESC LIMIT 1

index is 669
before:
SELECT avg(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200
after:
SELECT AVG(poker_player.Earnings) FROM poker_player  JOIN people ON poker_player.People_ID = people.People_ID  WHERE people.Height > 200;

index is 670
before:
SELECT avg(Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200
after:
SELECT avg(poker_player.Earnings)  FROM poker_player  JOIN people ON poker_player.People_ID = people.People_ID  WHERE people.Height > 200

index is 671
before:
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC
after:
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC

index is 672
before:
SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY Earnings DESC
after:
SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY poker_player.Earnings DESC

index is 673
before:
SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality
after:
SELECT Nationality, COUNT(*)  FROM people  GROUP BY Nationality

index is 674
before:
SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality
after:
SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality

index is 675
before:
SELECT nationality FROM people GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1
after:
SELECT Nationality, COUNT(*) AS Count  FROM people  GROUP BY Nationality  ORDER BY Count DESC  LIMIT 1

index is 676
before:
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
after:
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1

index is 677
before:
SELECT people.Nationality FROM people JOIN poker_player ON people.People_ID  =  poker_player.People_ID GROUP BY people.Nationality HAVING count(poker_player.People_ID) >= 2
after:
SELECT people.Nationality FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID GROUP BY people.Nationality HAVING COUNT(DISTINCT people.People_ID) >= 2

index is 678
before:
SELECT Nationality FROM people GROUP BY Nationality HAVING count(*) >= 2
after:
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2

index is 679
before:
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
after:
SELECT Name, Birth_Date FROM people ORDER BY Name ASC

index is 680
before:
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
after:
SELECT Name, Birth_Date  FROM people  ORDER BY Name ASC

index is 681
before:
SELECT Name FROM people WHERE Nationality <> 'Russia'
after:
SELECT Name  FROM people  WHERE Nationality <> 'Russia'

index is 682
before:
SELECT Name FROM people WHERE Nationality <> 'Russia'
after:
SELECT Name FROM people WHERE Nationality <> 'Russia'

index is 683
before:
SELECT Name FROM people LEFT JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Poker_Player_ID IS NULL
after:
SELECT Name FROM people LEFT JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Poker_Player_ID IS NULL

index is 684
before:
SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
after:
SELECT Name FROM people LEFT JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.People_ID IS NULL

index is 685
before:
SELECT COUNT(DISTINCT Nationality) FROM people
after:
SELECT COUNT(DISTINCT Nationality) FROM people

index is 686
before:
SELECT COUNT(DISTINCT Nationality) FROM people
after:
SELECT COUNT(DISTINCT Nationality) FROM people

index is 687
before:
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE
after:
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE

index is 688
before:
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
after:
SELECT contestant_number, contestant_name  FROM CONTESTANTS  ORDER BY contestant_name DESC

index is 689
before:
SELECT vote_id, phone_number, state FROM VOTES
after:
SELECT vote_id, phone_number, state FROM VOTES

index is 690
before:
SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE
after:
SELECT MAX(area_code) AS max_area_code, MIN(area_code) AS min_area_code FROM AREA_CODE_STATE

index is 691
before:
SELECT max(created) FROM VOTES WHERE state = 'CA'
after:
SELECT MAX(created) AS last_date_created FROM VOTES WHERE state = 'CA'

index is 692
before:
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name <> 'Jessie Alloway'
after:
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name <> 'Jessie Alloway'

index is 693
before:
SELECT DISTINCT state, created FROM VOTES
after:
SELECT DISTINCT state, created FROM VOTES

index is 694
before:
SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE (SELECT count(*) FROM VOTES WHERE VOTES.contestant_number = CONTESTANTS.contestant_number) >= 2
after:
SELECT contestant_number, contestant_name  FROM CONTESTANTS  WHERE contestant_number IN (     SELECT contestant_number      FROM VOTES      GROUP BY contestant_number      HAVING COUNT(*) >= 2 )

index is 695
before:
```
after:
SELECT contestant_number, contestant_name  FROM CONTESTANTS  WHERE contestant_number = (     SELECT contestant_number      FROM VOTES      GROUP BY contestant_number      ORDER BY COUNT(*) ASC      LIMIT 1 )

index is 696
before:
SELECT COUNT(vote_id) FROM VOTES WHERE state = 'NY' OR state = 'CA'
after:
SELECT COUNT(vote_id) FROM VOTES WHERE state IN ('NY', 'CA')

index is 697
before:
SELECT
after:
SELECT SELECT COUNT(*) AS num_contestants FROM CONTESTANTS WHERE contestant_number NOT IN (   SELECT DISTINCT contestant_number   FROM VOTES )

index is 698
before:
SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1
after:
SELECT T1.area_code  FROM AREA_CODE_STATE AS T1  JOIN VOTES AS T2 ON T1.state = T2.state  GROUP BY T1.area_code  ORDER BY COUNT(*) DESC  LIMIT 1

index is 699
before:
SELECT VOTES.created, VOTES.state, VOTES.phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling'
after:
SELECT VOTES.created, VOTES.state, VOTES.phone_number  FROM VOTES  JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number  WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling';

index is 700
before:
SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN VOTES ON AREA_CODE_STATE.state = VOTES.state JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling' AND EXISTS (SELECT 1 FROM VOTES V2 JOIN CONTESTANTS C2 ON V2.contestant_number = C2.contestant_number WHERE VOTES.state = V2.state AND C2.contestant_name = 'Kelly Clauss')
after:
SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN VOTES ON AREA_CODE_STATE.state = VOTES.state JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling'   AND AREA_CODE_STATE.area_code IN (     SELECT AREA_CODE_STATE.area_code     FROM VOTES     JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number     WHERE CONTESTANTS.contestant_name = 'Kelly Clauss'   )

index is 701
before:
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
after:
SELECT contestant_name  FROM CONTESTANTS  WHERE contestant_name LIKE '%Al%'

index is 702
before:
SELECT Name FROM country WHERE IndepYear > 1950
after:
SELECT country.Name FROM country WHERE country.IndepYear > 1950

index is 703
before:
SELECT Name FROM country WHERE IndepYear > 1950
after:
SELECT country.Name  FROM country  WHERE country.IndepYear > 1950

index is 704
before:
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic'
after:
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic'

index is 705
before:
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic'
after:
SELECT COUNT(DISTINCT Code) FROM country WHERE GovernmentForm = 'Republic'

index is 706
before:
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
after:
SELECT SUM(SurfaceArea) AS TotalSurfaceArea  FROM country  WHERE Region = 'Caribbean'

index is 707
before:
SELECT SUM(SurfaceArea) FROM country WHERE Continent = 'Caribbean'
after:
SELECT SUM(SurfaceArea) FROM country WHERE Continent = 'Caribbean'

index is 708
before:
SELECT Continent FROM country WHERE Name = 'Anguilla'
after:
SELECT Continent FROM country WHERE Name = 'Anguilla'

index is 709
before:
SELECT Continent FROM country JOIN city ON city.CountryCode = country.Code WHERE city.Name = 'Anguilla'
after:
SELECT Continent FROM country WHERE country.Code = (SELECT CountryCode FROM city WHERE city.Name = 'Anguilla')

index is 710
before:
SELECT Region FROM country JOIN city ON country.Code = city.CountryCode WHERE city.Name = 'Kabul'
after:
SELECT Region FROM country JOIN city ON country.Code = city.CountryCode WHERE city.Name = 'Kabul'

index is 711
before:
SELECT country.Region FROM country JOIN city ON city.CountryCode = country.Code WHERE city.Name = 'Kabul'
after:
SELECT country.Region FROM country JOIN city ON city.CountryCode = country.Code WHERE city.Name = 'Kabul'

index is 712
before:
SELECT
after:
SELECT SELECT Language FROM countrylanguage WHERE CountryCode = 'ABW' ORDER BY Percentage DESC LIMIT 1;

index is 713
before:
SELECT T1.Language FROM countrylanguage AS T1, city AS T2, country AS T3 WHERE T2.CountryCode = T3.Code AND T1.CountryCode = T3.Code AND T2.Name = 'Aruba' AND T1.Percentage = (SELECT max(Percentage) FROM countrylanguage WHERE countrylanguage.CountryCode = T3.Code)
after:
SELECT T1.Language FROM countrylanguage AS T1 JOIN country AS T3 ON T1.CountryCode = T3.Code JOIN city AS T2 ON T2.CountryCode = T3.Code WHERE T2.Name = 'Aruba' AND T1.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T3.Code)

index is 714
before:
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
after:
SELECT Population, LifeExpectancy  FROM country  WHERE Name = 'Brazil'

index is 715
before:
WHERE c.Name = 'Brazil'
after:
SELECT c.Population, c.LifeExpectancy FROM country c WHERE c.Name = 'Brazil'

index is 716
before:
SELECT Region, Population FROM country JOIN city ON country.Code = city.CountryCode WHERE city.Name = 'Angola'
after:
SELECT Region, Population  FROM country  WHERE country.Name = 'Angola'

index is 717
before:
SELECT Region, Population FROM country JOIN city ON country.Code = city.CountryCode WHERE country.Name = 'Angola'
after:
SELECT Region, country.Population FROM country JOIN city ON country.Code = city.CountryCode WHERE country.Name = 'Angola'

index is 718
before:
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
after:
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'

index is 719
before:
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND Region = 'Central Africa'
after:
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND Region = 'Central Africa'

index is 720
before:
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1
after:
SELECT country.Name  FROM country  WHERE country.Continent = 'Asia'  ORDER BY country.LifeExpectancy ASC  LIMIT 1

index is 721
before:
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1
after:
SELECT country.Name FROM country WHERE country.Continent = 'Asia' ORDER BY country.LifeExpectancy ASC LIMIT 1

index is 722
before:
WHERE Continent = 'Asia'
after:
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS MaximumGNP FROM country WHERE Continent = 'Asia'

index is 723
before:
WHERE country.Continent = 'Asia'
after:
SELECT SUM(country.Population) AS total_population, MAX(country.GNP) AS largest_GNP FROM country JOIN city ON country.Code = city.CountryCode WHERE country.Continent = 'Asia'

index is 724
before:
SELECT avg(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'
after:
SELECT avg(LifeExpectancy)  FROM country  WHERE Continent = 'Africa'  AND GovernmentForm = 'Republic'

index is 725
before:
SELECT avg(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'
after:
SELECT avg(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic' GROUP BY Continent

index is 726
before:
WHERE Continent = 'Asia' OR Continent = 'Europe'
after:
SELECT SUM(SurfaceArea) AS TotalSurfaceArea FROM country WHERE Continent IN ('Asia', 'Europe')

index is 727
before:
SELECT SUM(SurfaceArea) FROM country WHERE Continent = 'Asia' OR Continent = 'Europe'
after:
SELECT SUM(SurfaceArea) AS TotalSurfaceArea FROM country WHERE Continent = 'Asia' OR Continent = 'Europe'

index is 728
before:
SELECT sum(population) FROM city WHERE district = 'Gelderland'
after:
SELECT sum(population) FROM city WHERE District = 'Gelderland'

index is 729
before:
SELECT sum(city.Population) FROM city JOIN country ON city.CountryCode = country.Code WHERE city.District = 'Gelderland'
after:
SELECT sum(country.Population)  FROM city  JOIN country ON city.CountryCode = country.Code  WHERE city.District = 'Gelderland'

index is 730
before:
SELECT avg(GNP), sum(Population) FROM country JOIN city ON country.Code = city.CountryCode WHERE GovernmentForm = 'US territory'
after:
SELECT avg(country.GNP) AS Average_GNP, sum(country.Population) AS Total_Population FROM country JOIN city ON country.Code = city.CountryCode WHERE country.GovernmentForm = 'US territory'

index is 731
before:
SELECT AVG(GNP), SUM(Population) FROM country JOIN city ON country.Code = city.CountryCode JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'US'
after:
SELECT AVG(country.GNP), SUM(country.Population)  FROM country  JOIN city ON country.Code = city.CountryCode  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE country.Continent = 'North America' OR country.Continent = 'Oceania'

index is 732
before:
SELECT COUNT(DISTINCT Language) FROM countrylanguage
after:
SELECT COUNT(DISTINCT Language) FROM countrylanguage

index is 733
before:
SELECT COUNT(DISTINCT Language) FROM countrylanguage
after:
SELECT COUNT(DISTINCT Language) FROM countrylanguage

index is 734
before:
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'
after:
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'

index is 735
before:
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'
after:
SELECT COUNT(DISTINCT GovernmentForm)  FROM country  WHERE Continent = 'Africa'

index is 736
before:
SELECT COUNT(DISTINCT T3.Language) FROM city AS T1, country AS T2, countrylanguage AS T3 WHERE T1.CountryCode = T2.Code AND T3.CountryCode = T2.Code AND T1.Name = 'Aruba'
after:
SELECT COUNT(DISTINCT T3.Language) FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code JOIN countrylanguage AS T3 ON T3.CountryCode = T2.Code WHERE T1.Name = 'Aruba';

index is 737
before:
SELECT count(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'Aruba'
after:
SELECT count(DISTINCT countrylanguage.Language) FROM countrylanguage  JOIN country ON country.Code = countrylanguage.CountryCode  WHERE country.Name = 'Aruba'

index is 738
before:
SELECT COUNT(countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'Afghanistan' AND countrylanguage.IsOfficial = 'T'
after:
SELECT COUNT(DISTINCT countrylanguage.Language) FROM country  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE country.Name = 'Afghanistan'  AND countrylanguage.IsOfficial = 'T'

index is 739
before:
SELECT COUNT(Language) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'
after:
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'

index is 740
before:
LIMIT 1
after:
SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Code ORDER BY COUNT(DISTINCT countrylanguage.Language) DESC LIMIT 1

index is 741
before:
SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Code ORDER BY count(*) DESC LIMIT 1
after:
SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name ORDER BY COUNT(DISTINCT countrylanguage.Language) DESC LIMIT 1

index is 742
before:
SELECT Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1
after:
SELECT Continent FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode GROUP BY country.Continent ORDER BY COUNT(DISTINCT countrylanguage.Language) DESC LIMIT 1

index is 743
before:
SELECT country.Continent, COUNT(DISTINCT countrylanguage.Language) AS language_count FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Continent ORDER BY language_count DESC LIMIT 1
after:
SELECT country.Continent, COUNT(DISTINCT countrylanguage.Language) AS language_count  FROM country  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  GROUP BY country.Continent  ORDER BY language_count DESC  LIMIT 1

index is 744
before:
SELECT COUNT(*) FROM (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' INTERSECT SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch') AS T
after:
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language IN ('English', 'Dutch')

index is 745
before:
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'English' OR Language = 'Dutch'
after:
SELECT COUNT(DISTINCT CountryCode) AS NumberOfNations FROM countrylanguage WHERE Language IN ('English', 'Dutch')

index is 746
before:
SELECT Name FROM countrylanguage WHERE Language = 'English' INTERSECT SELECT Name FROM countrylanguage WHERE Language = 'French'
after:
SELECT country.Name FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE countrylanguage.Language = 'English' INTERSECT SELECT country.Name FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE countrylanguage.Language = 'French'

index is 747
before:
SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French')
after:
SELECT Name FROM country WHERE Code IN (   SELECT CountryCode   FROM countrylanguage   WHERE Language = 'English' ) AND Code IN (   SELECT CountryCode   FROM countrylanguage   WHERE Language = 'French' ) GROUP BY Name

index is 748
before:
SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode JOIN countrylanguage AS T3 ON T1.Code = T3.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' AND T3.Language = 'French' AND T3.IsOfficial = 'T'
after:
SELECT T1.Name FROM country AS T1  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  JOIN countrylanguage AS T3 ON T1.Code = T3.CountryCode  WHERE T2.Language = 'English' AND T2.IsOfficial = 'T'  AND T3.Language = 'French' AND T3.IsOfficial = 'T'

index is 749
before:
SELECT DISTINCT C1.Name FROM country AS C1, countrylanguage AS CL1, countrylanguage AS CL2 WHERE C1.Code = CL1.CountryCode AND C1.Code = CL2.CountryCode AND CL1.Language = 'English' AND CL1.IsOfficial = 'T' AND CL2.Language = 'French' AND CL2.IsOfficial = 'T'
after:
SELECT DISTINCT C1.Name  FROM country AS C1  JOIN countrylanguage AS CL1 ON C1.Code = CL1.CountryCode  JOIN countrylanguage AS CL2 ON C1.Code = CL2.CountryCode  WHERE CL1.Language = 'English'    AND CL1.IsOfficial = 'T'    AND CL2.Language = 'French'    AND CL2.IsOfficial = 'T'

index is 750
before:
SELECT COUNT(DISTINCT Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese'
after:
SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese'

index is 751
before:
SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese'
after:
SELECT COUNT(DISTINCT country.Continent)  FROM country  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE countrylanguage.Language = 'Chinese'

index is 752
before:
SELECT DISTINCT country.Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch'
after:
SELECT country.Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch' GROUP BY country.Region

index is 753
before:
SELECT DISTINCT country.Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Dutch' OR countrylanguage.Language = 'English'
after:
SELECT country.Region FROM country  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE countrylanguage.Language IN ('Dutch', 'English')

index is 754
before:
SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = true) OR (countrylanguage.Language = 'Dutch' AND countrylanguage.IsOfficial = true)
after:
SELECT country.Name  FROM country  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch')  AND countrylanguage.IsOfficial = 1

index is 755
before:
SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'Yes') OR (countrylanguage.Language = 'Dutch' AND countrylanguage.IsOfficial = 'Yes')
after:
SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') AND countrylanguage.IsOfficial = 'Yes'

index is 756
before:
SELECT Language FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' ORDER BY Percentage DESC LIMIT 1
after:
SELECT countrylanguage.Language  FROM countrylanguage  JOIN country ON country.Code = countrylanguage.CountryCode  WHERE country.Continent = 'Asia'  GROUP BY countrylanguage.Language  ORDER BY SUM(countrylanguage.Percentage) DESC  LIMIT 1

index is 757
before:
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Continent = 'Asia' GROUP BY countrylanguage.Language HAVING count(*) = (SELECT max(count(*)) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Continent = 'Asia' GROUP BY countrylanguage.Language)
after:
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Continent = 'Asia' GROUP BY countrylanguage.Language HAVING count(*) = (     SELECT COUNT(*)      FROM countrylanguage      JOIN country ON countrylanguage.CountryCode = country.Code      WHERE country.Continent = 'Asia'      GROUP BY countrylanguage.Language      ORDER BY COUNT(*) DESC      LIMIT 1 )

index is 758
before:
SELECT Language FROM countrylanguage WHERE Language  IN  (SELECT Language FROM countrylanguage WHERE CountryCode  IN  (SELECT Code FROM country WHERE GovernmentForm  =  'Republic') GROUP BY Language HAVING COUNT(Language)  =  1) AND Language  !=  'Republic'
after:
SELECT Language FROM countrylanguage WHERE CountryCode IN (     SELECT Code     FROM country     WHERE GovernmentForm = 'Republic' ) GROUP BY Language HAVING COUNT(DISTINCT CountryCode) = 1

index is 759
before:
SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT CountryCode FROM country WHERE GovernmentForm = 'Republic') GROUP BY Language HAVING COUNT(CountryCode) = 1
after:
SELECT Language FROM countrylanguage  WHERE CountryCode IN (   SELECT Code    FROM country    WHERE GovernmentForm = 'Republic' )  GROUP BY Language  HAVING COUNT(DISTINCT CountryCode) = 1

index is 760
before:
SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode JOIN country ON city.CountryCode = country.Code WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1
after:
SELECT city.Name  FROM city  JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode  JOIN country ON city.CountryCode = country.Code  WHERE countrylanguage.Language = 'English'  GROUP BY city.Name  ORDER BY city.Population DESC  LIMIT 1

index is 761
before:
SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode JOIN country ON city.CountryCode = country.Code WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1
after:
SELECT city.Name  FROM city  JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode  JOIN country ON city.CountryCode = country.Code  WHERE countrylanguage.Language = 'English'  GROUP BY city.Name  ORDER BY city.Population DESC  LIMIT 1

index is 762
before:
LIMIT 1
after:
SELECT country.Name, country.Population, country.LifeExpectancy FROM country JOIN city ON city.CountryCode = country.Code WHERE country.Continent = 'Asia' ORDER BY country.SurfaceArea DESC LIMIT 1

index is 763
before:
LIMIT 1
after:
SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.Continent = 'Asia' AND country.SurfaceArea > 0 ORDER BY country.SurfaceArea DESC LIMIT 1

index is 764
before:
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'Yes')
after:
SELECT AVG(LifeExpectancy)  FROM country  WHERE Code NOT IN (     SELECT CountryCode      FROM countrylanguage      WHERE Language = 'English'      AND IsOfficial = 'Yes' )

index is 765
before:
SELECT avg(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
after:
SELECT avg(LifeExpectancy)  FROM country  WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')

index is 766
before:
SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'Yes')
after:
SELECT SUM(Population) AS TotalPopulation  FROM country  WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'Yes')

index is 767
before:
SELECT sum(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
after:
SELECT SUM(country.Population) FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'English' OR countrylanguage.Language IS NULL

index is 768
before:
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T'
after:
SELECT countrylanguage.Language  FROM countrylanguage  JOIN country ON countrylanguage.CountryCode = country.Code  WHERE country.HeadOfState = 'Beatrix'    AND countrylanguage.IsOfficial = 'T'

index is 769
before:
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix') AND IsOfficial = 'T'
after:
SELECT Language FROM countrylanguage WHERE CountryCode = (   SELECT Code   FROM country   WHERE HeadOfState = 'Beatrix' ) AND IsOfficial = 'T'

index is 770
before:
SELECT COUNT(DISTINCT countrylanguage.Language) FROM country JOIN city ON country.Code = city.CountryCode JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930
after:
SELECT COUNT(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930

index is 771
before:
SELECT COUNT(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930
after:
SELECT COUNT(DISTINCT countrylanguage.Language) AS TotalDistinctLanguages FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930;

index is 772
before:
SELECT Name FROM country WHERE SurfaceArea > ANY (SELECT SurfaceArea FROM country WHERE Continent = 'Europe')
after:
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')

index is 773
before:
SELECT Name FROM country WHERE SurfaceArea > ANY (SELECT SurfaceArea FROM country WHERE Continent = 'Europe')
after:
SELECT Name  FROM country  WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')

index is 774
before:
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT max(Population) FROM country WHERE Continent = 'Asia')
after:
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (   SELECT MIN(Population)   FROM country   WHERE Continent = 'Asia' )

index is 775
before:
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT min(Population) FROM country WHERE Continent = 'Asia')
after:
SELECT Name  FROM country  WHERE Continent = 'Africa'  AND Population < (   SELECT MIN(Population)    FROM country    WHERE Continent = 'Asia' )

index is 776
before:
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT max(Population) FROM country WHERE Continent = 'Africa')
after:
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')

index is 777
before:
SELECT name FROM country WHERE continent = 'Asia' AND population > (SELECT max(population) FROM country WHERE continent = 'Africa')
after:
SELECT name  FROM country  WHERE continent = 'Asia'    AND population > (     SELECT MAX(population)      FROM country      WHERE continent = 'Africa'   )

index is 778
before:
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
after:
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')

index is 779
before:
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
after:
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')

index is 780
before:
SELECT DISTINCT T1.Code FROM country AS T1 WHERE T1.Code NOT IN (SELECT T2.CountryCode FROM countrylanguage AS T2 WHERE T2.Language = 'English')
after:
SELECT DISTINCT T1.Code FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language <> 'English'

index is 781
before:
SELECT DISTINCT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
after:
SELECT DISTINCT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language != 'English')

index is 782
before:
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND GovernmentForm != 'Republic'
after:
SELECT country.Code  FROM country  LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE countrylanguage.Language != 'English' AND country.GovernmentForm != 'Republic'

index is 783
before:
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND GovernmentForm <> 'Republic'
after:
SELECT Code FROM country WHERE Code NOT IN (   SELECT CountryCode FROM countrylanguage WHERE Language = 'English' ) AND GovernmentForm <> 'Republic'

index is 784
before:
WHERE CO.Continent = 'Europe' AND CL.Language <> 'English' AND CL.IsOfficial <> 'T'
after:
SELECT C.Name FROM city AS C JOIN country AS CO ON C.CountryCode = CO.Code JOIN countrylanguage AS CL ON CO.Code = CL.CountryCode WHERE CO.Continent = 'Europe' AND CL.Language <> 'English' AND CL.IsOfficial <> 'T'

index is 785
before:
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Europe' AND countrylanguage.Language != 'English' AND countrylanguage.IsOfficial = 'F'
after:
SELECT city.Name  FROM city  JOIN country ON city.CountryCode = country.Code  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE country.Continent = 'Europe'  AND countrylanguage.Language <> 'English'  AND countrylanguage.IsOfficial = 'F'

index is 786
before:
SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = true
after:
SELECT DISTINCT city.Name  FROM city  JOIN country ON city.CountryCode = country.Code  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE country.Continent = 'Asia'  AND countrylanguage.Language = 'Chinese'  AND countrylanguage.IsOfficial = 1

index is 787
before:
SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE city.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T'
after:
SELECT DISTINCT city.Name  FROM city  JOIN country ON city.CountryCode = country.Code  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE country.Continent = 'Asia'  AND countrylanguage.Language = 'Chinese'  AND countrylanguage.IsOfficial = 'T'

index is 788
before:
WHERE Population = (SELECT MIN(Population) FROM country)
after:
SELECT country.Name, country.IndepYear, country.SurfaceArea FROM country WHERE country.Population = (SELECT MIN(country.Population) FROM country)

index is 789
before:
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
after:
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (   SELECT MIN(Population)   FROM country )

index is 790
before:
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
after:
SELECT Population, Name, HeadOfState  FROM country  WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)

index is 791
before:
WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
after:
SELECT country.Name, country.Population, country.HeadOfState  FROM country  WHERE country.SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)

index is 792
before:
HAVING COUNT(countrylanguage.Language) >= 3
after:
SELECT country.Name, COUNT(DISTINCT countrylanguage.Language)  FROM country  JOIN city ON country.Code = city.CountryCode  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  GROUP BY country.Name  HAVING COUNT(DISTINCT countrylanguage.Language) >= 3

index is 793
before:
SELECT Name, COUNT(Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Name HAVING COUNT(Language) > 2
after:
SELECT country.Name, COUNT(countrylanguage.Language) AS LanguageCount FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name HAVING COUNT(countrylanguage.Language) > 2

index is 794
before:
SELECT District ,  count(*) FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
after:
SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District

index is 795
before:
SELECT District, COUNT(*) FROM city WHERE Population > (SELECT avg(Population) FROM city) GROUP BY District
after:
SELECT District, COUNT(*)  FROM city  WHERE Population > (SELECT avg(Population) FROM city)  GROUP BY District

index is 796
before:
SELECT GovernmentForm, SUM(Population) FROM country WHERE GovernmentForm IN (SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72) GROUP BY GovernmentForm
after:
SELECT GovernmentForm, SUM(Population) AS TotalPopulation FROM country WHERE GovernmentForm IN (     SELECT GovernmentForm     FROM country     GROUP BY GovernmentForm     HAVING AVG(LifeExpectancy) > 72 ) GROUP BY GovernmentForm

index is 797
before:
SELECT GovernmentForm ,  sum(Population) FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
after:
SELECT GovernmentForm, SUM(Population)  FROM country  WHERE GovernmentForm IS NOT NULL  GROUP BY GovernmentForm  HAVING AVG(LifeExpectancy) > 72

index is 798
before:
SELECT continent, AVG(LifeExpectancy), SUM(Population) FROM country GROUP BY continent HAVING AVG(LifeExpectancy) < 72
after:
SELECT continent, AVG(LifeExpectancy) AS avg_life_expectancy, SUM(Population) AS total_population FROM country GROUP BY continent HAVING AVG(LifeExpectancy) < 72;

index is 799
before:
SELECT continent, sum(population), avg(life_expectancy) FROM country GROUP BY continent HAVING avg(life_expectancy)  <  72
after:
SELECT continent, sum(population), avg(lifeexpectancy) FROM country WHERE avg(lifeexpectancy) < 72 GROUP BY continent

index is 800
before:
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
after:
SELECT Name, SurfaceArea  FROM country  ORDER BY SurfaceArea DESC  LIMIT 5

index is 801
before:
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
after:
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5

index is 802
before:
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
after:
SELECT country.Name FROM country ORDER BY country.Population DESC LIMIT 3

index is 803
before:
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
after:
SELECT Name  FROM country  ORDER BY Population DESC  LIMIT 3

index is 804
before:
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
after:
SELECT Name FROM country ORDER BY Population ASC LIMIT 3

index is 805
before:
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
after:
SELECT country.Name FROM country ORDER BY Population LIMIT 3

index is 806
before:
SELECT COUNT(Code) FROM country WHERE Continent = 'Asia'
after:
SELECT COUNT(Code) FROM country WHERE Continent = 'Asia'

index is 807
before:
SELECT COUNT(Code) FROM country WHERE Continent = 'Asia'
after:
SELECT COUNT(Code) AS CountryCount FROM country WHERE Continent = 'Asia'

index is 808
before:
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000
after:
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000

index is 809
before:
SELECT country.Name FROM country JOIN city ON country.Code = city.CountryCode JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Europe' AND country.Population = 80000
after:
SELECT country.Name  FROM country  JOIN city ON country.Code = city.CountryCode  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE country.Continent = 'Europe'  AND city.Population = 80000

index is 810
before:
SELECT sum(Population) , avg(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000
after:
SELECT sum(country.Population) AS total_population, avg(country.SurfaceArea) AS average_area FROM country WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000

index is 811
before:
SELECT sum(Population), avg(SurfaceArea) FROM country JOIN city ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000
after:
SELECT sum(country.Population), avg(country.SurfaceArea)  FROM country  JOIN city ON city.CountryCode = country.Code  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE country.Continent = 'North America'  AND country.SurfaceArea > 3000

index is 812
before:
SELECT * FROM city WHERE Population BETWEEN 160000 AND 900000
after:
SELECT city.* FROM city WHERE city.Population BETWEEN 160000 AND 900000

index is 813
before:
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
after:
SELECT city.Name FROM city WHERE city.Population BETWEEN 160000 AND 900000

index is 814
before:
SELECT T1.Language FROM countrylanguage AS T1 GROUP BY T1.Language HAVING count(*) = (SELECT max(cnt) FROM (SELECT count(*) AS cnt FROM countrylanguage GROUP BY Language) AS T2)
after:
SELECT T1.Language  FROM countrylanguage AS T1  GROUP BY T1.Language  HAVING COUNT(*) = (   SELECT MAX(cnt)    FROM (     SELECT COUNT(*) AS cnt      FROM countrylanguage      GROUP BY Language   ) AS T2 )

index is 815
before:
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY count(CountryCode) DESC LIMIT 1
after:
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1

index is 816
before:
SELECT T2.Name, T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code GROUP BY T2.Code HAVING T1.Percentage = MAX(T1.Percentage)
after:
SELECT T2.Name, T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Percentage = (     SELECT MAX(Percentage)     FROM countrylanguage     WHERE CountryCode = T1.CountryCode ) GROUP BY T2.Code

index is 817
before:
SELECT
after:
SELECT country.Code, countrylanguage.Language FROM country INNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Code ORDER BY country.Code ASC, countrylanguage.Percentage DESC

index is 818
before:
SELECT
after:
SELECT SELECT COUNT(DISTINCT cl.CountryCode) AS total_countries FROM countrylanguage cl JOIN (     SELECT CountryCode, MAX(Percentage) AS max_percentage     FROM countrylanguage     WHERE Language = 'Spanish'     GROUP BY CountryCode ) AS subquery ON cl.CountryCode = subquery.CountryCode AND cl.Percentage = subquery.max_percentage

index is 819
before:
SELECT COUNT(country.Code) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T'
after:
SELECT COUNT(DISTINCT country.Code) FROM country  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE countrylanguage.Language = 'Spanish'  AND countrylanguage.Percentage > 50  AND countrylanguage.IsOfficial = 'T'

index is 820
before:
SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' ORDER BY countrylanguage.Percentage DESC LIMIT 1
after:
SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' GROUP BY country.Code ORDER BY countrylanguage.Percentage DESC LIMIT 1

index is 821
before:
SELECT Code FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish'))
after:
SELECT Code FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish' GROUP BY Language))

index is 822
before:
SELECT COUNT(*) FROM conductor
after:
SELECT COUNT(*) FROM conductor

index is 823
before:
SELECT COUNT(Conductor_ID) FROM conductor
after:
SELECT COUNT(*) FROM conductor

index is 824
before:
SELECT Name FROM conductor ORDER BY Age ASC
after:
SELECT Name FROM conductor ORDER BY Age ASC

index is 825
before:
SELECT Name FROM conductor ORDER BY Age
after:
SELECT Name FROM conductor ORDER BY Age

index is 826
before:
SELECT Name FROM conductor WHERE Nationality <> 'USA'
after:
SELECT Name FROM conductor WHERE Nationality <> 'USA'

index is 827
before:
SELECT Name FROM conductor WHERE Nationality != 'USA'
after:
SELECT Name FROM conductor WHERE Nationality <> 'USA'

index is 828
before:
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
after:
SELECT Record_Company  FROM orchestra  ORDER BY Year_of_Founded DESC

index is 829
before:
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
after:
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY Year_of_Founded DESC

index is 830
before:
SELECT AVG(Attendance) FROM show
after:
SELECT AVG(Attendance) FROM show

index is 831
before:
SELECT AVG(Attendance) FROM show
after:
SELECT AVG(Attendance) FROM show

index is 832
before:
SELECT max(Share) ,  min(Share) FROM performance WHERE Type != 'Live final'
after:
SELECT MAX(Share), MIN(Share)  FROM performance  WHERE Type != 'Live final';

index is 833
before:
SELECT max(Share), min(Share) FROM performance WHERE Type <> 'Live final'
after:
SELECT max(Share), min(Share)  FROM performance  WHERE Type <> 'Live final'

index is 834
before:
SELECT COUNT(DISTINCT Nationality) FROM conductor
after:
SELECT COUNT(DISTINCT Nationality) FROM conductor

index is 835
before:
SELECT COUNT(DISTINCT Nationality) FROM conductor
after:
SELECT COUNT(DISTINCT Nationality) FROM conductor

index is 836
before:
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
after:
SELECT Name FROM conductor ORDER BY Year_of_Work DESC

index is 837
before:
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
after:
SELECT Name FROM conductor ORDER BY Year_of_Work DESC

index is 838
before:
SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
after:
SELECT conductor.Name  FROM conductor  ORDER BY conductor.Year_of_Work DESC  LIMIT 1

index is 839
before:
SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
after:
SELECT Name  FROM conductor  GROUP BY Name  ORDER BY COUNT(Year_of_Work) DESC  LIMIT 1

index is 840
before:
SELECT Name, Orchestra FROM conductor JOIN orchestra ON orchestra.Conductor_ID = conductor.Conductor_ID
after:
SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON orchestra.Conductor_ID = conductor.Conductor_ID

index is 841
before:
SELECT T1.Name , T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
after:
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID

index is 842
before:
SELECT Name FROM conductor GROUP BY Name HAVING COUNT(DISTINCT Orchestra_ID) > 1
after:
SELECT Name FROM conductor GROUP BY Name HAVING COUNT(DISTINCT Orchestra_ID) > 1

index is 843
before:
SELECT Name FROM conductor JOIN orchestra ON orchestra.Conductor_ID = conductor.Conductor_ID GROUP BY conductor.Conductor_ID HAVING COUNT(orchestra.Orchestra_ID) > 1
after:
SELECT Name  FROM conductor  JOIN orchestra ON orchestra.Conductor_ID = conductor.Conductor_ID  GROUP BY conductor.Conductor_ID  HAVING COUNT(DISTINCT orchestra.Orchestra_ID) > 1

index is 844
before:
SELECT
after:
SELECT SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name ORDER BY COUNT(orchestra.Orchestra_ID) DESC LIMIT 1;

index is 845
before:
LIMIT 1
after:
SELECT conductor.Name FROM conductor JOIN orchestra ON orchestra.Conductor_ID = conductor.Conductor_ID GROUP BY conductor.Name ORDER BY COUNT(orchestra.Orchestra_ID) DESC LIMIT 1

index is 846
before:
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded > 2008
after:
SELECT conductor.Name  FROM conductor  JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID  WHERE orchestra.Year_of_Founded > 2008

index is 847
before:
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded > 2008
after:
SELECT conductor.Name  FROM conductor  JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID  WHERE orchestra.Year_of_Founded > 2008

index is 848
before:
SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company
after:
SELECT Record_Company, COUNT(DISTINCT Orchestra_ID) FROM orchestra GROUP BY Record_Company

index is 849
before:
SELECT Record_Company, COUNT(DISTINCT Orchestra_ID) FROM orchestra GROUP BY Record_Company
after:
SELECT Record_Company, COUNT(DISTINCT Orchestra_ID)  FROM orchestra  GROUP BY Record_Company

index is 850
before:
SELECT Major_Record_Format, COUNT(*) AS Count FROM orchestra GROUP BY Major_Record_Format ORDER BY Count ASC
after:
SELECT Major_Record_Format, COUNT(*) AS Count  FROM orchestra  GROUP BY Major_Record_Format  ORDER BY Count ASC

index is 851
before:
ORDER BY frequency DESC
after:
SELECT Major_Record_Format, COUNT(*) AS frequency FROM orchestra WHERE Major_Record_Format IS NOT NULL GROUP BY Major_Record_Format ORDER BY frequency DESC

index is 852
before:
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY count(*) DESC LIMIT 1
after:
SELECT Record_Company, COUNT(*) AS Orchestra_Count  FROM orchestra  GROUP BY Record_Company  ORDER BY Orchestra_Count DESC  LIMIT 1

index is 853
before:
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY count(*) DESC LIMIT 1
after:
SELECT Record_Company, COUNT(*) as Orchestra_Count  FROM orchestra  GROUP BY Record_Company  ORDER BY Orchestra_Count DESC  LIMIT 1

index is 854
before:
SELECT Orchestra FROM orchestra LEFT JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Performance_ID IS NULL
after:
SELECT orchestra.Orchestra FROM orchestra LEFT JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Performance_ID IS NULL

index is 855
before:
SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT DISTINCT Orchestra_ID FROM performance)
after:
SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (     SELECT DISTINCT Orchestra_ID     FROM performance )

index is 856
before:
SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003 AND Record_Company IN (SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003)
after:
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 AND Record_Company IN (SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003)

index is 857
before:
SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
after:
SELECT DISTINCT Record_Company  FROM orchestra  WHERE Year_of_Founded < 2003  INTERSECT  SELECT DISTINCT Record_Company  FROM orchestra  WHERE Year_of_Founded > 2003

index is 858
before:
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD'
after:
SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD'

index is 859
before:
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD'
after:
SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD'

index is 860
before:
SELECT
after:
SELECT SELECT orchestra.Year_of_Founded FROM orchestra JOIN performance ON performance.Orchestra_ID = orchestra.Orchestra_ID GROUP BY orchestra.Orchestra_ID HAVING COUNT(performance.Performance_ID) > 1

index is 861
before:
SELECT T1.Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING count(*) > 1
after:
SELECT T1.Year_of_Founded  FROM orchestra AS T1  JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID  GROUP BY T1.Orchestra_ID  HAVING count(*) > 1

index is 862
before:
SELECT COUNT(*) FROM Highschooler
after:
SELECT COUNT(ID) FROM Highschooler

index is 863
before:
SELECT COUNT(ID) FROM Highschooler
after:
SELECT COUNT(*) FROM Highschooler

index is 864
before:
SELECT name, grade FROM Highschooler
after:
SELECT name, grade FROM Highschooler

index is 865
before:
SELECT name, grade FROM Highschooler
after:
SELECT name, grade FROM Highschooler

index is 866
before:
SELECT grade FROM Highschooler
after:
SELECT grade FROM Highschooler

index is 867
before:
SELECT grade FROM Highschooler
after:
SELECT grade FROM Highschooler

index is 868
before:
SELECT grade FROM Highschooler WHERE name = 'Kyle'
after:
SELECT grade FROM Highschooler WHERE name = 'Kyle'

index is 869
before:
SELECT grade FROM Highschooler WHERE name = 'Kyle'
after:
SELECT grade FROM Highschooler WHERE name = 'Kyle'

index is 870
before:
SELECT name FROM Highschooler WHERE grade = 10
after:
SELECT Highschooler.name FROM Highschooler WHERE grade = 10

index is 871
before:
SELECT name FROM Highschooler WHERE grade = 10
after:
SELECT Highschooler.name FROM Highschooler WHERE Highschooler.grade = 10

index is 872
before:
SELECT ID FROM Highschooler WHERE name = 'Kyle'
after:
SELECT ID FROM Highschooler WHERE name = 'Kyle'

index is 873
before:
SELECT ID FROM Highschooler WHERE name = 'Kyle'
after:
SELECT ID FROM Highschooler WHERE name = 'Kyle'

index is 874
before:
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10)
after:
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10)

index is 875
before:
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10)
after:
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10)

index is 876
before:
SELECT grade, COUNT(ID) FROM Highschooler GROUP BY grade
after:
SELECT grade, COUNT(ID) AS highschooler_count FROM Highschooler GROUP BY grade

index is 877
before:
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade
after:
SELECT grade, COUNT(*)  FROM Highschooler  GROUP BY grade

index is 878
before:
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(ID) DESC LIMIT 1
after:
SELECT grade, COUNT(ID) as count FROM Highschooler GROUP BY grade ORDER BY count DESC LIMIT 1

index is 879
before:
SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
after:
SELECT grade, COUNT(*) AS highschooler_count FROM Highschooler GROUP BY grade ORDER BY highschooler_count DESC LIMIT 1

index is 880
before:
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4
after:
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4

index is 881
before:
SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4
after:
SELECT grade  FROM Highschooler  GROUP BY grade  HAVING count(*) >= 4

index is 882
before:
SELECT Highschooler.ID, COUNT(Friend.friend_id) FROM Highschooler LEFT JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID
after:
SELECT Highschooler.ID, COUNT(Friend.friend_id) AS num_of_friends FROM Highschooler LEFT JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID

index is 883
before:
SELECT T1.ID, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID
after:
SELECT T1.ID, COUNT(T2.friend_id) AS friend_count FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID

index is 884
before:
SELECT Highschooler.name, COUNT(Friend.friend_id) AS num_friends FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID
after:
SELECT Highschooler.name, COUNT(Friend.friend_id) AS num_friends FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID, Highschooler.name

index is 885
before:
SELECT T1.name ,  count(DISTINCT T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID  =  T2.student_id GROUP BY T1.ID
after:
SELECT T1.name, COUNT(DISTINCT T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name

index is 886
before:
SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY count(*) DESC LIMIT 1
after:
SELECT T1.name  FROM Highschooler AS T1  JOIN Friend AS T2 ON T1.ID = T2.student_id  GROUP BY T1.ID  ORDER BY COUNT(*) DESC  LIMIT 1

index is 887
before:
)
after:
SELECT H1.name FROM Highschooler AS H1 JOIN Friend AS F ON H1.ID = F.student_id GROUP BY H1.ID HAVING COUNT(DISTINCT F.friend_id) = (   SELECT MAX(friend_count)   FROM (     SELECT COUNT(DISTINCT F2.friend_id) AS friend_count     FROM Friend AS F2     GROUP BY F2.student_id   ) AS T )

index is 888
before:
SELECT name FROM Highschooler GROUP BY name HAVING count(*) >= 3
after:
SELECT name FROM Highschooler JOIN Friend ON Friend.student_id = Highschooler.ID GROUP BY Highschooler.ID, Highschooler.name HAVING COUNT(*) >= 3

index is 889
before:

after:
SELECT Highschooler.name  FROM Highschooler  LEFT JOIN Friend ON Highschooler.ID = Friend.student_id  WHERE Friend.friend_id IS NULL

index is 890
before:
SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id WHERE T2.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
after:
SELECT T1.name FROM Highschooler AS T1  JOIN Friend AS T2 ON T1.ID = T2.friend_id  JOIN Highschooler AS T3 ON T3.ID = T2.student_id  WHERE T3.name = 'Kyle'

index is 891
before:
SELECT DISTINCT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.friend_id WHERE Highschooler.name = 'Kyle'
after:
SELECT Friend.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id WHERE Highschooler.name = 'Kyle'

index is 892
before:
SELECT COUNT(*) FROM Friend JOIN Highschooler ON Friend.friend_id = Highschooler.ID WHERE Highschooler.name = 'Kyle'
after:
SELECT COUNT(*)  FROM Friend  JOIN Highschooler ON Friend.friend_id = Highschooler.ID  WHERE Highschooler.name = 'Kyle'  AND Friend.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')

index is 893
before:
SELECT count(T1.friend_id) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id = T2.ID WHERE T2.name = 'Kyle'
after:
SELECT COUNT(T1.friend_id) FROM Friend AS T1  JOIN Highschooler AS T2 ON T1.friend_id = T2.ID  WHERE T2.name = 'Kyle'

index is 894
before:
SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT DISTINCT student_id FROM Friend)
after:
SELECT Highschooler.ID FROM Highschooler LEFT JOIN Friend ON Highschooler.ID = Friend.student_id WHERE Friend.student_id IS NULL

index is 895
before:
SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
after:
SELECT Highschooler.ID FROM Highschooler LEFT JOIN Friend ON Highschooler.ID = Friend.student_id WHERE Friend.friend_id IS NULL

index is 896
before:
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT DISTINCT friend_id FROM Friend)
after:
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT DISTINCT student_id FROM Friend)

index is 897
before:
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend) AND ID NOT IN (SELECT friend_id FROM Friend)
after:
SELECT name FROM Highschooler WHERE ID NOT IN (   SELECT student_id FROM Friend   UNION   SELECT friend_id FROM Friend )

index is 898
before:
SELECT
after:
SELECT SELECT DISTINCT h.ID FROM Highschooler h JOIN Friend f ON f.student_id = h.ID JOIN Likes l ON l.student_id = h.ID WHERE f.friend_id != h.ID

index is 899
before:
SELECT DISTINCT ID FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend WHERE student_id IN (SELECT student_id FROM Likes))
after:
SELECT ID FROM Highschooler WHERE ID IN (     SELECT student_id     FROM Friend     WHERE student_id IN (         SELECT student_id         FROM Likes     ) )

index is 900
before:
SELECT DISTINCT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT T2.student_id FROM Friend AS T2) AND T1.ID IN (SELECT T3.student_id FROM Likes AS T3 WHERE T3.student_id <> T3.liked_id)
after:
SELECT T1.name  FROM Highschooler AS T1  WHERE T1.ID IN (SELECT T2.student_id FROM Friend AS T2)  AND T1.ID IN (SELECT T3.liked_id FROM Likes AS T3 WHERE T3.student_id <> T3.liked_id)

index is 901
before:
SELECT DISTINCT H1.name FROM Highschooler AS H1 JOIN Friend AS F ON H1.ID = F.student_id JOIN Likes AS L ON H1.ID = L.student_id
after:
SELECT DISTINCT H1.name FROM Highschooler AS H1 JOIN Friend AS F ON H1.ID = F.student_id JOIN Likes AS L ON H1.ID = L.student_id

index is 902
before:
SELECT Highschooler.ID, COUNT(*) FROM Likes JOIN Highschooler ON Likes.student_id = Highschooler.ID GROUP BY Highschooler.ID
after:
SELECT Highschooler.ID, COUNT(*) AS likes_count  FROM Likes  JOIN Highschooler ON Likes.student_id = Highschooler.ID  GROUP BY Highschooler.ID

index is 903
before:
SELECT student_id, COUNT(student_id) FROM Likes GROUP BY student_id
after:
SELECT student_id, COUNT(*) FROM Likes GROUP BY student_id

index is 904
before:
SELECT T1.name, count(T2.*) FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID
after:
SELECT T1.name, count(*)  FROM Highschooler AS T1  JOIN Likes AS T2 ON T1.ID = T2.student_id  GROUP BY T1.name

index is 905
before:
SELECT T1.name , COUNT(T2.liked_id) FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T2.student_id
after:
SELECT T1.name, COUNT(T2.liked_id)  FROM Highschooler AS T1  JOIN Likes AS T2 ON T1.ID = T2.student_id  GROUP BY T1.name

index is 906
before:
SELECT T1.name FROM Highschooler AS T1 ORDER BY (SELECT count(*) FROM Likes WHERE Likes.student_id = T1.ID) DESC LIMIT 1
after:
SELECT T1.name  FROM Highschooler AS T1  JOIN Likes ON Likes.student_id = T1.ID  GROUP BY T1.ID  ORDER BY COUNT(Likes.liked_id) DESC  LIMIT 1

index is 907
before:
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID = (SELECT student_id FROM Likes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)
after:
SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY COUNT(*) DESC LIMIT 1

index is 908
before:
SELECT T1.name FROM Highschooler AS T1 WHERE (SELECT count(*) FROM Likes WHERE Likes.student_id = T1.ID) >= 2
after:
SELECT T1.name  FROM Highschooler AS T1  JOIN Likes ON Likes.student_id = T1.ID  GROUP BY T1.name  HAVING COUNT(Likes.liked_id) >= 2

index is 909
before:
SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name HAVING count(T2.student_id) >= 2
after:
SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name HAVING COUNT(T2.liked_id) >= 2

index is 910
before:
SELECT DISTINCT T1.name FROM Highschooler AS T1 WHERE T1.grade > 5 AND T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 2)
after:
SELECT T1.name  FROM Highschooler AS T1  JOIN Friend AS F ON T1.ID = F.student_id  WHERE T1.grade > 5  GROUP BY T1.ID  HAVING COUNT(F.friend_id) >= 2

index is 911
before:
SELECT
after:
SELECT SELECT Highschooler.name FROM Highschooler JOIN Friend ON Friend.student_id = Highschooler.ID WHERE Highschooler.grade > 5 GROUP BY Highschooler.ID HAVING COUNT(DISTINCT Friend.friend_id) >= 2;

index is 912
before:
SELECT COUNT(*) FROM Likes JOIN Highschooler ON Likes.student_id = Highschooler.ID WHERE Highschooler.name = 'Kyle'
after:
SELECT COUNT(*)  FROM Likes  JOIN Highschooler ON Likes.student_id = Highschooler.ID  WHERE Highschooler.name = 'Kyle'

index is 913
before:
SELECT COUNT(student_id) FROM Likes JOIN Highschooler ON Likes.student_id = Highschooler.ID WHERE Highschooler.name = 'Kyle'
after:
SELECT COUNT(Likes.student_id) FROM Likes  JOIN Highschooler ON Likes.student_id = Highschooler.ID  WHERE Highschooler.name = 'Kyle'

index is 914
before:
SELECT avg(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)
after:
SELECT avg(grade) FROM Highschooler WHERE ID IN (SELECT friend_id FROM Friend)

index is 915
before:
SELECT AVG(T1.grade) FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Friend)
after:
SELECT AVG(T1.grade)  FROM Highschooler AS T1  WHERE T1.ID IN (SELECT student_id FROM Friend)

index is 916
before:
SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
after:
SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend WHERE student_id IS NOT NULL)

index is 917
before:
SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
after:
SELECT min(grade)  FROM Highschooler  WHERE ID NOT IN (SELECT student_id FROM Friend)

index is 918
before:
SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
after:
SELECT state FROM Owners WHERE state IN (     SELECT state     FROM Professionals )

index is 919
before:
SELECT state FROM Owners WHERE state IN (SELECT state FROM Professionals)
after:
SELECT state  FROM Owners  WHERE state IN (SELECT state FROM Professionals)

index is 920
before:
SELECT AVG(Dogs.age) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id
after:
SELECT AVG(Dogs.age) AS average_age FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;

index is 921
before:
SELECT AVG(Dogs.age) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id
after:
SELECT AVG(Dogs.age)  FROM Dogs  JOIN Treatments ON Dogs.dog_id = Treatments.dog_id

index is 922
before:
SELECT professional_id ,  last_name , cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) > 2)
after:
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) > 2)

index is 923
before:
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) > 2)
after:
SELECT professional_id, last_name, cell_number  FROM Professionals  WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) > 2)

index is 924
before:
SELECT name FROM Dogs LEFT JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.dog_id HAVING COALESCE(SUM(cost_of_treatment), 0) <= 1000
after:
SELECT name FROM Dogs LEFT JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.dog_id HAVING COALESCE(SUM(cost_of_treatment), 0) <= 1000

index is 925
before:
SELECT
after:
SELECT Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.name HAVING SUM(Treatments.cost_of_treatment) <= 1000;

index is 926
before:
SELECT DISTINCT Professionals.first_name , Owners.first_name FROM Professionals , Owners WHERE Professionals.first_name NOT IN (SELECT DISTINCT name FROM Dogs) AND Owners.first_name NOT IN (SELECT DISTINCT name FROM Dogs)
after:
SELECT DISTINCT Professionals.first_name, Owners.first_name  FROM Professionals  JOIN Owners ON Professionals.first_name = Owners.first_name  LEFT JOIN Dogs ON Professionals.first_name = Dogs.name OR Owners.first_name = Dogs.name WHERE Dogs.name IS NULL

index is 927
before:
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
after:
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

index is 928
before:
SELECT professional_id, role_code, email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
after:
SELECT professional_id, role_code, email_address  FROM Professionals  WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)

index is 929
before:
SELECT professional_id, role_code, email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
after:
SELECT professional_id, role_code, email_address  FROM Professionals  WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)

index is 930
before:
LIMIT 1
after:
SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id ORDER BY COUNT(Dogs.dog_id) DESC LIMIT 1

index is 931
before:
SELECT owner_id, first_name, last_name FROM Owners ORDER BY (SELECT COUNT(*) FROM Dogs WHERE Dogs.owner_id = Owners.owner_id) DESC LIMIT 1
after:
SELECT owner_id, first_name, last_name  FROM Owners  ORDER BY (SELECT COUNT(*) FROM Dogs WHERE Dogs.owner_id = Owners.owner_id) DESC  LIMIT 1

index is 932
before:
SELECT professional_id, role_code, first_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING count(*) >= 2)
after:
SELECT professional_id, role_code, first_name  FROM Professionals  WHERE professional_id IN (     SELECT professional_id      FROM Treatments      GROUP BY professional_id      HAVING COUNT(*) >= 2 )

index is 933
before:
SELECT professional_id, role_code, first_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) >= 2)
after:
SELECT professional_id, role_code, first_name FROM Professionals WHERE professional_id IN (   SELECT professional_id   FROM Treatments   GROUP BY professional_id   HAVING COUNT(*) >= 2 )

index is 934
before:
SELECT Breeds.breed_name FROM Breeds JOIN Dogs ON Dogs.breed_code = Breeds.breed_code GROUP BY Breeds.breed_name ORDER BY count(Dogs.dog_id) DESC LIMIT 1
after:
SELECT Breeds.breed_name, COUNT(Dogs.dog_id) AS dog_count FROM Breeds JOIN Dogs ON Dogs.breed_code = Breeds.breed_code GROUP BY Breeds.breed_name ORDER BY dog_count DESC LIMIT 1

index is 935
before:
LIMIT 1
after:
SELECT breed_name, COUNT(*) AS dog_count FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1

index is 936
before:
SELECT T1.owner_id, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id, T1.last_name ORDER BY count(T3.treatment_id) DESC LIMIT 1
after:
SELECT T1.owner_id, T1.last_name  FROM Owners AS T1  JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id  GROUP BY T1.owner_id, T1.last_name  ORDER BY COUNT(T3.treatment_id) DESC  LIMIT 1

index is 937
before:
```
after:
SELECT T1.owner_id, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id JOIN Professionals AS T4 ON T3.professional_id = T4.professional_id GROUP BY T1.owner_id ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1

index is 938
before:
LIMIT 1)
after:
SELECT Treatment_Types.treatment_type_description  FROM Treatment_Types  WHERE Treatment_Types.treatment_type_code =      (SELECT Treatments.treatment_type_code       FROM Treatments       GROUP BY Treatments.treatment_type_code       ORDER BY SUM(Treatments.cost_of_treatment) ASC       LIMIT 1)

index is 939
before:
SELECT T1.treatment_type_description FROM Treatment_Types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T2.treatment_type_code ORDER BY sum(T2.cost_of_treatment) ASC LIMIT 1
after:
SELECT T1.treatment_type_description  FROM Treatment_Types AS T1  JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code  GROUP BY T1.treatment_type_description  ORDER BY SUM(T2.cost_of_treatment) ASC  LIMIT 1

index is 940
before:
SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T3.dog_id = T2.dog_id GROUP BY T1.owner_id , T1.zip_code ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
after:
SELECT T1.owner_id, T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T3.dog_id = T2.dog_id GROUP BY T1.owner_id, T1.zip_code ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1

index is 941
before:
```
after:
SELECT Owners.owner_id, Owners.zip_code FROM Owners WHERE Owners.owner_id = (   SELECT Dogs.owner_id   FROM Dogs   JOIN Treatments ON Treatments.dog_id = Dogs.dog_id   GROUP BY Dogs.owner_id   ORDER BY SUM(Treatments.cost_of_treatment) DESC   LIMIT 1 )

index is 942
before:
SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 WHERE T1.professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2)
after:
SELECT T1.professional_id, T1.cell_number  FROM Professionals AS T1  WHERE T1.professional_id IN (     SELECT T.professional_id      FROM Treatments AS T      GROUP BY T.professional_id      HAVING COUNT(DISTINCT T.treatment_type_code) >= 2 )

index is 943
before:
SELECT professional_id ,  cell_number FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) = 1)
after:
SELECT professional_id, cell_number  FROM Professionals  WHERE professional_id IN (   SELECT professional_id    FROM Treatments    GROUP BY professional_id    HAVING COUNT(DISTINCT treatment_type_code) >= 2 )

index is 944
before:
SELECT first_name ,  last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments WHERE cost_of_treatment  <  (SELECT avg(cost_of_treatment) FROM Treatments))
after:
SELECT first_name, last_name FROM Professionals WHERE professional_id IN (   SELECT professional_id   FROM Treatments   WHERE cost_of_treatment < (     SELECT AVG(cost_of_treatment)     FROM Treatments   ) )

index is 945
before:
SELECT first_name ,  last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments WHERE cost_of_treatment  <  (SELECT avg(cost_of_treatment) FROM Treatments))
after:
SELECT first_name, last_name  FROM Professionals  WHERE professional_id IN (   SELECT professional_id    FROM Treatments    WHERE cost_of_treatment < (     SELECT avg(cost_of_treatment)      FROM Treatments   ) )

index is 946
before:
SELECT date_of_treatment, first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id
after:
SELECT Treatments.date_of_treatment, Professionals.first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id

index is 947
before:
SELECT Treatments.date_of_treatment, Professionals.first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id
after:
SELECT Treatments.date_of_treatment, Professionals.first_name  FROM Treatments  JOIN Professionals ON Treatments.professional_id = Professionals.professional_id

index is 948
before:
SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code
after:
SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description  FROM Treatments  JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code

index is 949
before:
JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code
after:
SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code

index is 950
before:
JOIN Sizes ON Dogs.size_code = Sizes.size_code
after:
SELECT Owners.first_name, Owners.last_name, Sizes.size_description  FROM Owners  JOIN Dogs ON Dogs.owner_id = Owners.owner_id  JOIN Sizes ON Dogs.size_code = Sizes.size_code

index is 951
before:
SELECT
after:
SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Sizes ON Dogs.size_code = Sizes.size_code

index is 952
before:
SELECT T1.first_name, T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
after:
SELECT T1.first_name, T2.name  FROM Owners AS T1  JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id

index is 953
before:
SELECT first_name, name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id
after:
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id

index is 954
before:
SELECT
after:
SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code JOIN Treatments ON Treatments.dog_id = Dogs.dog_id WHERE Breeds.breed_code = (   SELECT breed_code   FROM Breeds   GROUP BY breed_code   ORDER BY COUNT(*) ASC   LIMIT 1 )

index is 955
before:
```
after:
SELECT D.name, T.date_of_treatment FROM Dogs AS D JOIN Breeds AS B ON D.breed_code = B.breed_code JOIN Treatments AS T ON T.dog_id = D.dog_id GROUP BY D.name HAVING COUNT(DISTINCT D.breed_code) = (     SELECT COUNT(DISTINCT B.breed_code)     FROM Breeds AS B )

index is 956
before:
SELECT T2.first_name , T1.name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T2.state = 'Virginia'
after:
SELECT T2.first_name, T1.name  FROM Dogs AS T1  JOIN Owners AS T2 ON T1.owner_id = T2.owner_id  WHERE T2.state = 'Virginia'

index is 957
before:
WHERE T1.state = 'Virginia'
after:
SELECT T1.first_name, T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'

index is 958
before:
JOIN Treatments ON Treatments.dog_id = Dogs.dog_id
after:
SELECT date_arrived, date_departed FROM Dogs JOIN Treatments ON Treatments.dog_id = Dogs.dog_id

index is 959
before:
```
after:
SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id

index is 960
before:
SELECT last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY age ASC LIMIT 1
after:
SELECT Owners.last_name  FROM Owners  JOIN Dogs ON Owners.owner_id = Dogs.owner_id  ORDER BY Dogs.age DESC  LIMIT 1

index is 961
before:
SELECT last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY Dogs.date_of_birth ASC LIMIT 1
after:
SELECT Owners.last_name  FROM Owners  JOIN Dogs ON Owners.owner_id = Dogs.owner_id  ORDER BY Dogs.date_of_birth  LIMIT 1

index is 962
before:
SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'
after:
SELECT email_address  FROM Professionals  WHERE state = 'Hawaii' OR state = 'Wisconsin'

index is 963
before:
SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'
after:
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')

index is 964
before:
SELECT date_arrived, date_departed FROM Dogs
after:
SELECT date_arrived, date_departed  FROM Dogs

index is 965
before:
SELECT date_arrived, date_departed FROM Dogs
after:
SELECT date_arrived, date_departed FROM Dogs

index is 966
before:
SELECT COUNT(DISTINCT T2.dog_id) FROM Treatments AS T1 JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id
after:
SELECT COUNT(DISTINCT T2.dog_id) FROM Treatments AS T1 JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id

index is 967
before:
SELECT COUNT(DISTINCT Treatments.dog_id) FROM Treatments
after:
SELECT COUNT(DISTINCT Treatments.dog_id) AS num_of_dogs FROM Treatments

index is 968
before:
SELECT COUNT(DISTINCT T1.professional_id) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Dogs AS T3 ON T2.dog_id = T3.dog_id
after:
SELECT COUNT(DISTINCT T1.professional_id)  FROM Professionals AS T1  JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  JOIN Dogs AS T3 ON T2.dog_id = T3.dog_id

index is 969
before:
SELECT COUNT(DISTINCT T1.professional_id) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id
after:
SELECT COUNT(DISTINCT T1.professional_id)  FROM Professionals AS T1  JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id

index is 970
before:
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
after:
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'

index is 971
before:
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
after:
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'

index is 972
before:
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
after:
SELECT first_name, last_name, email_address  FROM Owners  WHERE state LIKE '%North%'

index is 973
before:
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
after:
SELECT first_name, last_name, email_address  FROM Owners  WHERE state LIKE '%North%'

index is 974
before:
SELECT count(*) FROM Dogs WHERE age < (SELECT avg(age) FROM Dogs)
after:
SELECT COUNT(*)  FROM Dogs  WHERE age < (SELECT AVG(age) FROM Dogs)

index is 975
before:
SELECT COUNT(dog_id) FROM Dogs WHERE age < (SELECT avg(age) FROM Dogs)
after:
SELECT COUNT(dog_id) FROM Dogs WHERE age < (SELECT avg(age) FROM Dogs)

index is 976
before:
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
after:
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1

index is 977
before:
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
after:
SELECT cost_of_treatment  FROM Treatments  ORDER BY date_of_treatment DESC  LIMIT 1

index is 978
before:
SELECT COUNT(*) FROM Dogs WHERE dog_id NOT IN (SELECT DISTINCT dog_id FROM Treatments)
after:
SELECT COUNT(*) FROM Dogs LEFT JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Treatments.dog_id IS NULL

index is 979
before:
SELECT COUNT(dog_id) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)
after:
SELECT COUNT(dog_id) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)

index is 980
before:
SELECT COUNT(*) FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.owner_id IS NULL;
after:
SELECT COUNT(*) FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.owner_id IS NULL;

index is 981
before:
SELECT COUNT(*) FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.dog_id IS NULL
after:
SELECT COUNT(*) FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.owner_id IS NULL

index is 982
before:
SELECT count(DISTINCT T1.professional_id) FROM Professionals AS T1 WHERE T1.professional_id NOT IN (SELECT DISTINCT T2.professional_id FROM Treatments AS T2)
after:
SELECT count(DISTINCT T1.professional_id)  FROM Professionals AS T1  WHERE T1.professional_id NOT IN (SELECT DISTINCT T2.professional_id FROM Treatments AS T2)

index is 983
before:
SELECT COUNT(professional_id) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
after:
SELECT COUNT(professional_id) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)

index is 984
before:
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1
after:
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1

index is 985
before:
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1
after:
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1

index is 986
before:
SELECT AVG(age) FROM Dogs
after:
SELECT AVG(age) AS average_age FROM Dogs

index is 987
before:
SELECT AVG(age) FROM Dogs
after:
SELECT AVG(age) AS average_age FROM Dogs

index is 988
before:
SELECT MAX(age) FROM Dogs
after:
SELECT MAX(age) AS oldest_age FROM Dogs

index is 989
before:
SELECT MAX(age) FROM Dogs
after:
SELECT MAX(age) AS oldest_dog_age FROM Dogs

index is 990
before:
SELECT charge_type, charge_amount FROM Charges
after:
SELECT charge_type, charge_amount FROM Charges

index is 991
before:
SELECT charge_type, charge_amount FROM Charges
after:
SELECT charge_type, charge_amount FROM Charges

index is 992
before:
SELECT MAX(charge_amount) FROM Charges
after:
SELECT charge_amount FROM Charges ORDER BY charge_amount DESC LIMIT 1

index is 993
before:
SELECT MAX(charge_amount) FROM Charges
after:
SELECT charge_amount FROM Charges ORDER BY charge_amount DESC LIMIT 1

index is 994
before:
SELECT email_address, cell_number, home_phone FROM Professionals
after:
SELECT email_address, cell_number, home_phone FROM Professionals

index is 995
before:
SELECT email_address, cell_number, home_phone FROM Professionals
after:
SELECT email_address, cell_number, home_phone FROM Professionals

index is 996
before:
SELECT Breeds.breed_name, Sizes.size_description FROM Breeds, Dogs, Sizes GROUP BY Breeds.breed_name, Sizes.size_description
after:
SELECT Breeds.breed_name, Sizes.size_description FROM Breeds CROSS JOIN Sizes

index is 997
before:
SELECT DISTINCT T1.breed_name, T2.size_description FROM Breeds AS T1, Sizes AS T2, Dogs AS T3 WHERE T3.breed_code = T1.breed_code AND T3.size_code = T2.size_code
after:
SELECT DISTINCT T1.breed_name, T2.size_description  FROM Breeds AS T1  JOIN Dogs AS T3 ON T3.breed_code = T1.breed_code  JOIN Sizes AS T2 ON T3.size_code = T2.size_code

index is 998
before:
SELECT Professionals.first_name , Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code
after:
SELECT Professionals.first_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code

index is 999
before:
SELECT Professionals.first_name , Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code
after:
SELECT Professionals.first_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;

index is 1000
before:
SELECT COUNT(Singer_ID) FROM singer
after:
SELECT COUNT(*) FROM singer

index is 1001
before:
SELECT COUNT(*) FROM singer
after:
SELECT COUNT(DISTINCT Singer_ID) FROM singer

index is 1002
before:
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
after:
SELECT singer.Name  FROM singer  ORDER BY singer.Net_Worth_Millions ASC

index is 1003
before:
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
after:
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC

index is 1004
before:
SELECT Birth_Year, Citizenship FROM singer
after:
SELECT Birth_Year, Citizenship FROM singer

index is 1005
before:
SELECT Birth_Year, Citizenship FROM singer
after:
SELECT Birth_Year, Citizenship FROM singer

index is 1006
before:
SELECT Name FROM singer WHERE Citizenship <> 'France'
after:
SELECT Name FROM singer WHERE Citizenship <> 'France'

index is 1007
before:
SELECT Name FROM singer WHERE Citizenship != 'French'
after:
SELECT Name FROM singer WHERE Citizenship <> 'French'

index is 1008
before:
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949
after:
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949

index is 1009
before:
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949
after:
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949

index is 1010
before:
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
after:
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1

index is 1011
before:
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
after:
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1

index is 1012
before:
SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship
after:
SELECT Citizenship, COUNT(DISTINCT Singer_ID) FROM singer GROUP BY Citizenship

index is 1013
before:
SELECT Citizenship, COUNT(*) AS Count FROM singer GROUP BY Citizenship
after:
SELECT Citizenship, COUNT(*) AS Count FROM singer GROUP BY Citizenship

index is 1014
before:
SELECT Citizenship, COUNT(*) AS Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1
after:
SELECT Citizenship, COUNT(*) AS Count  FROM singer  GROUP BY Citizenship  ORDER BY Count DESC  LIMIT 1

index is 1015
before:
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
after:
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1

index is 1016
before:
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
after:
SELECT Citizenship, MAX(Net_Worth_Millions) AS Max_Net_Worth FROM singer GROUP BY Citizenship

index is 1017
before:
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
after:
SELECT Citizenship, MAX(Net_Worth_Millions)  FROM singer  GROUP BY Citizenship

index is 1018
before:
SELECT Title, Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID
after:
SELECT song.Title, singer.Name  FROM song  JOIN singer ON song.Singer_ID = singer.Singer_ID

index is 1019
before:
SELECT Title, Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID
after:
SELECT Title, Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID

index is 1020
before:
SELECT DISTINCT Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000
after:
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000

index is 1021
before:
SELECT DISTINCT Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000
after:
SELECT Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;

index is 1022
before:
SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Singer_ID HAVING COUNT(T2.Singer_ID) > 1
after:
SELECT T1.Name  FROM singer AS T1  JOIN song AS T2  ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name  HAVING COUNT(T2.Singer_ID) > 1

index is 1023
before:
SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T2.Singer_ID = T1.Singer_ID GROUP BY T1.Singer_ID HAVING COUNT(T2.Song_ID) > 1
after:
SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T2.Singer_ID = T1.Singer_ID GROUP BY T1.Name HAVING COUNT(T2.Song_ID) > 1

index is 1024
before:
SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
after:
SELECT T1.Name, SUM(T2.Sales)  FROM singer AS T1  JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name

index is 1025
before:
SELECT T1.Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name
after:
SELECT T1.Name, SUM(T2.Sales) AS Total_Sales FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name

index is 1026
before:
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT DISTINCT Singer_ID FROM song)
after:
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT DISTINCT Singer_ID FROM song)

index is 1027
before:
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT DISTINCT Singer_ID FROM song)
after:
SELECT Name AS sname FROM singer WHERE Singer_ID NOT IN (SELECT DISTINCT Singer_ID FROM song)

index is 1028
before:
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 AND Citizenship IN (SELECT Citizenship FROM singer WHERE Birth_Year > 1955)
after:
SELECT DISTINCT Citizenship  FROM singer  WHERE Birth_Year < 1945    AND Citizenship IN (SELECT Citizenship                        FROM singer                        WHERE Birth_Year > 1955)

index is 1029
before:
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 AND Birth_Year > 1955
after:
SELECT The given SQLite SQL query has some issues. The conditions in the WHERE clause are contradictory. Birth year cannot be both before 1945 and after 1955 at the same time. To fix this query and retrieve the citizenships shared by singers with a birth year before 1945 OR after 1955, you can use the following fixed SQL query:  ```sql SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955; ```  This query selects distinct citizenship values from the "singer" table where the birth year is either before 1945 or after 1955. The DISTINCT keyword ensures that only unique citizenship values are returned.

index is 1030
before:
Note: Since the schema link provided does not specify any specific columns or conditions, the query simply counts the total number of rows in the "Other_Available_Features" table.
after:
SELECT COUNT(*) FROM Other_Available_Features

index is 1031
before:
SELECT feature_type_name FROM Other_Available_Features JOIN Ref_Feature_Types ON Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code WHERE Other_Available_Features.feature_name = 'AirCon'
after:
SELECT feature_type_name  FROM Other_Available_Features  JOIN Ref_Feature_Types  ON Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code  WHERE Other_Available_Features.feature_name = 'AirCon'

index is 1032
before:
SELECT
after:
SELECT SELECT Ref_Property_Types.property_type_description FROM Properties JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code WHERE Properties.property_type_code = [property_code];

index is 1033
before:
SELECT property_name FROM Properties JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code WHERE (Ref_Property_Types.property_type_description = 'house' OR Ref_Property_Types.property_type_description = 'apartment') AND room_count > 1
after:
SELECT Properties.property_name  FROM Properties  JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code  WHERE (Ref_Property_Types.property_type_description = 'house' OR Ref_Property_Types.property_type_description = 'apartment')  AND Properties.room_count > 1

