index is 0
before:
SELECT COUNT(Singer_ID) FROM singer
after:
SELECT COUNT(DISTINCT Singer_ID) FROM singer

index is 1
before:
SELECT COUNT(*) FROM singer
after:
SELECT COUNT(*) AS Total_Singers FROM singer

index is 2
before:
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
after:
SELECT Name, Country, Age FROM singer ORDER BY Age ASC

index is 3
before:
SELECT Name, Country, Age FROM singer ORDER BY Age DESC
after:
SELECT Name, Country, Age FROM singer ORDER BY Age DESC

index is 4
before:
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'
after:
SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age FROM singer WHERE Country = 'France'

index is 5
before:
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'French'
after:
SELECT AVG(Age) as Average_Age, MIN(Age) as Minimum_Age, MAX(Age) as Maximum_Age FROM singer WHERE Country = 'French'

index is 6
before:
SELECT Name, Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer)
after:
SELECT singer.Name, singer.Song_Name, singer.Song_release_year  FROM singer  WHERE singer.Age = (SELECT MIN(singer.Age) FROM singer)

index is 7
before:
SELECT Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer)
after:
SELECT singer.Song_Name, singer.Song_release_year FROM singer WHERE singer.Age = (SELECT MIN(singer.Age) FROM singer)

index is 8
before:
SELECT DISTINCT Country FROM singer WHERE Age > 20
after:
SELECT DISTINCT Country FROM singer WHERE Age > 20

index is 9
before:
SELECT DISTINCT Country FROM singer WHERE Age > 20
after:
SELECT DISTINCT Country FROM singer WHERE Age > 20

index is 10
before:
SELECT Country, COUNT(*) FROM singer GROUP BY Country
after:
SELECT Country, COUNT(Singer_ID) FROM singer GROUP BY Country

index is 11
before:
SELECT COUNT(Singer_ID), Country FROM singer GROUP BY Country
after:
SELECT COUNT(Singer_ID) AS Singer_Count, Country  FROM singer  GROUP BY Country

index is 12
before:
SELECT Song_Name FROM singer WHERE Age > (SELECT avg(Age) FROM singer)
after:
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)

index is 13
before:
SELECT Song_Name FROM singer WHERE Age > (SELECT avg(Age) FROM singer)
after:
SELECT singer.Song_Name FROM singer WHERE singer.Age > (     SELECT AVG(singer.Age)     FROM singer )

index is 14
before:
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
after:
SELECT Location, Name  FROM stadium  WHERE Capacity BETWEEN 5000 AND 10000

index is 15
before:
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
after:
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000

index is 16
before:
SELECT MAX(Capacity), AVG(Capacity) FROM stadium
after:
SELECT MAX(Capacity) AS Maximum_Capacity, AVG(Capacity) AS Average_Capacity FROM stadium

index is 17
before:
SELECT AVG(Capacity), MAX(Capacity) FROM stadium
after:
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Maximum_Capacity FROM stadium

index is 18
before:
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
after:
SELECT Name, Capacity  FROM stadium  WHERE Average = (SELECT MAX(Average) FROM stadium)

index is 19
before:
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)
after:
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)

index is 20
before:
SELECT COUNT(*) FROM concert WHERE Year = 2014 OR Year = 2015
after:
SELECT COUNT(DISTINCT concert_ID) FROM concert WHERE Year = 2014 OR Year = 2015

index is 21
before:
SELECT COUNT(*) FROM concert WHERE Year = 2014 OR Year = 2015
after:
SELECT COUNT(*) FROM concert WHERE Year = 2014 OR Year = 2015

index is 22
before:
SELECT T1.Name, count(T2.concert_ID) FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Name
after:
SELECT T1.Name, COUNT(T2.concert_ID) FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Name

index is 23
before:
SELECT T1.*, count(T2.concert_ID) FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID
after:
SELECT T1.Stadium_ID, T1.Location, T1.Name, T1.Capacity, T1.Highest, T1.Lowest, T1.Average, COUNT(T2.concert_ID) FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID

index is 24
before:
SELECT Name, Capacity FROM stadium WHERE Stadium_ID = (SELECT Stadium_ID FROM concert WHERE Year >= 2014 GROUP BY Stadium_ID HAVING COUNT(*) = (SELECT MAX(concert_count) FROM (SELECT COUNT(*) as concert_count FROM concert WHERE Year >= 2014 GROUP BY Stadium_ID) AS temp))
after:
SELECT Name, Capacity  FROM stadium  WHERE Stadium_ID = (     SELECT Stadium_ID      FROM concert      WHERE Year >= 2014      GROUP BY Stadium_ID      HAVING COUNT(*) = (         SELECT MAX(concert_count)          FROM (             SELECT COUNT(*) as concert_count              FROM concert              WHERE Year >= 2014              GROUP BY Stadium_ID         ) AS temp     ) )

index is 25
before:
This query will select the name and capacity from the `stadium` table, joining it with the `concert` table on the Stadium_ID. It filters the concerts that occurred after 2013 and orders them in descending order based on the year. Finally, it limits the result to the first row, which will give us the stadium with the most concerts after 2013.
after:
SELECT S.Name, S.Capacity FROM stadium AS S JOIN concert AS C ON C.Stadium_ID = S.Stadium_ID WHERE C.Year > 2013 GROUP BY S.Name, S.Capacity ORDER BY COUNT(*) DESC LIMIT 1

index is 26
before:
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
after:
SELECT Year, COUNT(*) AS Concert_Count FROM concert GROUP BY Year ORDER BY Concert_Count DESC LIMIT 1

index is 27
before:
SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1
after:
SELECT Year, COUNT(*) AS concert_count FROM concert GROUP BY Year ORDER BY concert_count DESC LIMIT 1

index is 28
before:
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)
after:
SELECT Name  FROM stadium  WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)

index is 29
before:
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)
after:
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)

index is 30
before:
SELECT DISTINCT Country FROM singer WHERE Age > 40 AND Country IN (SELECT DISTINCT Country FROM singer WHERE Age < 30)
after:
SELECT DISTINCT Country  FROM singer  WHERE Age > 40  AND Country IN (     SELECT DISTINCT Country      FROM singer      WHERE Age < 30 )

index is 31
before:
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014)
after:
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014)

index is 32
before:
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014)
after:
SELECT Name FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.concert_ID IS NULL OR concert.Year <> 2014

index is 33
before:
SELECT concert_Name, Theme, COUNT(Singer_ID) AS number_of_singers FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert_Name, Theme
after:
SELECT concert_Name, Theme, COUNT(singer.Singer_ID) AS number_of_singers  FROM concert  JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID  JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID  GROUP BY concert_Name, Theme

index is 34
before:
SELECT concert_Name, Theme, COUNT(Singer_ID) FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert_Name, Theme
after:
SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID)  FROM concert  JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID  GROUP BY concert.concert_Name, concert.Theme

index is 35
before:
SELECT Name, COUNT(concert_ID) FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY Name
after:
SELECT singer.Name, COUNT(singer_in_concert.concert_ID)  FROM singer  JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID  GROUP BY singer.Name

index is 36
before:
GROUP BY singer.Singer_ID, Name
after:
SELECT Name, COUNT(concert_ID)  FROM singer  JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID  GROUP BY singer.Singer_ID, Name

index is 37
before:
SELECT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014
after:
SELECT singer.Name  FROM singer  JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID  JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID  WHERE concert.Year = 2014

index is 38
before:
SELECT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014
after:
SELECT singer.Name  FROM singer  JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID  JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID  WHERE concert.Year = 2014

index is 39
before:
WHERE Song_Name LIKE '%Hey%'
after:
SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE '%Hey%'

index is 40
before:
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'
after:
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'

index is 41
before:
SELECT
after:
SELECT SELECT stadium.Name, stadium.Location FROM stadium INNER JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year IN (2014, 2015) GROUP BY stadium.Name, stadium.Location

index is 42
before:
SELECT Name, Location FROM stadium WHERE Stadium_ID IN (SELECT Stadium_ID FROM concert WHERE Year = 2014) AND Stadium_ID IN (SELECT Stadium_ID FROM concert WHERE Year = 2015)
after:
SELECT Name, Location  FROM stadium  WHERE Stadium_ID IN (     SELECT Stadium_ID      FROM concert      WHERE Year = 2014 )  AND Stadium_ID IN (     SELECT Stadium_ID      FROM concert      WHERE Year = 2015 )

index is 43
before:
SELECT COUNT(concert_ID) FROM concert, stadium WHERE stadium.Capacity = (SELECT MAX(Capacity) FROM stadium) AND concert.Stadium_ID = stadium.Stadium_ID
after:
SELECT COUNT(concert_ID)  FROM concert  JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Capacity = (SELECT MAX(Capacity) FROM stadium)

index is 44
before:
SELECT COUNT(concert_ID) FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Capacity = (SELECT MAX(Capacity) FROM stadium)
after:
SELECT COUNT(concert_ID) FROM concert  JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID  WHERE stadium.Capacity = (SELECT MAX(Capacity) FROM stadium)

index is 45
before:
SELECT COUNT(PetID) FROM Pets WHERE weight > 10
after:
SELECT COUNT(DISTINCT PetID) FROM Pets WHERE weight > 10

index is 46
before:
SELECT COUNT(*) FROM Pets WHERE weight > 10
after:
SELECT COUNT(*) FROM Pets WHERE weight > 10

index is 47
before:
SELECT weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')
after:
SELECT Pets.weight  FROM Pets  JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID  JOIN Student ON Has_Pet.StuID = Student.StuID  WHERE Pets.PetType = 'dog'  ORDER BY Pets.pet_age ASC  LIMIT 1

index is 48
before:
SELECT weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
after:
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')

index is 49
before:
SELECT MAX(weight) AS max_weight, PetType FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID GROUP BY PetType
after:
SELECT MAX(weight) AS max_weight, PetType FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID GROUP BY PetType

index is 50
before:
SELECT Pets.PetType, MAX(Pets.weight) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID GROUP BY Pets.PetType
after:
SELECT Pets.PetType, MAX(Pets.weight)  FROM Pets  JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID  GROUP BY Pets.PetType

index is 51
before:
SELECT COUNT(PetID) FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.Age > 20
after:
SELECT COUNT(Has_Pet.PetID) FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.Age > 20

index is 52
before:
WHERE Student.Age > 20
after:
SELECT COUNT(DISTINCT Has_Pet.PetID)  FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 20

index is 53
before:
WHERE Pets.PetType = 'dog' AND Student.Sex = 'F'
after:
SELECT COUNT(DISTINCT Has_Pet.PetID) FROM Has_Pet  JOIN Student ON Has_Pet.StuID = Student.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Pets.PetType = 'dog' AND Student.Sex = 'F'

index is 54
before:
SELECT COUNT(*) FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Pets.PetType = 'dog' AND Student.Sex = 'female'
after:
SELECT COUNT(DISTINCT Has_Pet.PetID) FROM Has_Pet  JOIN Pets ON Has_Pet.PetID = Pets.PetID  JOIN Student ON Has_Pet.StuID = Student.StuID  WHERE Pets.PetType = 'dog' AND Student.Sex = 'female'

index is 55
before:
SELECT COUNT(DISTINCT PetType) FROM Pets
after:
SELECT COUNT(DISTINCT PetType) FROM Pets

index is 56
before:
SELECT COUNT(DISTINCT PetType) FROM Pets
after:
SELECT COUNT(DISTINCT PetType) FROM Pets

index is 57
before:
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' OR Pets.PetType = 'dog'
after:
SELECT DISTINCT Student.Fname  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Pets.PetType IN ('cat', 'dog')

index is 58
before:
SELECT DISTINCT Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' OR Pets.PetType = 'dog'
after:
SELECT DISTINCT Student.Fname  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Pets.PetType = 'cat' OR Pets.PetType = 'dog'

index is 59
before:
SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat')) AND StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'dog'))
after:
SELECT Fname  FROM Student  WHERE StuID IN (   SELECT StuID    FROM Has_Pet    WHERE PetID IN (     SELECT PetID      FROM Pets      WHERE PetType = 'cat'   ) )  AND StuID IN (   SELECT StuID    FROM Has_Pet    WHERE PetID IN (     SELECT PetID      FROM Pets      WHERE PetType = 'dog'   ) )

index is 60
before:
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cats' INTERSECT SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dogs'
after:
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cats' AND Student.StuID IN (   SELECT Student.StuID   FROM Student   JOIN Has_Pet ON Student.StuID = Has_Pet.StuID   JOIN Pets ON Has_Pet.PetID = Pets.PetID   WHERE Pets.PetType = 'dogs' )

index is 61
before:
SELECT Major ,  Age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat'))
after:
SELECT Major, Age FROM Student WHERE StuID NOT IN (   SELECT StuID   FROM Has_Pet   WHERE PetID IN (     SELECT PetID     FROM Pets     WHERE PetType = 'cat'   ) )

index is 62
before:
SELECT Major ,  Age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat'))
after:
SELECT Major, Age FROM Student WHERE StuID NOT IN (   SELECT StuID   FROM Has_Pet   WHERE PetID IN (     SELECT PetID     FROM Pets     WHERE PetType = 'cat'   ) )

index is 63
before:
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat'))
after:
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN (     SELECT Has_Pet.StuID     FROM Has_Pet     INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID     WHERE Pets.PetType = 'cat' )

index is 64
before:
SELECT DISTINCT Student.StuID FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat')
after:
SELECT DISTINCT Student.StuID FROM Student WHERE Student.StuID NOT IN (     SELECT Has_Pet.StuID     FROM Has_Pet     JOIN Pets ON Has_Pet.PetID = Pets.PetID     WHERE Pets.PetType = 'cat'         AND Has_Pet.StuID IN (             SELECT StuID             FROM Student         ) )

index is 65
before:
SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' AND Pets.PetType <> 'cat'
after:
SELECT Student.Fname, Student.Age  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Pets.PetType = 'dog'  AND Student.StuID NOT IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat')

index is 66
before:
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' AND Student.StuID NOT IN (SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat')
after:
SELECT DISTINCT Student.Fname  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Pets.PetType = 'dog'  AND Student.StuID NOT IN (     SELECT Student.StuID      FROM Student      JOIN Has_Pet ON Student.StuID = Has_Pet.StuID      JOIN Pets ON Has_Pet.PetID = Pets.PetID      WHERE Pets.PetType = 'cat' )

index is 67
before:
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)
after:
SELECT PetType, weight  FROM Pets  WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)

index is 68
before:
SELECT PetType, pet_age, weight FROM Pets ORDER BY pet_age ASC, weight ASC LIMIT 1
after:
SELECT PetType, pet_age, weight FROM Pets ORDER BY pet_age ASC, weight ASC LIMIT 1

index is 69
before:
SELECT PetID, weight FROM Pets WHERE pet_age > 1
after:
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.pet_age > 1

index is 70
before:
SELECT PetID, weight FROM Pets WHERE pet_age > 1
after:
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.pet_age > 1

index is 71
before:
SELECT PetType, AVG(pet_age), MAX(pet_age) FROM Pets GROUP BY PetType
after:
SELECT PetType, AVG(pet_age), MAX(pet_age)  FROM Pets  GROUP BY PetType

index is 72
before:
SELECT PetType, AVG(pet_age), MAX(pet_age) FROM Pets GROUP BY PetType
after:
SELECT PetType, AVG(pet_age), MAX(pet_age) FROM Pets GROUP BY PetType

index is 73
before:
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
after:
SELECT PetType, AVG(weight)  FROM Pets  GROUP BY PetType

index is 74
before:
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType
after:
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType

index is 75
before:
SELECT Fname, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet)
after:
SELECT Fname, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet)

index is 76
before:
SELECT DISTINCT Fname, Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID
after:
SELECT Fname, Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID

index is 77
before:
WHERE Student.LName = 'Smith'
after:
SELECT Pets.PetID  FROM Pets  JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.LName = 'Smith'

index is 78
before:
SELECT Pets.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'Smith'
after:
SELECT Pets.PetID  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Student.LName = 'Smith'

index is 79
before:
SELECT Has_Pet.StuID, COUNT(Pets.PetID) FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Has_Pet.StuID
after:
SELECT Student.StuID, COUNT(Has_Pet.PetID)  FROM Has_Pet  JOIN Pets ON Has_Pet.PetID = Pets.PetID  GROUP BY Student.StuID

index is 80
before:
SELECT Has_Pet.StuID, count(Has_Pet.PetID) FROM Has_Pet GROUP BY Has_Pet.StuID
after:
SELECT Student.StuID, count(Has_Pet.PetID)  FROM Has_Pet  JOIN Student ON Has_Pet.StuID = Student.StuID GROUP BY Student.StuID

index is 81
before:
SELECT T1.Fname ,  T1.Sex FROM Student AS T1 WHERE T1.StuID IN (SELECT T2.StuID FROM Has_Pet AS T2 GROUP BY T2.StuID HAVING count(*) > 1)
after:
SELECT T1.Fname, T1.Sex FROM Student AS T1 WHERE T1.StuID IN (   SELECT T2.StuID   FROM Has_Pet AS T2   GROUP BY T2.StuID   HAVING COUNT(*) > 1 )

index is 82
before:
SELECT DISTINCT Fname, Sex FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID HAVING COUNT(PetID) > 1
after:
SELECT Fname, Sex  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  GROUP BY Student.StuID  HAVING COUNT(Has_Pet.PetID) > 1

index is 83
before:
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.pet_age = 3 AND Pets.PetType = 'cat'
after:
SELECT Student.LName  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Pets.pet_age = 3  AND Pets.PetType = 'cat'

index is 84
before:
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3
after:
SELECT Student.LName  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3 ORDER BY Student.LName DESC LIMIT 1

index is 85
before:
SELECT avg(Age) FROM Student WHERE StuID NOT IN (SELECT DISTINCT StuID FROM Has_Pet)
after:
SELECT avg(Age) FROM Student WHERE StuID NOT IN (SELECT DISTINCT StuID FROM Has_Pet);

index is 86
before:
SELECT avg(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
after:
SELECT avg(Age)  FROM Student  WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)

index is 87
before:
SELECT COUNT(*) FROM continents
after:
SELECT COUNT(*) FROM continents

index is 88
before:
SELECT COUNT(ContId) FROM continents
after:
SELECT COUNT(ContId) FROM continents

index is 89
before:
SELECT ContId, Continent, COUNT(CountryId) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY ContId, Continent
after:
SELECT ContId, Continent, COUNT(CountryId) AS NumCountries  FROM continents  JOIN countries ON continents.ContId = countries.Continent  GROUP BY ContId, Continent

index is 90
before:
SELECT continents.ContId, continents.Continent, count(countries.CountryName) FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent
after:
SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) AS CountryCount FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent

index is 91
before:
SELECT COUNT(*) FROM countries
after:
SELECT COUNT(DISTINCT CountryId) FROM countries

index is 92
before:
SELECT COUNT(*) FROM countries
after:
SELECT COUNT(*) FROM countries

index is 93
before:
SELECT FullName, Id, COUNT(Model) AS num_models FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY FullName, Id
after:
SELECT FullName, Id, COUNT(model_list.ModelId) AS num_models FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY FullName, Id

index is 94
before:
SELECT FullName, Id, COUNT(Model) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY FullName, Id
after:
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) AS ModelCount  FROM car_makers  JOIN model_list ON car_makers.Id = model_list.Maker  GROUP BY car_makers.FullName, car_makers.Id

index is 95
before:
SELECT
after:
SELECT SELECT Model FROM cars_data WHERE Horsepower = (     SELECT MIN(Horsepower)     FROM cars_data )

index is 96
before:
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.ModelId = car_names.ModelId JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Horsepower ASC LIMIT 1
after:
SELECT model_list.Model  FROM model_list  JOIN car_names ON model_list.ModelId = car_names.ModelId  JOIN cars_data ON car_names.MakeId = cars_data.Id  ORDER BY cars_data.Horsepower ASC  LIMIT 1

index is 97
before:
SELECT Model FROM model_list WHERE ModelId IN (SELECT Model FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Weight < (SELECT avg(Weight) FROM cars_data)))
after:
SELECT Model FROM model_list WHERE ModelId IN (   SELECT Model   FROM car_names   WHERE MakeId IN (     SELECT Id     FROM cars_data     WHERE Weight < (       SELECT AVG(Weight)       FROM cars_data     )   ) )

index is 98
before:
SELECT model_list.Model FROM cars_data JOIN model_list ON cars_data.Id = model_list.ModelId WHERE cars_data.Weight < (SELECT avg(Weight) FROM cars_data)
after:
SELECT model_list.Model  FROM cars_data  JOIN model_list ON cars_data.Id = model_list.ModelId  WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data)

index is 99
before:
SELECT DISTINCT T1.Maker FROM car_makers AS T1 JOIN cars_data AS T2 ON T1.Id = T2.Id WHERE T2.Year = 1970
after:
SELECT T1.Maker FROM car_makers AS T1 JOIN cars_data AS T2 ON T1.Id = T2.Id WHERE T2.Year = 1970

index is 100
before:
SELECT DISTINCT Maker FROM car_makers JOIN cars_data ON car_makers.Id = cars_data.Id WHERE cars_data.Year = 1970
after:
SELECT SELECT DISTINCT car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId JOIN cars_data ON car_names.Model = cars_data.Id WHERE cars_data.Year = 1970

index is 101
before:
LIMIT 1
after:
SELECT car_makers.Maker, MIN(cars_data.Year) AS EarliestYear FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.Maker ORDER BY EarliestYear ASC LIMIT 1

index is 102
before:
SELECT T1.Maker, T4.Year FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker JOIN car_names AS T3 ON T2.Model = T3.Model JOIN cars_data AS T4 ON T3.MakeId = T4.Id ORDER BY T4.Year ASC LIMIT 1
after:
SELECT T1.Maker, T4.Year FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker JOIN car_names AS T3 ON T2.Model = T3.Model JOIN cars_data AS T4 ON T3.MakeId = T4.Id ORDER BY T4.Year ASC LIMIT 1

index is 103
before:
SELECT DISTINCT Model FROM model_list JOIN car_names ON model_list.Maker = car_names.MakeId JOIN cars_data ON car_names.Model = cars_data.Model WHERE cars_data.Year > 1980
after:
SELECT DISTINCT car_names.Model FROM model_list JOIN car_names ON model_list.ModelId = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980

index is 104
before:
SELECT DISTINCT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.Maker = T2.MakeId JOIN cars_data AS T3 ON T2.Model = T3.Model WHERE T3.Year > 1980
after:
SELECT DISTINCT T1.Model  FROM model_list AS T1  JOIN car_names AS T2 ON T1.ModelId = T2.Model  JOIN cars_data AS T3 ON T2.MakeId = T3.Id  WHERE T3.Year > 1980

index is 105
before:
SELECT T1.Continent ,  count(DISTINCT T3.Id) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId  =  T2.Continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent
after:
SELECT T1.Continent, COUNT(DISTINCT T3.Id) AS MakerCount FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent

index is 106
before:
SELECT continents.Continent, count(DISTINCT car_makers.Id) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent
after:
SELECT continents.Continent, COUNT(DISTINCT car_makers.Id) AS MakerCount FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent

index is 107
before:
LIMIT 1
after:
SELECT CountryName FROM countries JOIN car_makers ON car_makers.Country = countries.CountryId GROUP BY CountryName ORDER BY COUNT(car_makers.Id) DESC LIMIT 1

index is 108
before:
SELECT CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY CountryName ORDER BY count(car_makers.Id) DESC LIMIT 1
after:
SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY COUNT(car_makers.Id) DESC LIMIT 1

index is 109
before:
SELECT COUNT(Model), FullName FROM car_names JOIN car_makers ON car_names.MakeId = car_makers.Id GROUP BY FullName
after:
SELECT COUNT(car_names.Model) AS ModelCount, car_makers.FullName FROM car_names JOIN car_makers ON car_names.MakeId = car_makers.Id GROUP BY car_makers.FullName

index is 110
before:
GROUP BY T1.Id, T1.FullName
after:
SELECT COUNT(T3.Model) AS NumCarModels, T1.Id, T1.FullName FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker JOIN car_names AS T3 ON T2.ModelId = T3.MakeId GROUP BY T1.Id, T1.FullName

index is 111
before:
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON car_names.MakeId = cars_data.Id JOIN model_list ON model_list.Model = car_names.Model JOIN car_makers ON car_makers.Id = model_list.Maker WHERE car_names.Model = 'amc hornet sportabout (sw)'
after:
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON car_names.MakeId = cars_data.Id JOIN model_list ON model_list.Model = car_names.Model JOIN car_makers ON car_makers.Id = model_list.Maker WHERE car_names.Make = 'amc' AND car_names.Model = 'hornet sportabout (sw)'

index is 112
before:
WHERE car_makers.Maker = 'amc' AND car_names.Model = 'hornet sportabout (sw)'
after:
SELECT Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'amc' AND model_list.Model = 'hornet sportabout (sw)'

index is 113
before:
SELECT COUNT(*) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'France')
after:
SELECT COUNT(*) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'France')

index is 114
before:
SELECT count(DISTINCT car_makers.Id) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France'
after:
SELECT count(DISTINCT car_makers.Id)  FROM car_makers  JOIN countries ON car_makers.Country = countries.CountryId  WHERE countries.CountryName = 'France'

index is 115
before:
SELECT COUNT(DISTINCT Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'USA'
after:
SELECT COUNT(DISTINCT car_names.Model)  FROM car_makers  JOIN model_list ON car_makers.Id = model_list.Maker  JOIN car_names ON model_list.ModelId = car_names.MakeId  JOIN countries ON car_makers.Country = countries.CountryId  WHERE countries.CountryName = 'USA'

index is 116
before:
SELECT COUNT(ModelId) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States'
after:
SELECT COUNT(DISTINCT model_list.ModelId) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States'

index is 117
before:
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4
after:
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;

index is 118
before:
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4
after:
SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4

index is 119
before:
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974
after:
SELECT MIN(Weight)  FROM cars_data  WHERE Cylinders = 8    AND Year = 1974

index is 120
before:
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974
after:
SELECT MIN(Weight)  FROM cars_data  WHERE Cylinders = 8 AND Year = 1974

index is 121
before:
SELECT T1.Maker , T2.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker JOIN car_names AS T3 ON T3.MakeId = T2.Model
after:
SELECT T1.Maker, T3.Model  FROM car_makers AS T1  JOIN model_list AS T2 ON T1.Id = T2.Maker  JOIN car_names AS T3 ON T3.MakeId = T2.Model

index is 122
before:

after:
SELECT car_makers.Maker, car_names.Model  FROM car_makers  JOIN car_names ON car_makers.Id = car_names.MakeId

index is 123
before:
SELECT CountryName, CountryId FROM countries JOIN car_makers ON car_makers.Country = countries.CountryId
after:
SELECT CountryName, CountryId FROM countries JOIN car_makers ON car_makers.Country = countries.CountryId GROUP BY CountryName, CountryId

index is 124
before:
SELECT T1.CountryName , T1.CountryId FROM countries AS T1 WHERE EXISTS (SELECT * FROM car_makers AS T2 WHERE T2.Country = T1.CountryId)
after:
SELECT T1.CountryName, T1.CountryId FROM countries AS T1 WHERE EXISTS (     SELECT *     FROM car_makers AS T2     WHERE T2.Country = T1.CountryId )

index is 125
before:
SELECT COUNT(Id) FROM cars_data WHERE Horsepower > 150
after:
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150

index is 126
before:
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150
after:
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150

index is 127
before:
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year
after:
SELECT Year, AVG(Weight) AS AverageWeight FROM cars_data GROUP BY Year

index is 128
before:
SELECT AVG(Weight), Year FROM cars_data GROUP BY Year
after:
SELECT AVG(Weight) AS AverageWeight, Year FROM cars_data GROUP BY Year

index is 129
before:
SELECT countries.CountryName FROM countries JOIN continents ON countries.Continent = continents.ContId JOIN car_makers ON car_makers.Country = countries.CountryId WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING count(DISTINCT car_makers.Maker) >= 3
after:
SELECT countries.CountryName  FROM countries  JOIN continents ON countries.Continent = continents.ContId  JOIN car_makers ON car_makers.Country = countries.CountryId  WHERE continents.Continent = 'Europe'  GROUP BY countries.CountryName  HAVING count(DISTINCT car_makers.Id) >= 3

index is 130
before:
SELECT CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE countries.Continent = 'European' GROUP BY CountryName HAVING count(DISTINCT car_makers.Id) >= 3
after:
SELECT CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = 'European' GROUP BY CountryName HAVING COUNT(DISTINCT car_makers.Id) >= 3

index is 131
before:
SELECT MAX(cars_data.Horsepower), car_makers.Maker FROM cars_data JOIN car_makers ON car_makers.Id = cars_data.Id WHERE cars_data.Cylinders = 3
after:
SELECT MAX(cars_data.Horsepower) AS Maximum_Horsepower, car_makers.Maker  FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE cars_data.Cylinders = 3 GROUP BY car_makers.Maker

index is 132
before:
WHERE Cylinders = 3
after:
SELECT MAX(cars_data.Horsepower) AS MaxHorsepower, car_makers.Maker FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE cars_data.Cylinders = 3 GROUP BY car_makers.Maker

index is 133
before:
SELECT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.ModelId = T2.Model JOIN cars_data AS T3 ON T2.MakeId = T3.Id ORDER BY T3.MPG DESC LIMIT 1
after:
SELECT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.ModelId = T2.Model JOIN cars_data AS T3 ON T2.MakeId = T3.Id ORDER BY T3.MPG DESC LIMIT 1

index is 134
before:
SELECT Model FROM model_list JOIN car_names ON model_list.ModelId = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1
after:
SELECT car_names.Model FROM model_list JOIN car_names ON model_list.ModelId = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1

index is 135
before:
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980
after:
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980

index is 136
before:
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980
after:
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;

index is 137
before:
SELECT AVG(cars_data.Edispl) FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE model_list.Maker = 'volvo'
after:
SELECT AVG(cars_data.Edispl)  FROM model_list  JOIN car_names ON model_list.Model = car_names.Model  JOIN cars_data ON car_names.MakeId = cars_data.Id  JOIN car_makers ON car_names.MakeId = car_makers.Id  WHERE car_makers.Maker = 'volvo'

index is 138
before:
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_names.Make = 'volvo'
after:
SELECT AVG(cars_data.Edispl)  FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE car_makers.FullName = 'volvo'

index is 139
before:
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders
after:
SELECT Cylinders, MAX(Accelerate)  FROM cars_data  GROUP BY Cylinders

index is 140
before:
SELECT MAX(Accelerate), Cylinders FROM cars_data GROUP BY Cylinders
after:
SELECT MAX(Accelerate) AS Max_Accelerate, Cylinders FROM cars_data GROUP BY Cylinders

index is 141
before:
SELECT Model FROM model_list GROUP BY Model HAVING COUNT(*) = (SELECT MAX(count_model) FROM (SELECT COUNT(*) AS count_model FROM model_list GROUP BY Model) AS counts)
after:
SELECT Model FROM model_list GROUP BY Model HAVING COUNT(DISTINCT Make) = (     SELECT MAX(count_model)     FROM (         SELECT COUNT(DISTINCT Make) AS count_model         FROM model_list         GROUP BY Model     ) AS counts )

index is 142
before:
SELECT Model FROM model_list GROUP BY Model ORDER BY count(*) DESC LIMIT 1
after:
SELECT Model FROM model_list GROUP BY Model ORDER BY COUNT(DISTINCT Maker) DESC LIMIT 1

index is 143
before:
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4
after:
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4

index is 144
before:
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4
after:
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4

index is 145
before:
SELECT COUNT(*) FROM cars_data WHERE Year = 1980
after:
SELECT COUNT(*) FROM cars_data WHERE Year = 1980

index is 146
before:
SELECT COUNT(*) FROM cars_data WHERE Year = 1980
after:
SELECT COUNT(*) AS TotalCars FROM cars_data WHERE Year = 1980

index is 147
before:
SELECT COUNT(Model) FROM car_names JOIN car_makers ON car_names.MakeId = car_makers.Id WHERE car_makers.FullName = 'American Motor Company'
after:
SELECT COUNT(DISTINCT car_names.Model) FROM car_names JOIN car_makers ON car_names.MakeId = car_makers.Id JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.FullName = 'American Motor Company'

index is 148
before:
SELECT COUNT(ModelId) FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE Maker = 'American Motor Company')
after:
SELECT COUNT(ModelId)  FROM model_list  WHERE Maker = (SELECT Id FROM car_makers WHERE Maker = 'American Motor Company')

index is 149
before:
SELECT FullName, Id FROM car_makers GROUP BY FullName, Id HAVING COUNT(model_list.ModelId) > 3
after:
SELECT FullName, Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY FullName, Id HAVING COUNT(DISTINCT model_list.ModelId) > 3

index is 150
before:
SELECT Id ,  Maker FROM car_makers WHERE Id IN (SELECT Maker FROM model_list GROUP BY Maker HAVING count(*) > 3)
after:
SELECT Id, Maker  FROM car_makers  WHERE Id IN (   SELECT Maker    FROM model_list    GROUP BY Maker    HAVING COUNT(*) > 3 )

index is 151
before:
WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500
after:
SELECT DISTINCT car_names.Model  FROM car_makers  JOIN model_list ON model_list.Maker = car_makers.Id  JOIN car_names ON car_names.MakeId = model_list.Model  JOIN cars_data ON cars_data.Id = car_names.MakeId  WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500

index is 152
before:
SELECT DISTINCT T1.Model FROM model_list AS T1, car_makers AS T2, cars_data AS T3, car_names AS T4 WHERE (T2.Maker = 'General Motors' OR T3.Weight > 3500) AND T1.Maker = T2.Id AND T1.Model = T4.Model AND T4.MakeId = T3.Id
after:
SELECT DISTINCT T1.Model FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Id JOIN car_names AS T4 ON T1.Model = T4.Model JOIN cars_data AS T3 ON T4.MakeId = T3.Id WHERE T2.Maker = 'General Motors' OR T3.Weight > 3500

index is 153
before:
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000
after:
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000

index is 154
before:
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 AND Year IN (SELECT DISTINCT Year FROM cars_data WHERE Weight > 3000)
after:
SELECT DISTINCT Year  FROM cars_data  WHERE Weight < 4000    AND Year IN (     SELECT DISTINCT Year      FROM cars_data      WHERE Weight > 3000   )

index is 155
before:
SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1
after:
SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1

index is 156
before:
SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1
after:
SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1

index is 157
before:
SELECT min(cars_data.Cylinders) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_names.Model = 'volvo' AND cars_data.Accelerate = (SELECT min(cars_data.Accelerate) FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_names.Model = 'volvo')
after:
SELECT cars_data.Cylinders FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_names.Model = 'volvo' AND cars_data.Accelerate = (     SELECT min(cars_data.Accelerate)     FROM car_names     JOIN cars_data ON car_names.MakeId = cars_data.Id     WHERE car_names.Model = 'volvo' )

index is 158
before:
SELECT min(Cylinders) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE car_makers.Maker = 'Volvo' AND cars_data.Accelerate = (SELECT min(Accelerate) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE car_makers.Maker = 'Volvo')
after:
SELECT min(Cylinders)  FROM car_makers  JOIN model_list ON car_makers.Id = model_list.Maker  JOIN car_names ON model_list.Model = car_names.Model  JOIN cars_data ON car_names.MakeId = cars_data.Id  WHERE car_makers.Maker = 'Volvo'  AND cars_data.Accelerate = (     SELECT min(Accelerate)      FROM car_makers      JOIN model_list ON car_makers.Id = model_list.Maker      JOIN car_names ON model_list.Model = car_names.Model      JOIN cars_data ON car_names.MakeId = cars_data.Id      WHERE car_makers.Maker = 'Volvo' )

index is 159
before:
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)
after:
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)

index is 160
before:
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)
after:
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)

index is 161
before:
```
after:
SELECT COUNT(DISTINCT T1.CountryId) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING COUNT(DISTINCT T2.Id) > 2

index is 162
before:
SELECT count(DISTINCT T1.CountryId) FROM countries AS T1 JOIN car_makers AS T2 ON T2.Country = T1.CountryId GROUP BY T1.CountryId HAVING count(DISTINCT T2.Id) > 2
after:
SELECT count(DISTINCT T1.CountryId)  FROM countries AS T1  JOIN car_makers AS T2 ON T2.Country = T1.CountryId  GROUP BY T1.CountryId  HAVING count(DISTINCT T2.Id) > 2

index is 163
before:
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6
after:
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6

index is 164
before:
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6
after:
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6

index is 165
before:
LIMIT 1
after:
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE cars_data.Cylinders = 4 GROUP BY model_list.Model ORDER BY cars_data.Horsepower DESC LIMIT 1

index is 166
before:
SELECT
after:
SELECT SELECT car_names.Model, MAX(cars_data.Horsepower) AS MaxHorsepower FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 4 GROUP BY car_names.Model ORDER BY MaxHorsepower DESC LIMIT 1;

index is 167
before:
SELECT MakeId, Make FROM car_names WHERE MakeId IN (SELECT MakeId FROM cars_data WHERE Horsepower > (SELECT min(Horsepower) FROM cars_data) AND Cylinders > 3)
after:
SELECT MakeId, Make FROM car_names WHERE MakeId IN (     SELECT MakeId     FROM cars_data     WHERE Horsepower > (         SELECT MIN(Horsepower)         FROM cars_data     ) ) AND MakeId NOT IN (     SELECT MakeId     FROM cars_data     WHERE Cylinders > 3 )

index is 168
before:
SELECT Id, Maker FROM car_makers WHERE Id IN (SELECT MakeId FROM cars_data WHERE Horsepower > (SELECT min(Horsepower) FROM cars_data) AND Cylinders < 4)
after:
SELECT car_names.MakeId, car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id JOIN car_makers ON car_makers.Id = car_names.Model WHERE cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND cars_data.Cylinders < 4;

index is 169
before:
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 AND Year < 1980
after:
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 AND Year < 1980

index is 170
before:
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980
after:
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980

index is 171
before:
Note: Please make sure to replace the table and column names with their appropriate names in your database.
after:
SELECT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.ModelId = T2.Model JOIN cars_data AS T3 ON T2.MakeId = T3.Id JOIN car_makers AS T4 ON T1.Maker = T4.Id WHERE T3.Weight < 3500 AND T4.Maker != 'Ford Motor Company'

index is 172
before:
SELECT DISTINCT Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Weight < 3500 AND car_names.Model NOT IN (SELECT Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'Ford Motor Company')
after:
SELECT Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON model_list.Model = car_names.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Weight < 3500 AND car_makers.Maker != 'Ford Motor Company'

index is 173
before:
SELECT CountryName FROM countries LEFT JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Country IS NULL
after:
SELECT CountryName  FROM countries  LEFT JOIN car_makers ON countries.CountryId = car_makers.Country  WHERE car_makers.Country IS NULL

index is 174
before:

after:
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers)

index is 175
before:
HAVING COUNT(Id) >= 2 AND COUNT(DISTINCT Maker) > 3
after:
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(car_makers.Id) >= 2 AND COUNT(DISTINCT car_makers.Maker) > 3

index is 176
before:
SELECT
after:
SELECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.Model) >= 2 AND COUNT(*) > 3

index is 177
before:
)
after:
SELECT CountryId, CountryName FROM countries WHERE CountryId IN (   SELECT DISTINCT countries.CountryId   FROM countries   JOIN car_makers ON car_makers.Country = countries.CountryId   JOIN model_list ON model_list.Maker = car_makers.Id   JOIN car_names ON car_names.Model = model_list.Model   WHERE car_names.Make = 'fiat' OR         (SELECT COUNT(DISTINCT car_makers.Id) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 )

index is 178
before:
SELECT
after:
SELECT SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.ModelId = car_names.MakeId WHERE car_makers.Id > 3 OR car_names.Model = 'fiat'

index is 179
before:
SELECT
after:
SELECT SELECT airlines.Country FROM airlines WHERE airlines.Airline = 'JetBlue Airways'

index is 180
before:
SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways'
after:
SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways'

index is 181
before:
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue Airways'
after:
SELECT Abbreviation  FROM airlines  WHERE Airline = 'JetBlue Airways'

index is 182
before:
SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways'
after:
SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways'

index is 183
before:
SELECT DISTINCT T1.Airline ,  T1.Abbreviation FROM airlines AS T1 JOIN flights AS T2 ON T2.Airline  =  T1.Abbreviation JOIN airports AS T3 ON T2.SourceAirport  =  T3.AirportCode WHERE T3.Country  =  'USA'
after:
SELECT T1.Airline, T1.Abbreviation  FROM airlines AS T1  JOIN flights AS T2 ON T2.Airline = T1.Airline  JOIN airports AS T3 ON T2.SourceAirport = T3.AirportCode  WHERE T3.Country = 'USA'

index is 184
before:
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA'
after:
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA'

index is 185
before:
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'
after:
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'

index is 186
before:
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'
after:
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'

index is 187
before:
SELECT COUNT(*) FROM airlines
after:
SELECT COUNT(*) FROM airlines

index is 188
before:
SELECT COUNT(uid) FROM airlines
after:
SELECT COUNT(*) FROM airlines

index is 189
before:
SELECT COUNT(*) FROM airports
after:
SELECT COUNT(*) FROM airports

index is 190
before:
SELECT COUNT(*) FROM airports
after:
SELECT COUNT(*) FROM airports

index is 191
before:
SELECT COUNT(*) FROM flights
after:
SELECT COUNT(*) FROM flights

index is 192
before:
SELECT COUNT(*) FROM flights
after:
SELECT COUNT(*) FROM flights

index is 193
before:
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL'
after:
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL'

index is 194
before:
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL'
after:
SELECT Airline  FROM airlines  WHERE Abbreviation = 'UAL'

index is 195
before:
SELECT COUNT(*) FROM airlines WHERE Country = 'USA'
after:
SELECT COUNT(DISTINCT Airline) FROM airlines WHERE Country = 'USA'

index is 196
before:
SELECT COUNT(uid) FROM airlines WHERE Country = 'USA'
after:
SELECT COUNT(uid) FROM airlines WHERE Country = 'USA'

index is 197
before:
SELECT City, Country FROM airports WHERE AirportName = 'Alton'
after:
SELECT City, Country FROM airports WHERE AirportName = 'Alton'

index is 198
before:
SELECT City, Country FROM airports WHERE AirportName = 'Alton'
after:
SELECT City, Country FROM airports WHERE AirportName = 'Alton';

index is 199
before:
SELECT AirportName FROM airports WHERE AirportCode = 'AKO'
after:
SELECT AirportName FROM airports WHERE AirportCode = 'AKO'

index is 200
before:
SELECT AirportName FROM airports WHERE AirportCode = 'AKO'
after:
SELECT AirportName FROM airports WHERE AirportCode = 'AKO'

index is 201
before:
SELECT AirportName FROM airports WHERE City = 'Aberdeen'
after:
SELECT AirportName FROM airports WHERE City = 'Aberdeen'

index is 202
before:
SELECT AirportName FROM airports WHERE City = 'Aberdeen'
after:
SELECT AirportName FROM airports WHERE City = 'Aberdeen'

index is 203
before:
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'APG'
after:
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG'

index is 204
before:
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'APG'
after:
SELECT COUNT(*)  FROM flights  JOIN airports ON flights.SourceAirport = airports.AirportCode  WHERE airports.AirportCode = 'APG'

index is 205
before:
SELECT count(*) FROM flights WHERE DestAirport = (SELECT AirportCode FROM airports WHERE AirportCode = 'ATO')
after:
SELECT count(*) FROM flights WHERE DestAirport = 'ATO'

index is 206
before:
SELECT count(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportName = 'ATO'
after:
SELECT count(*)  FROM flights  JOIN airports ON flights.DestAirport = airports.AirportCode  WHERE airports.AirportName = 'ATO'

index is 207
before:
SELECT
after:
SELECT SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';

index is 208
before:
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
after:
SELECT COUNT(flights.FlightNo) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'

index is 209
before:
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
after:
SELECT COUNT(*) FROM flights  JOIN airports ON flights.DestAirport = airports.AirportCode  WHERE airports.City = 'Aberdeen'

index is 210
before:
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
after:
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'

index is 211
before:
SELECT COUNT(*) FROM flights JOIN airports AS A1 ON flights.SourceAirport = A1.AirportCode JOIN airports AS A2 ON flights.DestAirport = A2.AirportCode WHERE A1.City = 'Aberdeen' AND A2.City = 'Ashley'
after:
SELECT COUNT(*) FROM flights  JOIN airports AS A1 ON flights.SourceAirport = A1.AirportCode  JOIN airports AS A2 ON flights.DestAirport = A2.AirportCode  WHERE A1.City = 'Aberdeen' AND A2.City = 'Ashley'

index is 212
before:
SELECT COUNT(*) FROM flights JOIN airports AS A1 ON flights.SourceAirport = A1.AirportCode JOIN airports AS A2 ON flights.DestAirport = A2.AirportCode WHERE A1.City = 'Aberdeen' AND A2.City = 'Ashley'
after:
SELECT COUNT(*) FROM flights  JOIN airports AS A1 ON flights.SourceAirport = A1.AirportCode  JOIN airports AS A2 ON flights.DestAirport = A2.AirportCode  WHERE A1.City = 'Aberdeen'  AND A2.City = 'Ashley'

index is 213
before:
SELECT COUNT(FlightNo) FROM flights WHERE Airline = 'JetBlue Airways'
after:
SELECT COUNT(FlightNo) FROM flights WHERE Airline = 'JetBlue Airways'

index is 214
before:
SELECT COUNT(FlightNo) FROM flights WHERE Airline IN (SELECT uid FROM airlines WHERE Airline = 'Jetblue Airways')
after:
SELECT COUNT(FlightNo) FROM flights WHERE Airline IN (SELECT uid FROM airlines WHERE Airline = 'Jetblue Airways')

index is 215
before:
SELECT count(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE flights.Airline = 'United Airlines' AND airports.AirportCode = 'ASY'
after:
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE flights.Airline = 'United Airlines' AND airports.AirportCode = 'ASY'

index is 216
before:
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = 'United Airlines' AND airports.AirportCode = 'ASY'
after:
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Abbreviation = 'United Airlines' AND airports.AirportCode = 'ASY'

index is 217
before:
AND airports.AirportCode = 'AHD'
after:
SELECT COUNT(*) FROM flights  JOIN airports ON flights.SourceAirport = airports.AirportCode  JOIN airlines ON flights.Airline = airlines.Abbreviation  WHERE airlines.Airline = 'United Airlines'  AND airports.AirportCode = 'AHD'

index is 218
before:
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Abbreviation JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airlines.Airline = 'United' AND airports.AirportCode = 'AHD'
after:
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Abbreviation JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airlines.Airline = 'United'  AND airports.AirportCode = 'AHD' AND airlines.Airline = 'United' AND airports.AirportCode = 'AHD'

index is 219
before:
SELECT COUNT(FlightNo) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE Airline = 'United Airlines' AND City = 'Aberdeen'
after:
SELECT COUNT(flights.FlightNo) FROM flights  JOIN airlines ON flights.Airline = airlines.Abbreviation  JOIN airports ON flights.DestAirport = airports.AirportCode  WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen'

index is 220
before:
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode JOIN airlines ON airlines.Abbreviation = flights.Airline WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen'
after:
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode JOIN airlines ON airlines.Abbreviation = flights.Airline WHERE airlines.Airline = 'United Airlines'  AND airports.AirportName = 'Aberdeen'

index is 221
before:
SELECT airports.City FROM airports GROUP BY airports.City ORDER BY count(flights.DestAirport) DESC LIMIT 1
after:
SELECT airports.City  FROM airports  JOIN flights ON flights.DestAirport = airports.AirportCode  GROUP BY airports.City  ORDER BY COUNT(flights.DestAirport) DESC  LIMIT 1

index is 222
before:
SELECT City FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY City ORDER BY count(*) DESC LIMIT 1
after:
SELECT airports.City  FROM airports  JOIN flights ON airports.AirportCode = flights.DestAirport  GROUP BY airports.City  ORDER BY COUNT(*) DESC  LIMIT 1

index is 223
before:
SELECT airports.City, COUNT(*) AS departures FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY airports.City ORDER BY departures DESC LIMIT 1
after:
SELECT airports.City, COUNT(*) AS departures  FROM airports  JOIN flights ON airports.AirportCode = flights.SourceAirport  GROUP BY airports.City  ORDER BY departures DESC  LIMIT 1

index is 224
before:
SELECT airports.City FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY airports.City ORDER BY count(*) DESC LIMIT 1
after:
SELECT airports.City FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY airports.City ORDER BY COUNT(*) DESC LIMIT 1

index is 225
before:
This query selects the airport code from the `airports` table and joins it with the `flights` table using the conditions that either the `SourceAirport` or `DestAirport` should match the `AirportCode`. It then groups the results by `AirportCode`, orders them in descending order of the count of flights, and selects the top 1 row with the highest number of flights.
after:
SELECT airports.AirportCode FROM airports JOIN flights ON flights.SourceAirport = airports.AirportCode OR flights.DestAirport = airports.AirportCode GROUP BY airports.AirportCode ORDER BY COUNT(*) DESC LIMIT 1

index is 226
before:
SELECT AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport OR airports.AirportCode = flights.SourceAirport GROUP BY airports.AirportCode ORDER BY count(*) DESC LIMIT 1
after:
SELECT AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport OR airports.AirportCode = flights.SourceAirport GROUP BY airports.AirportCode ORDER BY COUNT(*) DESC LIMIT 1

index is 227
before:
SELECT T1.AirportCode FROM airports AS T1 LEFT JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport OR T1.AirportCode = T2.DestAirport GROUP BY T1.AirportCode ORDER BY count(T2.FlightNo) ASC LIMIT 1
after:
SELECT T1.AirportCode  FROM airports AS T1  LEFT JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport OR T1.AirportCode = T2.DestAirport  GROUP BY T1.AirportCode  ORDER BY COUNT(T2.FlightNo) ASC  LIMIT 1

index is 228
before:
SELECT AirportCode FROM airports LEFT JOIN flights ON airports.AirportCode = flights.SourceAirport OR airports.AirportCode = flights.DestAirport GROUP BY AirportCode ORDER BY COUNT(FlightNo) ASC LIMIT 1
after:
SELECT AirportCode FROM airports LEFT JOIN flights ON airports.AirportCode = flights.SourceAirport OR airports.AirportCode = flights.DestAirport GROUP BY airports.AirportCode ORDER BY COUNT(flights.FlightNo) ASC LIMIT 1

index is 229
before:
```
after:
SELECT airlines.Airline, COUNT(*) AS num_flights FROM flights JOIN airlines ON flights.Airline = airlines.uid GROUP BY airlines.Airline ORDER BY num_flights DESC LIMIT 1

index is 230
before:
SELECT T2.Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
after:
SELECT T2.Airline  FROM flights AS T1  JOIN airlines AS T2 ON T1.Airline = T2.uid  GROUP BY T2.Airline  ORDER BY COUNT(*) DESC  LIMIT 1

index is 231
before:
SELECT Abbreviation, Country FROM airlines WHERE uid = (SELECT Airline FROM flights GROUP BY Airline ORDER BY count(*) ASC LIMIT 1)
after:
SELECT Abbreviation, Country  FROM airlines  WHERE uid = (SELECT Airline               FROM flights               GROUP BY Airline               ORDER BY COUNT(*) ASC               LIMIT 1)

index is 232
before:
SELECT Abbreviation, Country FROM airlines GROUP BY Abbreviation, Country ORDER BY count(*) ASC LIMIT 1
after:
SELECT Abbreviation, Country FROM airlines GROUP BY Abbreviation, Country ORDER BY COUNT(*) ASC LIMIT 1

index is 233
before:
SELECT DISTINCT Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'AHD'
after:
SELECT Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'AHD';

index is 234
before:
SELECT DISTINCT Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'AHD'
after:
SELECT Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'AHD';

index is 235
before:
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportCode = 'AHD'
after:
SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportCode = 'AHD';

index is 236
before:
SELECT airlines.Airline FROM airlines, flights, airports WHERE airlines.uid = flights.Airline AND flights.DestAirport = airports.AirportCode AND airports.AirportCode = 'AHD'
after:
SELECT airlines.Airline  FROM airlines  JOIN flights ON airlines.uid = flights.Airline  JOIN airports ON flights.DestAirport = airports.AirportCode  WHERE airports.AirportCode = 'AHD'

index is 237
before:
SELECT Airline FROM airlines WHERE EXISTS (SELECT * FROM flights WHERE airlines.uid = flights.Airline AND flights.SourceAirport = 'APG') AND EXISTS (SELECT * FROM flights WHERE airlines.uid = flights.Airline AND flights.SourceAirport = 'CVO')
after:
SELECT Airline  FROM airlines  WHERE EXISTS (   SELECT *    FROM flights    WHERE airlines.uid = flights.Airline      AND flights.SourceAirport = 'APG' )  AND EXISTS (   SELECT *    FROM flights    WHERE airlines.uid = flights.Airline      AND flights.SourceAirport = 'CVO' )

index is 238
before:
SELECT Airline FROM airlines WHERE Airline IN (SELECT DISTINCT Airline FROM flights WHERE SourceAirport = 'APG') AND Airline IN (SELECT DISTINCT Airline FROM flights WHERE SourceAirport = 'CVO')
after:
SELECT Airline  FROM airlines  WHERE Airline IN (SELECT DISTINCT Airline FROM flights WHERE SourceAirport = 'APG')    AND Airline IN (SELECT DISTINCT Airline FROM flights WHERE SourceAirport = 'CVO')

index is 239
before:
SELECT Airline FROM airlines WHERE uid IN (SELECT DISTINCT Airline FROM flights WHERE SourceAirport = 'CVO') AND uid NOT IN (SELECT DISTINCT Airline FROM flights WHERE SourceAirport = 'APG')
after:
SELECT Airline FROM airlines WHERE uid IN (     SELECT DISTINCT Airline     FROM flights     WHERE SourceAirport = 'CVO' ) AND uid NOT IN (     SELECT DISTINCT Airline     FROM flights     WHERE SourceAirport = 'APG'         AND DestAirport = flights.DestAirport )

index is 240
before:
SELECT Airline FROM airlines WHERE Airline NOT IN (SELECT DISTINCT Airline FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'APG')
after:
SELECT Airline FROM airlines WHERE Airline NOT IN (   SELECT DISTINCT Airline   FROM flights   JOIN airports ON flights.SourceAirport = airports.AirportCode   WHERE airports.AirportCode = 'APG' ) AND Airline IN (   SELECT DISTINCT Airline   FROM flights   JOIN airports ON flights.SourceAirport = airports.AirportCode   WHERE airports.AirportCode = 'CVO' )

index is 241
before:
SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.Abbreviation = T2.Airline GROUP BY T1.Airline HAVING count(*) >= 10
after:
SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.Abbreviation = T2.Airline GROUP BY T1.Airline HAVING COUNT(*) >= 10

index is 242
before:
SELECT Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline GROUP BY Airline HAVING COUNT(*) >= 10
after:
SELECT Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline GROUP BY Airline HAVING COUNT(*) >= 10

index is 243
before:
SELECT Airline FROM airlines WHERE (SELECT count(*) FROM flights WHERE flights.Airline = airlines.Abbreviation) < 200
after:
SELECT Airline FROM airlines WHERE Abbreviation IN (     SELECT Airline     FROM flights     GROUP BY Airline     HAVING COUNT(*) < 200 )

index is 244
before:
SELECT Airline FROM airlines WHERE EXISTS (SELECT * FROM flights WHERE flights.Airline = airlines.Airline GROUP BY Airline HAVING COUNT(*) < 200)
after:
SELECT Airline FROM airlines WHERE EXISTS (     SELECT *     FROM flights     WHERE flights.Airline = airlines.Airline     GROUP BY flights.Airline     HAVING COUNT(*) < 200 )

index is 245
before:
SELECT FlightNo FROM flights WHERE Airline = 'United Airlines'
after:
SELECT FlightNo FROM flights WHERE Airline = 'United Airlines'

index is 246
before:
SELECT FlightNo FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Abbreviation = 'United')
after:
SELECT FlightNo  FROM flights  WHERE Airline = (SELECT uid FROM airlines WHERE Abbreviation = 'United')

index is 247
before:
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'APG'
after:
SELECT flights.FlightNo  FROM flights  JOIN airports ON flights.SourceAirport = airports.AirportCode  WHERE airports.AirportCode = 'APG'

index is 248
before:
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'APG'
after:
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG'

index is 249
before:
SELECT FlightNo FROM flights WHERE DestAirport = 'APG'
after:
SELECT flights.FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportCode = 'APG'

index is 250
before:
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportName = 'APG'
after:
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportName = 'APG'

index is 251
before:
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
after:
SELECT FlightNo  FROM flights  JOIN airports ON flights.SourceAirport = airports.AirportCode  WHERE airports.City = 'Aberdeen'

index is 252
before:
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
after:
SELECT FlightNo  FROM flights  JOIN airports ON flights.SourceAirport = airports.AirportCode  WHERE airports.City = 'Aberdeen'

index is 253
before:
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
after:
SELECT flights.FlightNo FROM flights  JOIN airports ON flights.DestAirport = airports.AirportCode  WHERE airports.City = 'Aberdeen'

index is 254
before:
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'
after:
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'

index is 255
before:
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen' OR airports.City = 'Abilene'
after:
SELECT COUNT(*) FROM flights  JOIN airports ON flights.DestAirport = airports.AirportCode  WHERE airports.City = 'Aberdeen' OR airports.City = 'Abilene'

index is 256
before:
SELECT COUNT(*) FROM flights WHERE DestAirport = 'Aberdeen' OR DestAirport = 'Abilene'
after:
SELECT COUNT(*) FROM flights WHERE DestAirport IN ('Aberdeen', 'Abilene')

index is 257
before:
SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT DISTINCT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DISTINCT DestAirport FROM flights)
after:
SELECT AirportName  FROM airports  LEFT JOIN flights ON airports.AirportCode = flights.SourceAirport OR airports.AirportCode = flights.DestAirport  WHERE flights.SourceAirport IS NULL AND flights.DestAirport IS NULL

index is 258
before:
SELECT AirportName FROM airports LEFT JOIN flights ON airports.AirportCode = flights.SourceAirport OR airports.AirportCode = flights.DestAirport WHERE FlightNo IS NULL
after:
SELECT AirportName  FROM airports  LEFT JOIN flights ON airports.AirportCode = flights.SourceAirport OR airports.AirportCode = flights.DestAirport  WHERE FlightNo IS NULL AND flights.SourceAirport IS NULL AND flights.DestAirport IS NULL

index is 259
before:
SELECT COUNT(*) FROM employee
after:
SELECT COUNT(*) FROM employee

index is 260
before:
SELECT COUNT(Employee_ID) FROM employee
after:
SELECT COUNT(*) FROM employee

index is 261
before:
SELECT Name FROM employee ORDER BY Age ASC
after:
SELECT employee.Name FROM employee ORDER BY employee.Age ASC

index is 262
before:
SELECT Name FROM employee ORDER BY Age ASC
after:
SELECT employee.Name FROM employee ORDER BY employee.Age ASC

index is 263
before:
SELECT COUNT(Employee_ID), City FROM employee GROUP BY City
after:
SELECT COUNT(Employee_ID) AS Num_Employees, City  FROM employee  GROUP BY City

index is 264
before:
SELECT COUNT(Employee_ID), City FROM employee GROUP BY City
after:
SELECT COUNT(Employee_ID) AS Employee_Count, City  FROM employee  GROUP BY City

index is 265
before:
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(*) > 1
after:
SELECT employee.city FROM employee WHERE employee.age < 30 GROUP BY employee.city HAVING COUNT(DISTINCT employee.Employee_ID) > 1

index is 266
before:
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING count(*) > 1
after:
SELECT City  FROM employee  WHERE Age < 30  GROUP BY City  HAVING COUNT(*) > 1

index is 267
before:
SELECT COUNT(Shop_ID), Location FROM shop GROUP BY Location
after:
SELECT COUNT(DISTINCT Shop_ID) AS num_shops, Location FROM shop GROUP BY Location

index is 268
before:
SELECT COUNT(Shop_ID), Location FROM shop GROUP BY Location
after:
SELECT COUNT(Shop_ID) AS Shop_Count, Location FROM shop GROUP BY Location

index is 269
before:
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)
after:
SELECT Manager_name, District  FROM shop  WHERE Number_products = (SELECT MAX(Number_products) FROM shop)

index is 270
before:
SELECT Manager_name, District FROM shop ORDER BY Number_products DESC LIMIT 1
after:
SELECT shop.Manager_name, shop.District FROM shop ORDER BY shop.Number_products DESC LIMIT 1

index is 271
before:
SELECT MIN(Number_products), MAX(Number_products) FROM shop
after:
SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop

index is 272
before:
SELECT min(Number_products), max(Number_products) FROM shop
after:
SELECT MIN(Number_products), MAX(Number_products) FROM shop

index is 273
before:
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
after:
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC

index is 274
before:
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
after:
SELECT shop.Name, shop.Location, shop.District FROM shop ORDER BY shop.Number_products DESC

index is 275
before:
SELECT Name FROM shop WHERE Number_products > (SELECT avg(Number_products) FROM shop)
after:
SELECT shop.Name FROM shop WHERE Number_products > (   SELECT AVG(Number_products)   FROM shop )

index is 276
before:
SELECT Name FROM shop WHERE Number_products  >  (SELECT avg(Number_products) FROM shop)
after:
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)

index is 277
before:
SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T2.Employee_ID ORDER BY count(*) DESC LIMIT 1
after:
SELECT T1.Name  FROM employee AS T1  JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID  GROUP BY T1.Employee_ID  ORDER BY COUNT(*) DESC  LIMIT 1

index is 278
before:
```
after:
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID GROUP BY employee.Employee_ID ORDER BY COUNT(evaluation.Employee_ID) DESC LIMIT 1;

index is 279
before:
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1
after:
SELECT employee.Name  FROM employee  JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID  ORDER BY evaluation.Bonus DESC  LIMIT 1

index is 280
before:
SELECT Name FROM employee INNER JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY Bonus DESC LIMIT 1
after:
SELECT employee.Name FROM employee INNER JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1

index is 281
before:
SELECT Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
after:
SELECT Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)

index is 282
before:
SELECT Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
after:
SELECT Name  FROM employee  WHERE Employee_ID NOT IN (   SELECT Employee_ID    FROM evaluation )

index is 283
before:
SELECT T1.Name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Shop_ID ORDER BY count(*) DESC LIMIT 1
after:
SELECT T1.Name  FROM shop AS T1  JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID  GROUP BY T1.Name  ORDER BY COUNT(*) DESC  LIMIT 1

index is 284
before:
SELECT Name FROM shop GROUP BY Shop_ID ORDER BY count(*) DESC LIMIT 1
after:
SELECT shop.Name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Name ORDER BY COUNT(hiring.Employee_ID) DESC LIMIT 1

index is 285
before:
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT DISTINCT Shop_ID FROM hiring)
after:
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT DISTINCT Shop_ID FROM hiring)

index is 286
before:
This query selects the names of shops where the Shop_ID is not present in the hiring table, indicating that they have no employees.
after:
SELECT shop.Name FROM shop LEFT JOIN hiring ON shop.Shop_ID = hiring.Shop_ID WHERE hiring.Employee_ID IS NULL  This query uses a LEFT JOIN to combine the "shop" table with the "hiring" table on the Shop_ID column. Then, it filters the results by selecting only those rows where the Employee_ID is NULL, indicating that the shop has no employees. Finally, it selects the Name column from the "shop" table to retrieve the shop names.

index is 287
before:
SELECT T1.Name , count(T2.Employee_ID) FROM shop AS T1 JOIN hiring AS T2 ON T2.Shop_ID = T1.Shop_ID GROUP BY T1.Shop_ID
after:
SELECT T1.Name, COUNT(T2.Employee_ID) FROM shop AS T1 JOIN hiring AS T2 ON T2.Shop_ID = T1.Shop_ID GROUP BY T1.Shop_ID, T1.Name

index is 288
before:
```
after:
SELECT COUNT(T3.Employee_ID) AS Number_of_Employees, T1.Name AS Shop_Name FROM shop AS T1 JOIN hiring AS T2 ON T2.Shop_ID = T1.Shop_ID JOIN employee AS T3 ON T3.Employee_ID = T2.Employee_ID GROUP BY T1.Shop_ID

index is 289
before:
SELECT SUM(Bonus) FROM evaluation
after:
SELECT SUM(Bonus) AS Total_Bonus FROM evaluation

index is 290
before:
SELECT SUM(Bonus) FROM evaluation
after:
SELECT SUM(Bonus) AS Total_Bonus FROM evaluation

index is 291
before:
SELECT * FROM hiring
after:
SELECT * FROM hiring

index is 292
before:
FROM hiring;
after:
SELECT hiring.* FROM hiring;

index is 293
before:
SELECT District FROM shop WHERE Number_products < 3000 INTERSECT SELECT District FROM shop WHERE Number_products > 10000
after:
SELECT District FROM shop WHERE Number_products < 3000 AND District IN (   SELECT District   FROM shop   WHERE Number_products > 10000 )

index is 294
before:
SELECT District FROM shop WHERE Number_products < 3000 INTERSECT SELECT District FROM shop WHERE Number_products > 10000.
after:
SELECT DISTINCT District  FROM shop WHERE District IN (   SELECT District FROM shop WHERE Number_products < 3000 )  AND District IN (   SELECT District FROM shop WHERE Number_products > 10000 );

index is 295
before:
SELECT COUNT(DISTINCT Location) FROM shop
after:
SELECT COUNT(DISTINCT Location) FROM shop

index is 296
before:
SELECT COUNT(DISTINCT Location) FROM shop
after:
SELECT COUNT(DISTINCT Location) AS StoreCount FROM shop

index is 297
before:
SELECT COUNT(*) FROM Documents
after:
SELECT COUNT(*) FROM Documents

index is 298
before:
SELECT COUNT(Document_ID) FROM Documents
after:
SELECT COUNT(DISTINCT Document_ID) FROM Documents

index is 299
before:
SELECT Document_ID, Document_Name, Document_Description FROM Documents
after:
SELECT Document_ID, Document_Name, Document_Description FROM Documents

index is 300
before:
SELECT Document_ID, Document_Name, Document_Description FROM Documents
after:
SELECT Document_ID, Document_Name, Document_Description  FROM Documents

index is 301
before:
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
after:
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'

index is 302
before:
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
after:
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%';

index is 303
before:
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
after:
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'

index is 304
before:
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'
after:
SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description  FROM Documents  WHERE Documents.Document_Name = 'Robbin CV'

index is 305
before:
SELECT COUNT(DISTINCT Templates.Template_ID) FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID
after:
SELECT COUNT(DISTINCT Documents.Template_ID) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID

index is 306
before:
SELECT COUNT(DISTINCT Templates.Template_ID) FROM Templates
after:
SELECT COUNT(DISTINCT Documents.Template_ID) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID

index is 307
before:
SELECT count(*) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'PPT'
after:
SELECT count(DISTINCT Documents.Document_ID) FROM Documents  JOIN Templates ON Documents.Template_ID = Templates.Template_ID  WHERE Templates.Template_Type_Code = 'PPT'

index is 308
before:
WHERE Ref_Template_Types.Template_Type_Description = 'PPT'
after:
SELECT COUNT(DISTINCT Documents.Document_ID)  FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'PPT'

index is 309
before:
SELECT T1.Template_ID , count(DISTINCT T2.Document_ID) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID
after:
SELECT T1.Template_ID, COUNT(DISTINCT T2.Document_ID) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID

index is 310
before:
GROUP BY Templates.Template_ID
after:
SELECT Templates.Template_ID, COUNT(DISTINCT Documents.Document_ID)  FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID

index is 311
before:
SELECT
after:
SELECT SELECT Templates.Template_ID, Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID, Templates.Template_Type_Code ORDER BY COUNT(Documents.Document_ID) DESC LIMIT 1;

index is 312
before:
SELECT
after:
SELECT SELECT Templates.Template_ID, Templates.Template_Type_Code FROM Templates JOIN Documents ON Documents.Template_ID = Templates.Template_ID GROUP BY Templates.Template_ID, Templates.Template_Type_Code ORDER BY COUNT(Documents.Document_ID) DESC LIMIT 1;

index is 313
before:
SELECT Templates.Template_ID FROM Templates GROUP BY Templates.Template_ID HAVING count(Documents.Template_ID) > 1
after:
SELECT Templates.Template_ID FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID HAVING COUNT(DISTINCT Documents.Document_ID) > 1

index is 314
before:
SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(*) > 1.
after:
SELECT Templates.Template_ID  FROM Documents  JOIN Templates ON Documents.Template_ID = Templates.Template_ID GROUP BY Templates.Template_ID HAVING COUNT(DISTINCT Documents.Document_ID) > 1;

index is 315
before:
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)
after:
SELECT Templates.Template_ID FROM Templates LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_ID IS NULL

index is 316
before:
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)
after:
SELECT Templates.Template_ID FROM Templates LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Template_ID IS NULL

index is 317
before:
SELECT COUNT(Template_ID) FROM Templates
after:
SELECT COUNT(Template_ID) AS Template_Count FROM Templates

index is 318
before:
SELECT COUNT(Template_ID) FROM Templates
after:
SELECT COUNT(Template_ID) FROM Templates

index is 319
before:
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
after:
SELECT Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code FROM Templates

index is 320
before:
SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates
after:
SELECT Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code FROM Templates

index is 321
before:
SELECT DISTINCT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code
after:
SELECT DISTINCT T2.Template_Type_Code  FROM Templates AS T2

index is 322
before:
SELECT Template_Type_Code FROM Ref_Template_Types
after:
SELECT Template_Type_Code  FROM Ref_Template_Types

index is 323
before:
SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT'
after:
SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'PP' OR Ref_Template_Types.Template_Type_Code = 'PPT'

index is 324
before:
SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT'
after:
SELECT Templates.Template_ID  FROM Templates  WHERE Templates.Template_Type_Code IN (   SELECT Ref_Template_Types.Template_Type_Code    FROM Ref_Template_Types    WHERE Ref_Template_Types.Template_Type_Code = 'PP' OR Ref_Template_Types.Template_Type_Code = 'PPT' )

index is 325
before:
SELECT count(*) FROM Templates WHERE Template_Type_Code = 'CV'
after:
SELECT count(DISTINCT Template_ID) FROM Templates WHERE Template_Type_Code = 'CV'

index is 326
before:
SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = "CV"
after:
SELECT COUNT(Template_ID) FROM Templates WHERE Template_Type_Code = "CV"

index is 327
before:
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
after:
SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 5

index is 328
before:
SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5
after:
SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 5

index is 329
before:
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID) FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code
after:
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID)  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code

index is 330
before:
SELECT T1.Template_Type_Code ,  count(T2.Template_ID) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code GROUP BY T1.Template_Type_Code
after:
SELECT T1.Template_Type_Code, COUNT(T2.Template_ID)  FROM Ref_Template_Types AS T1  JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code

index is 331
before:
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code ORDER BY count(T2.Template_ID) DESC LIMIT 1
after:
SELECT T1.Template_Type_Code  FROM Ref_Template_Types AS T1  JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code  ORDER BY COUNT(T2.Template_ID) DESC  LIMIT 1

index is 332
before:
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code GROUP BY T2.Template_Type_Code ORDER BY count(*) DESC LIMIT 1
after:
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1

index is 333
before:
SELECT Template_Type_Code FROM Ref_Template_Types GROUP BY Template_Type_Code HAVING count(*) < 3.
after:
SELECT Template_Type_Code  FROM Ref_Template_Types  GROUP BY Template_Type_Code  HAVING COUNT(*) < 3;

index is 334
before:
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING count(*) < 3
after:
SELECT Ref_Template_Types.Template_Type_Code FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code GROUP BY Templates.Template_Type_Code HAVING COUNT(*) < 3

index is 335
before:
SELECT MIN(Version_Number), Template_Type_Code FROM Templates
after:
SELECT MIN(Version_Number), Template_Type_Code  FROM Templates GROUP BY Template_Type_Code

index is 336
before:
SELECT Version_Number, Template_Type_Code FROM Templates ORDER BY Version_Number ASC LIMIT 1
after:
SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates ORDER BY Templates.Version_Number ASC LIMIT 1

index is 337
before:
SELECT Templates.Template_Type_Code FROM Templates, Documents WHERE Documents.Document_Name  =  'Data base' AND Documents.Template_ID  =  Templates.Template_ID
after:
SELECT Ref_Template_Types.Template_Type_Code FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Data base'

index is 338
before:
SELECT Templates.Template_Type_Code FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Data base'
after:
SELECT Templates.Template_Type_Code FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Data base'

index is 339
before:
WHERE Ref_Template_Types.Template_Type_Code = 'BK'
after:
SELECT Documents.Document_Name FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'BK'

index is 340
before:
SELECT
after:
SELECT SELECT d.Document_Name FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID JOIN Ref_Template_Types rtt ON t.Template_Type_Code = rtt.Template_Type_Code WHERE rtt.Template_Type_Code = 'BK'

index is 341
before:
GROUP BY T1.Template_Type_Code
after:
SELECT T1.Template_Type_Code, COUNT(DISTINCT T3.Document_ID)  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  LEFT JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID  GROUP BY T1.Template_Type_Code

index is 342
before:
SELECT T1.Template_Type_Code, count(T2.Document_ID) FROM Ref_Template_Types AS T1 LEFT JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code
after:
SELECT T1.Template_Type_Code, COUNT(T2.Document_ID)  FROM Ref_Template_Types AS T1  LEFT JOIN Templates AS T3 ON T1.Template_Type_Code = T3.Template_Type_Code  LEFT JOIN Documents AS T2 ON T3.Template_ID = T2.Template_ID  GROUP BY T1.Template_Type_Code

index is 343
before:
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Documents AS T2 ON T1.Template_Type_Code  =  T2.Template_ID JOIN Templates AS T3 ON T2.Template_ID  =  T3.Template_ID GROUP BY T1.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
after:
SELECT T3.Template_Type_Code FROM Templates AS T3 JOIN Documents AS T2 ON T3.Template_ID = T2.Template_ID JOIN Ref_Template_Types AS T1 ON T3.Template_Type_Code = T1.Template_Type_Code GROUP BY T3.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1

index is 344
before:
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 INNER JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code INNER JOIN Documents AS T3 ON T3.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code ORDER BY count(T3.Template_ID) DESC LIMIT 1
after:
SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 INNER JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code INNER JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID GROUP BY T1.Template_Type_Code ORDER BY COUNT(T3.Template_ID) DESC LIMIT 1

index is 345
before:
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT DISTINCT Template_Type_Code FROM Documents)
after:
SELECT Template_Type_Code  FROM Ref_Template_Types  WHERE Template_Type_Code NOT IN (SELECT DISTINCT Template_Type_Code FROM Templates)

index is 346
before:
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT DISTINCT Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Ref_Template_Types ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code)
after:
SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types LEFT JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_ID IS NULL

index is 347
before:
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
after:
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types

index is 348
before:
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types
after:
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types

index is 349
before:
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
after:
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'

index is 350
before:
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'
after:
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'

index is 351
before:
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
after:
SELECT Template_Type_Code  FROM Ref_Template_Types  WHERE Template_Type_Description = 'Book'

index is 352
before:
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'
after:
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'

index is 353
before:
SELECT DISTINCT T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code JOIN Documents AS T3 ON T3.Template_ID = T2.Template_ID
after:
SELECT DISTINCT T1.Template_Type_Description  FROM Ref_Template_Types AS T1  JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID

index is 354
before:
SELECT DISTINCT T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID
after:
SELECT T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID GROUP BY T1.Template_Type_Description

index is 355
before:
SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation'
after:
SELECT

index is 356
before:
SELECT Template_ID FROM Templates WHERE Template_Details = 'Presentation'
after:
SELECT Templates.Template_ID  FROM Templates  JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation'

index is 357
before:
SELECT COUNT(*) FROM Paragraphs
after:
SELECT COUNT(*) FROM Paragraphs

index is 358
before:
SELECT COUNT(*) FROM Paragraphs
after:
SELECT COUNT(Paragraph_ID) FROM Paragraphs

index is 359
before:
SELECT COUNT(Paragraphs.Paragraph_ID) FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'Summer Show'
after:
SELECT COUNT(Paragraphs.Paragraph_ID) FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'Summer Show'

index is 360
before:
SELECT COUNT(Paragraphs.Paragraph_ID) FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'Summer Show'
after:
SELECT COUNT(Paragraphs.Paragraph_ID)  FROM Documents  JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID  WHERE Documents.Document_Name = 'Summer Show'

index is 361
before:
SELECT * FROM Paragraphs WHERE Paragraph_Text = 'Korea'
after:
SELECT Paragraphs.*  FROM Paragraphs  WHERE Paragraph_Text = 'Korea'

index is 362
before:
SELECT * FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'
after:
SELECT Paragraph_ID, Document_ID, Paragraph_Text, Other_Details  FROM Paragraphs  WHERE Paragraph_Text LIKE '%Korea%'

index is 363
before:
SELECT Paragraph_ID, Paragraph_Text FROM Paragraphs JOIN Documents ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'Welcome to NY'
after:
SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text  FROM Paragraphs  JOIN Documents ON Documents.Document_ID = Paragraphs.Document_ID  WHERE Documents.Document_Name = 'Welcome to NY'

index is 364
before:
WHERE Documents.Document_Name = 'Welcome to NY'
after:
SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text  FROM Paragraphs  JOIN Documents ON Documents.Document_ID = Paragraphs.Document_ID  WHERE Documents.Document_Name = 'Welcome to NY'

index is 365
before:
SELECT Paragraph_Text FROM Paragraphs JOIN Documents ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'Customer reviews'
after:
SELECT Paragraphs.Paragraph_Text  FROM Paragraphs  JOIN Documents ON Documents.Document_ID = Paragraphs.Document_ID  WHERE Documents.Document_Name = 'Customer reviews'

index is 366
before:
SELECT Paragraph_Text FROM Paragraphs JOIN Documents ON Documents.Document_ID = Paragraphs.Document_ID WHERE Documents.Document_Name = 'Customer reviews'
after:
SELECT Paragraphs.Paragraph_Text  FROM Paragraphs  JOIN Documents ON Documents.Document_ID = Paragraphs.Document_ID  WHERE Documents.Document_Name = 'Customer reviews'

index is 367
before:
SELECT Documents.Document_ID, count(Paragraphs.Paragraph_ID) FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID ORDER BY Documents.Document_ID
after:
SELECT Documents.Document_ID, COUNT(Paragraphs.Paragraph_ID) FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID ORDER BY Documents.Document_ID

index is 368
before:
```
after:
SELECT Documents.Document_ID, COUNT(Paragraphs.Paragraph_ID) AS num_paragraphs FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID ORDER BY Documents.Document_ID

index is 369
before:
```
after:
SELECT Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID) FROM Documents LEFT JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID, Documents.Document_Name

index is 370
before:
SELECT Document_ID, Document_Name, COUNT(Paragraph_ID) FROM Documents LEFT JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Document_ID, Document_Name
after:
SELECT Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID)  FROM Documents  LEFT JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID  GROUP BY Documents.Document_ID, Documents.Document_Name

index is 371
before:
SELECT DISTINCT T1.Document_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(T2.Paragraph_ID) >= 2
after:
SELECT DISTINCT T1.Document_ID  FROM Documents AS T1  JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  GROUP BY T1.Document_ID  HAVING COUNT(T2.Paragraph_ID) >= 2

index is 372
before:
SELECT Document_ID FROM Documents GROUP BY Document_ID HAVING COUNT(Document_ID) >= 2
after:
SELECT Documents.Document_ID  FROM Documents  JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID  GROUP BY Documents.Document_ID  HAVING COUNT(Paragraphs.Paragraph_ID) >= 2

index is 373
before:
```
after:
SELECT Document_ID, Document_Name FROM (     SELECT Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID) AS paragraph_count     FROM Documents     JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID     GROUP BY Documents.Document_ID, Documents.Document_Name     ORDER BY paragraph_count DESC     LIMIT 1 ) AS subquery

index is 374
before:
SELECT
after:
SELECT SELECT D.Document_ID, D.Document_Name FROM Documents D JOIN Paragraphs P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID, D.Document_Name ORDER BY COUNT(P.Paragraph_ID) DESC LIMIT 1;

index is 375
before:
```
after:
SELECT Documents.Document_ID FROM Documents LEFT JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID ORDER BY COUNT(Paragraphs.Paragraph_ID) ASC LIMIT 1

index is 376
before:
SELECT Documents.Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID HAVING COUNT(Paragraphs.Paragraph_ID) = (SELECT MIN(COUNT(Paragraphs.Paragraph_ID)) FROM Paragraphs GROUP BY Paragraphs.Document_ID)
after:
SELECT Documents.Document_ID  FROM Documents  JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID  GROUP BY Documents.Document_ID  HAVING COUNT(Paragraphs.Paragraph_ID) = (   SELECT MIN(ParagraphCount)    FROM (     SELECT COUNT(Paragraphs.Paragraph_ID) AS ParagraphCount      FROM Paragraphs      GROUP BY Paragraphs.Document_ID   ) )

index is 377
before:
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) >= 1 AND COUNT(Paragraph_ID) <= 2
after:
SELECT Documents.Document_ID  FROM Documents  JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID  GROUP BY Documents.Document_ID  HAVING COUNT(Paragraphs.Paragraph_ID) >= 1 AND COUNT(Paragraphs.Paragraph_ID) <= 2

index is 378
before:
SELECT
after:
SELECT Documents.Document_ID FROM Documents JOIN Paragraphs ON Paragraphs.Document_ID = Documents.Document_ID GROUP BY Documents.Document_ID HAVING COUNT(DISTINCT Paragraphs.Paragraph_ID) BETWEEN 1 AND 2;

index is 379
before:
)
after:
SELECT Documents.Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Paragraphs.Paragraph_Text IN ('Brazil', 'Ireland')

index is 380
before:
SELECT T1.Document_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Paragraph_Text = 'Brazil' INTERSECT SELECT T1.Document_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Paragraph_Text = 'Ireland'
after:
SELECT T1.Document_ID  FROM Documents AS T1  JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  WHERE T2.Paragraph_Text IN ('Brazil', 'Ireland')  GROUP BY T1.Document_ID  HAVING COUNT(DISTINCT T2.Paragraph_Text) = 2

index is 381
before:
SELECT COUNT(Teacher_ID) FROM teacher
after:
SELECT COUNT(Teacher_ID) FROM teacher

index is 382
before:
SELECT COUNT(*) FROM teacher
after:
SELECT COUNT(DISTINCT Teacher_ID) FROM teacher

index is 383
before:
SELECT Name FROM teacher ORDER BY Age ASC
after:
SELECT Name FROM teacher ORDER BY Age ASC

index is 384
before:
SELECT Name FROM teacher ORDER BY Age ASC
after:
SELECT Name FROM teacher ORDER BY Age ASC

index is 385
before:
SELECT Age, Hometown FROM teacher
after:
SELECT Age, Hometown FROM teacher

index is 386
before:
SELECT Age, Hometown FROM teacher
after:
SELECT Age, Hometown FROM teacher

index is 387
before:
SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District'
after:
SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District'

index is 388
before:
SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District'
after:
SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District'

index is 389
before:
SELECT Name FROM teacher WHERE Age IN (32, 33)
after:
SELECT teacher.Name FROM teacher WHERE teacher.Age IN (32, 33)

index is 390
before:
SELECT Name FROM teacher WHERE Age IN (32, 33)
after:
SELECT teacher.Name  FROM teacher  WHERE teacher.Age IN (32, 33)

index is 391
before:
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher) LIMIT 1
after:
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher) ORDER BY Age ASC LIMIT 1

index is 392
before:
SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
after:
SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1

index is 393
before:
SELECT Hometown, COUNT(*) FROM teacher GROUP BY Hometown
after:
SELECT Hometown, COUNT(DISTINCT Teacher_ID) FROM teacher GROUP BY Hometown

index is 394
before:
SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown
after:
SELECT Hometown, COUNT(Teacher_ID) FROM teacher GROUP BY Hometown

index is 395
before:
SELECT Hometown, count(*) AS count FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY Hometown ORDER BY count DESC LIMIT 1
after:
SELECT Hometown, COUNT(*) AS count FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY Hometown ORDER BY count DESC LIMIT 1

index is 396
before:
SELECT Hometown, COUNT(*) AS count FROM teacher GROUP BY Hometown ORDER BY count DESC LIMIT 1
after:
SELECT Hometown, COUNT(*) AS count  FROM teacher  GROUP BY Hometown  ORDER BY count DESC  LIMIT 1

index is 397
before:
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(DISTINCT Teacher_ID) >= 2
after:
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(DISTINCT Teacher_ID) >= 2

index is 398
before:
SELECT Hometown FROM teacher GROUP BY Hometown HAVING count(*) >= 2
after:
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(DISTINCT Teacher_ID) >= 2

index is 399
before:
SELECT teacher.Name, course.Course FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course.Course_ID = course_arrange.Course_ID
after:
SELECT teacher.Name, course.Course FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course.Course_ID = course_arrange.Course_ID;

index is 400
before:
SELECT T1.Name, T3.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID
after:
SELECT T1.Name AS Teacher_Name, T3.Course AS Course_Name  FROM teacher AS T1  JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  JOIN course AS T3 ON T2.Course_ID = T3.Course_ID

index is 401
before:
SELECT T1.Name, T3.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC
after:
SELECT T1.Name, T3.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC

index is 402
before:
SELECT T1.Name ,  T3.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC
after:
SELECT T1.Name, T3.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID ORDER BY T1.Name ASC

index is 403
before:
SELECT T1.Name FROM teacher AS T1, course_arrange AS T2, course AS T3 WHERE T3.Course = 'math' AND T3.Course_ID = T2.Course_ID AND T2.Teacher_ID = T1.Teacher_ID
after:
SELECT T1.Name  FROM teacher AS T1  JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  JOIN course AS T3 ON T2.Course_ID = T3.Course_ID  WHERE T3.Course = 'math'

index is 404
before:
SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course.Course_ID = course_arrange.Course_ID WHERE course.Course = 'math'
after:
SELECT teacher.Name  FROM teacher  JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID  JOIN course ON course.Course_ID = course_arrange.Course_ID  WHERE course.Course = 'math'

index is 405
before:
SELECT teacher.Name, count(course_arrange.Course_ID) AS num_courses FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID GROUP BY teacher.Name
after:
SELECT teacher.Name, COUNT(DISTINCT course_arrange.Course_ID) AS num_courses FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY teacher.Name

index is 406
before:
SELECT T1.Name, COUNT(T2.Course_ID) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Name
after:
SELECT T1.Name, COUNT(T2.Course_ID)  FROM teacher AS T1  JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name

index is 407
before:
SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING COUNT(T2.Course_ID) >= 2
after:
SELECT T1.Name  FROM teacher AS T1  JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Teacher_ID  HAVING COUNT(DISTINCT T2.Course_ID) >= 2

index is 408
before:
SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Teacher_ID HAVING count(DISTINCT T2.Course_ID) >= 2
after:
SELECT T1.Name  FROM teacher AS T1  JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Name  HAVING COUNT(DISTINCT T2.Course_ID) >= 2

index is 409
before:
SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT DISTINCT Teacher_ID FROM course_arrange)
after:
SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT DISTINCT Teacher_ID FROM course_arrange)

index is 410
before:
SELECT T1.Name FROM teacher AS T1 WHERE T1.Teacher_ID NOT IN (SELECT T2.Teacher_ID FROM course_arrange AS T2)
after:
SELECT T1.Name FROM teacher AS T1 WHERE T1.Teacher_ID NOT IN (SELECT T2.Teacher_ID FROM course_arrange AS T2)

index is 411
before:
SELECT COUNT(*) FROM visitor WHERE Age < 30
after:
SELECT COUNT(*) FROM visitor WHERE Age < 30

index is 412
before:
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC
after:
SELECT visitor.Name  FROM visitor  WHERE visitor.Level_of_membership > 4  ORDER BY visitor.Level_of_membership DESC

index is 413
before:
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4
after:
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4

index is 414
before:
ORDER BY Age DESC
after:
SELECT visitor.Name, visitor.Level_of_membership FROM visitor WHERE visitor.Level_of_membership > 4 ORDER BY visitor.Age DESC

index is 415
before:
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)
after:
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)

index is 416
before:
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < 2009
after:
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < 2009

index is 417
before:
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'
after:
SELECT Open_Year, Num_of_Staff  FROM museum  WHERE Name = 'Plaza Museum'

index is 418
before:
SELECT Name FROM museum WHERE Num_of_Staff > (SELECT min(Num_of_Staff) FROM museum WHERE Open_Year > 2010)
after:
SELECT m.Name FROM museum m WHERE m.Num_of_Staff > (SELECT min(m2.Num_of_Staff) FROM museum m2 WHERE m2.Open_Year > 2010)

index is 419
before:
)
after:
SELECT visitor.ID, visitor.Name, visitor.Age FROM visitor WHERE visitor.ID IN (   SELECT visit.visitor_ID   FROM visit   GROUP BY visit.visitor_ID   HAVING COUNT(*) > 1 )

index is 420
before:
SELECT
after:
SELECT SELECT visitor.ID, visitor.Name, visitor.Level_of_membership FROM visitor JOIN visit ON visit.visitor_ID = visitor.ID GROUP BY visitor.ID, visitor.Name, visitor.Level_of_membership ORDER BY SUM(visit.Total_spent) DESC LIMIT 1;

index is 421
before:
SELECT museum.Museum_ID, museum.Name FROM museum JOIN visit ON museum.Museum_ID = visit.Museum_ID GROUP BY museum.Museum_ID, museum.Name ORDER BY COUNT(visit.Museum_ID) DESC LIMIT 1
after:
SELECT museum.Museum_ID, museum.Name  FROM museum  JOIN visit ON museum.Museum_ID = visit.Museum_ID  GROUP BY museum.Museum_ID, museum.Name  ORDER BY COUNT(visit.Museum_ID) DESC  LIMIT 1

index is 422
before:
SELECT Name FROM museum WHERE Museum_ID NOT IN (SELECT DISTINCT Museum_ID FROM visit)
after:
SELECT Name FROM museum WHERE Museum_ID NOT IN (SELECT Museum_ID FROM visit)

index is 423
before:
SELECT visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID ORDER BY visit.Num_of_Ticket DESC LIMIT 1
after:
SELECT visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID ORDER BY visit.Num_of_Ticket DESC LIMIT 1

index is 424
before:
SELECT AVG(Num_of_Ticket), MAX(Num_of_Ticket) FROM visit
after:
SELECT AVG(Num_of_Ticket) AS Average_Num_of_Tickets, MAX(Num_of_Ticket) AS Maximum_Num_of_Tickets FROM visit

index is 425
before:
SELECT sum(T1.Total_spent) FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1
after:
SELECT SUM(T1.Total_spent) AS Total_Expense FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID WHERE T2.Level_of_membership = 1

index is 426
before:
SELECT
after:
SELECT SELECT DISTINCT v.Name FROM visitor v JOIN visit vi ON v.ID = vi.visitor_ID JOIN museum m ON vi.Museum_ID = m.Museum_ID WHERE m.Open_Year < 2009 OR m.Open_Year > 2011 GROUP BY v.Name HAVING COUNT(DISTINCT m.Open_Year) > 1

index is 427
before:
SELECT count(*) FROM visitor WHERE ID NOT IN (SELECT visitor_ID FROM visit WHERE Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year > 2010))
after:
SELECT count(*) FROM visitor WHERE ID NOT IN (SELECT visitor_ID FROM visit WHERE Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year > 2010));

index is 428
before:
SELECT COUNT(*) FROM museum WHERE Open_Year > 2013 OR Open_Year < 2008
after:
SELECT COUNT(*) FROM museum WHERE Open_Year > 2013 OR Open_Year < 2008

index is 429
before:
SELECT COUNT(player_id) FROM players
after:
SELECT COUNT(*) FROM players

index is 430
before:
SELECT COUNT(player_id) FROM players
after:
SELECT COUNT(*) FROM players

index is 431
before:
SELECT COUNT(*) FROM matches
after:
SELECT COUNT(*) FROM matches;

index is 432
before:
SELECT COUNT(*) FROM matches
after:
SELECT COUNT(*) FROM matches

index is 433
before:
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'
after:
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'

index is 434
before:
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'
after:
SELECT players.first_name, players.birth_date FROM players WHERE players.country_code = 'USA'

index is 435
before:
SELECT AVG(DATEDIFF(CURRENT_DATE(), players.birth_date) / 365) AS average_age FROM matches JOIN players ON matches.winner_id = players.player_id OR matches.loser_id = players.player_id
after:
SELECT AVG(DATEDIFF(CURRENT_DATE(), players.birth_date) / 365) AS average_age FROM matches JOIN players ON matches.winner_id = players.player_id OR matches.loser_id = players.player_id

index is 436
before:
SELECT AVG(DATEDIFF(CURRENT_DATE, players.birth_date)) AS average_loser_age, AVG(DATEDIFF(CURRENT_DATE, players.birth_date)) AS average_winner_age FROM matches JOIN players ON matches.loser_id = players.player_id OR matches.winner_id = players.player_id
after:
SELECT AVG(DATEDIFF(CURRENT_DATE, loser_birth_date)) AS average_loser_age, AVG(DATEDIFF(CURRENT_DATE, winner_birth_date)) AS average_winner_age FROM matches JOIN players ON matches.loser_id = players.player_id OR matches.winner_id = players.player_id

index is 437
before:
SELECT avg(rankings.ranking) FROM rankings JOIN matches ON rankings.player_id = matches.winner_id
after:
SELECT avg(rankings.ranking)  FROM rankings  JOIN matches ON rankings.player_id = matches.winner_id

index is 438
before:
SELECT AVG(winner_rank) FROM matches
after:
SELECT AVG(winner_rank) AS average_rank FROM matches

index is 439
before:
SELECT max(loser_rank) FROM matches
after:
SELECT max(loser_rank) FROM matches

index is 440
before:
SELECT MAX(loser_rank) FROM matches
after:
SELECT MAX(loser_rank) AS best_rank FROM matches

index is 441
before:
SELECT COUNT(DISTINCT country_code) FROM players
after:
SELECT COUNT(DISTINCT country_code) FROM players

index is 442
before:
SELECT COUNT(DISTINCT country_code) FROM players
after:
SELECT COUNT(DISTINCT country_code) FROM players

index is 443
before:
SELECT COUNT(DISTINCT T1.last_name) FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.loser_id
after:
SELECT COUNT(DISTINCT T1.loser_name) FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.loser_id

index is 444
before:
SELECT COUNT(DISTINCT loser_name) FROM matches
after:
SELECT COUNT(DISTINCT loser_name) FROM matches

index is 445
before:
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10
after:
SELECT tourney_name  FROM matches  GROUP BY tourney_name  HAVING COUNT(*) > 10

index is 446
before:
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10
after:
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10

index is 447
before:
HAVING COUNT(DISTINCT M.year) = 2
after:
SELECT P.first_name, P.last_name FROM players AS P INNER JOIN matches AS M ON P.player_id = M.winner_id WHERE M.year IN (2013, 2016) GROUP BY P.player_id HAVING COUNT(DISTINCT M.year) = 2

index is 448
before:
SELECT T1.first_name, T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.year = 2013 AND T1.player_id IN (SELECT T3.player_id FROM players AS T3 JOIN matches AS T4 ON T3.player_id = T4.winner_id WHERE T4.year = 2016)
after:
SELECT T1.first_name, T1.last_name  FROM players AS T1  JOIN matches AS T2 ON T1.player_id = T2.winner_id  WHERE T2.year = 2013  AND T1.player_id IN (     SELECT T3.player_id      FROM players AS T3      JOIN matches AS T4 ON T3.player_id = T4.winner_id      WHERE T4.year = 2016 )

index is 449
before:
SELECT count(*) FROM matches WHERE year  =  2013 OR year  =  2016
after:
SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2016

index is 450
before:
SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2016
after:
SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2016

index is 451
before:
SELECT country_code, first_name FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE tourney_name = 'WTA Championships') AND player_id IN (SELECT winner_id FROM matches WHERE tourney_name = 'Australian Open')
after:
SELECT country_code, first_name  FROM players  WHERE player_id IN (   SELECT winner_id    FROM matches    WHERE tourney_name = 'WTA Championships'   AND player_id IN (     SELECT winner_id      FROM matches      WHERE tourney_name = 'Australian Open'   ) )

index is 452
before:
SELECT first_name, country_code FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE tourney_name = 'WTA Championships') AND player_id IN (SELECT winner_id FROM matches WHERE tourney_name = 'Australian Open')
after:
SELECT players.first_name, players.country_code  FROM players INNER JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'WTA Championships' AND players.player_id IN      (SELECT winner_id FROM matches WHERE tourney_name = 'Australian Open')

index is 453
before:
SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1
after:
SELECT players.first_name, players.country_code FROM players ORDER BY players.birth_date ASC LIMIT 1

index is 454
before:
SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1
after:
SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1

index is 455
before:
SELECT first_name, last_name FROM players ORDER BY birth_date
after:
SELECT first_name, last_name FROM players ORDER BY birth_date

index is 456
before:
SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM players ORDER BY birth_date
after:
SELECT CONCAT(first_name, ' ', last_name) AS full_name  FROM players  ORDER BY birth_date

index is 457
before:
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date
after:
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;

index is 458
before:
ORDER BY birth_date ASC
after:
SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM players WHERE hand = 'left' ORDER BY birth_date ASC

index is 459
before:
SELECT first_name, country_code FROM players JOIN rankings ON players.player_id = rankings.player_id ORDER BY tours DESC LIMIT 1
after:
SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT(rankings.tours) DESC LIMIT 1

index is 460
before:
SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id ORDER BY rankings.tours DESC LIMIT 1
after:
SELECT players.first_name, players.country_code  FROM players  JOIN rankings ON players.player_id = rankings.player_id  GROUP BY players.player_id  ORDER BY COUNT(rankings.tours) DESC  LIMIT 1

index is 461
before:
SELECT year FROM matches GROUP BY year ORDER BY count(*) DESC LIMIT 1
after:
SELECT matches.year FROM matches GROUP BY matches.year ORDER BY COUNT(*) DESC LIMIT 1

index is 462
before:
SELECT year FROM matches GROUP BY year ORDER BY count(*) DESC LIMIT 1
after:
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1

index is 463
before:
LIMIT 1
after:
SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) AS total_ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON matches.winner_id = players.player_id GROUP BY players.player_id ORDER BY COUNT(matches.match_num) DESC LIMIT 1

index is 464
before:
SELECT
after:
SELECT SELECT winner_name, SUM(winner_rank_points) AS total_rank_points FROM matches JOIN players ON matches.winner_id = players.player_id GROUP BY winner_name ORDER BY total_rank_points DESC LIMIT 1;

index is 465
before:
This query selects the first name and last name of the winner who has the highest ranking points and participated in the Australian Open tournament.
after:
SELECT players.first_name, players.last_name FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON matches.winner_id = players.player_id WHERE matches.tourney_name = 'Australian Open' GROUP BY players.player_id ORDER BY rankings.ranking_points DESC LIMIT 1

index is 466
before:
LIMIT 1
after:
SELECT players.first_name, players.last_name FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON matches.winner_id = players.player_id WHERE matches.tourney_name = 'Australian Open' GROUP BY players.player_id ORDER BY rankings.ranking_points DESC LIMIT 1

index is 467
before:
SELECT T1.first_name, T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.loser_id WHERE T2.minutes = (SELECT MAX(minutes) FROM matches)
after:
SELECT T1.first_name AS loser_first_name, T1.last_name AS loser_last_name, T2.first_name AS winner_first_name, T2.last_name AS winner_last_name FROM matches AS M JOIN players AS T1 ON M.loser_id = T1.player_id JOIN players AS T2 ON M.winner_id = T2.player_id WHERE M.minutes = (SELECT MAX(minutes) FROM matches)

index is 468
before:
SELECT T1.first_name ,  T1.last_name FROM players AS T1, matches AS T2 WHERE T2.minutes  =  (SELECT max(minutes) FROM matches) AND (T1.player_id  =  T2.winner_id OR T1.player_id  =  T2.loser_id)
after:
SELECT T1.first_name, T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id OR T1.player_id = T2.loser_id WHERE T2.minutes = (SELECT MAX(minutes) FROM matches)

index is 469
before:
SELECT avg(ranking), first_name FROM rankings JOIN players ON rankings.player_id = players.player_id GROUP BY first_name
after:
SELECT avg(rankings.ranking) AS average_ranking, players.first_name FROM rankings JOIN players ON rankings.player_id = players.player_id GROUP BY players.first_name

index is 470
before:
SELECT first_name , avg(ranking) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY first_name
after:
SELECT players.first_name, AVG(rankings.ranking) AS average_ranking  FROM players  JOIN rankings ON players.player_id = rankings.player_id  GROUP BY players.first_name

index is 471
before:
SELECT players.first_name, SUM(rankings.ranking_points) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name
after:
SELECT players.first_name, SUM(rankings.ranking_points)  FROM players  JOIN rankings ON players.player_id = rankings.player_id  GROUP BY players.first_name

index is 472
before:
SELECT players.first_name, sum(rankings.ranking_points) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name
after:
SELECT players.first_name, sum(rankings.ranking_points)  FROM players  JOIN rankings ON players.player_id = rankings.player_id  GROUP BY players.first_name

index is 473
before:
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code
after:
SELECT country_code, COUNT(DISTINCT player_id) AS player_count FROM players GROUP BY country_code

index is 474
before:
SELECT country_code, COUNT(*) FROM players GROUP BY country_code
after:
SELECT country_code, COUNT(DISTINCT player_id) AS player_count FROM players GROUP BY country_code

index is 475
before:
SELECT country_code FROM players GROUP BY country_code ORDER BY count(player_id) DESC LIMIT 1
after:
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1

index is 476
before:
SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
after:
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1

index is 477
before:
SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50
after:
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(DISTINCT player_id) > 50

index is 478
before:
SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50
after:
SELECT country_code  FROM players  GROUP BY country_code  HAVING COUNT(*) > 50

index is 479
before:
SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date
after:
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date

index is 480
before:
SELECT ranking_date, COUNT(DISTINCT tours) FROM rankings GROUP BY ranking_date
after:
SELECT ranking_date, COUNT(DISTINCT tours) FROM rankings GROUP BY ranking_date

index is 481
before:
SELECT year, COUNT(*) FROM matches GROUP BY year
after:
SELECT year, COUNT(*)  FROM matches  GROUP BY year

index is 482
before:
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year
after:
SELECT year, COUNT(*) AS match_count  FROM matches  GROUP BY year

index is 483
before:
```
after:
SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON matches.winner_id = players.player_id ORDER BY players.birth_date ASC LIMIT 3

index is 484
before:
SELECT
after:
SELECT SELECT winner_name, winner_rank FROM matches JOIN players ON matches.winner_id = players.player_id ORDER BY winner_age ASC LIMIT 3

index is 485
before:
SELECT COUNT(DISTINCT T1.winner_id) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'WTA Championships' AND T2.hand = 'L'
after:
SELECT COUNT(DISTINCT T1.winner_id) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'WTA Championships' AND T2.hand = 'L'

index is 486
before:
SELECT COUNT(DISTINCT T1.player_id) FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'WTA Championships' AND T1.hand = 'left'
after:
SELECT COUNT(DISTINCT T1.player_id)  FROM players AS T1  JOIN matches AS T2 ON T1.player_id = T2.winner_id  WHERE T2.tourney_name = 'WTA Championships'  AND T1.hand = 'L'

index is 487
before:
LIMIT 1
after:
SELECT T1.first_name, T1.country_code, T1.birth_date  FROM players AS T1  JOIN rankings AS T2 ON T1.player_id = T2.player_id  JOIN matches AS T3 ON T3.winner_id = T1.player_id  GROUP BY T1.player_id  ORDER BY T2.ranking_points DESC  LIMIT 1

index is 488
before:
Note: The intermediate representation uses the column names from the schema links to represent the query.
after:
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN matches ON matches.winner_id = players.player_id ORDER BY matches.winner_rank_points DESC LIMIT 1

index is 489
before:
SELECT hand, COUNT(player_id) AS num_players FROM players GROUP BY hand
after:
SELECT hand, COUNT(*) AS num_players FROM players GROUP BY hand

index is 490
before:
SELECT hand, COUNT(player_id) FROM players GROUP BY hand
after:
SELECT hand, COUNT(DISTINCT player_id) FROM players GROUP BY hand

index is 491
before:
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured'
after:
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured'

index is 492
before:
SELECT name, tonnage FROM ship ORDER BY name DESC
after:
SELECT name, tonnage FROM ship ORDER BY name DESC

index is 493
before:
SELECT name, date, result FROM battle
after:
SELECT name, date, result FROM battle

index is 494
before:
SELECT MAX(killed), MIN(killed) FROM death JOIN ship ON death.caused_by_ship_id = ship.id
after:
SELECT MAX(death.killed), MIN(death.killed)  FROM death  JOIN ship ON death.caused_by_ship_id = ship.id

index is 495
before:
SELECT AVG(injured) FROM death
after:
SELECT AVG(injured) FROM death

index is 496
before:
WHERE ship.tonnage = 't'
after:
SELECT death.id, death.note, death.killed, death.injured, ship.tonnage FROM death JOIN ship ON death.caused_by_ship_id = ship.id WHERE ship.tonnage = 't'

index is 497
before:
SELECT name, result FROM battle WHERE bulgarian_commander <> 'Boril'
after:
SELECT name, result  FROM battle  WHERE bulgarian_commander <> 'Boril'

index is 498
before:
SELECT DISTINCT T1.id, T1.name FROM battle AS T1 JOIN ship AS T2 ON T2.lost_in_battle = T1.id WHERE T2.ship_type = 'Brig'
after:
SELECT T1.id, T1.name  FROM battle AS T1  JOIN ship AS T2 ON T2.lost_in_battle = T1.id  WHERE T2.ship_type = 'Brig'

index is 499
before:
SELECT T1.id , T1.name FROM battle AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id JOIN ship AS T3 ON T2.caused_by_ship_id = T3.id WHERE T2.killed > 10 GROUP BY T1.id, T1.name
after:
SELECT T1.id, T1.name  FROM battle AS T1  JOIN ship AS T2 ON T1.id = T2.lost_in_battle  JOIN death AS T3 ON T2.id = T3.caused_by_ship_id  WHERE T3.killed > 10  GROUP BY T1.id, T1.name

index is 500
before:
LIMIT 1
after:
SELECT ship.id, ship.name  FROM ship  JOIN death ON death.caused_by_ship_id = ship.id  GROUP BY ship.id, ship.name  ORDER BY SUM(death.injured) DESC  LIMIT 1

index is 501
before:
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
after:
SELECT name  FROM battle  WHERE bulgarian_commander = 'Kaloyan'  AND latin_commander = 'Baldwin I'

index is 502
before:
SELECT COUNT(DISTINCT result) FROM battle
after:
SELECT COUNT(DISTINCT result) AS result_count FROM battle

index is 503
before:
SELECT count(battle.id) FROM battle LEFT JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.tonnage != '225' OR ship.tonnage IS NULL
after:
SELECT count(battle.id)  FROM battle  LEFT JOIN ship ON battle.id = ship.lost_in_battle  WHERE ship.tonnage != '225' OR ship.tonnage IS NULL AND ship.id IS NULL

index is 504
before:
SELECT battle.name, battle.date FROM battle JOIN ship ON ship.lost_in_battle = battle.id WHERE ship.name = 'Lettice' OR ship.name = 'HMS Atalanta'
after:
SELECT battle.name, battle.date  FROM battle  JOIN ship ON ship.lost_in_battle = battle.id  WHERE ship.name = 'Lettice' OR ship.name = 'HMS Atalanta'

index is 505
before:
SELECT name, result, bulgarian_commander FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')
after:
SELECT name, result, bulgarian_commander  FROM battle  WHERE id NOT IN (   SELECT lost_in_battle    FROM ship    WHERE location = 'English Channel' AND lost_in_battle IS NOT NULL )

index is 506
before:
SELECT note FROM death WHERE note LIKE '%East%'
after:
SELECT note FROM death WHERE note LIKE '%East%'

index is 507
before:
SELECT line_1, line_2 FROM Addresses
after:
SELECT line_1, line_2  FROM Addresses

index is 508
before:
SELECT line_1, line_2 FROM Addresses
after:
SELECT line_1, line_2 FROM Addresses

index is 509
before:
SELECT COUNT(*) FROM Courses
after:
SELECT COUNT(*) FROM Courses

index is 510
before:
SELECT COUNT(*) FROM Courses
after:
SELECT COUNT(course_id) FROM Courses

index is 511
before:
SELECT course_description FROM Courses WHERE course_name = 'Math'
after:
SELECT course_description FROM Courses WHERE course_name = 'Math'

index is 512
before:
SELECT course_description FROM Courses WHERE course_name LIKE '%Math%'
after:
SELECT Courses.course_description  FROM Courses  WHERE Courses.course_name LIKE '%Math%'

index is 513
before:
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
after:
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'

index is 514
before:
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'
after:
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'

index is 515
before:
SELECT department_name, department_id FROM Departments GROUP BY department_id ORDER BY COUNT(Degree_Programs.degree_program_id) DESC LIMIT 1
after:
SELECT Departments.department_name, Departments.department_id  FROM Departments  JOIN Degree_Programs ON Degree_Programs.department_id = Departments.department_id GROUP BY Departments.department_id  ORDER BY COUNT(Degree_Programs.degree_program_id) DESC  LIMIT 1

index is 516
before:
SELECT department_name, department_id FROM Departments GROUP BY department_id HAVING count(*) = (SELECT max(count_department_id) FROM (SELECT department_id, count(*) AS count_department_id FROM Degree_Programs GROUP BY department_id) AS subquery)
after:
SELECT department_name, department_id FROM Departments GROUP BY department_id HAVING count(*) = (   SELECT max(count_department_id)   FROM (     SELECT department_id, count(*) AS count_department_id     FROM Degree_Programs     GROUP BY department_id   ) AS subquery )

index is 517
before:
SELECT COUNT(DISTINCT T1.department_id) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id
after:
SELECT COUNT(DISTINCT T1.department_id) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id

index is 518
before:
SELECT COUNT(DISTINCT T1.department_id) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id
after:
SELECT COUNT(DISTINCT T2.department_id) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id

index is 519
before:
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs
after:
SELECT COUNT(DISTINCT degree_summary_name) AS count_degree_names FROM Degree_Programs

index is 520
before:
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs
after:
SELECT COUNT(DISTINCT degree_summary_name) AS degree_count FROM Degree_Programs

index is 521
before:
SELECT COUNT(*) FROM Degree_Programs JOIN Departments ON Degree_Programs.department_id = Departments.department_id WHERE Departments.department_name = 'engineering'
after:
SELECT COUNT(*) FROM Degree_Programs WHERE department_id IN (SELECT department_id FROM Departments WHERE department_name = 'engineering')

index is 522
before:
SELECT count(*) FROM Degree_Programs JOIN Departments ON Degree_Programs.department_id = Departments.department_id WHERE Departments.department_name = 'engineering'
after:
SELECT count(Degree_Programs.degree_program_id) FROM Degree_Programs JOIN Departments ON Degree_Programs.department_id = Departments.department_id WHERE Departments.department_name = 'engineering'

index is 523
before:
SELECT section_name, section_description FROM Sections
after:
SELECT section_name, section_description FROM Sections

index is 524
before:
SELECT section_name, section_description, course_name, course_description FROM Sections JOIN Courses ON Sections.course_id = Courses.course_id
after:
SELECT Sections.section_name, Sections.section_description FROM Sections JOIN Courses ON Sections.course_id = Courses.course_id

index is 525
before:
SELECT
after:
SELECT SELECT Courses.course_id, Courses.course_name FROM Courses JOIN Sections ON Courses.course_id = Sections.course_id GROUP BY Courses.course_id, Courses.course_name HAVING COUNT(Sections.section_id) <= 2;

index is 526
before:
SELECT Courses.course_name, Courses.course_id FROM Courses WHERE Courses.course_id IN (SELECT Sections.course_id FROM Sections GROUP BY Sections.course_id HAVING count(*) < 2)
after:
SELECT Courses.course_name, Courses.course_id  FROM Courses  WHERE Courses.course_id IN      (SELECT Sections.course_id      FROM Sections      GROUP BY Sections.course_id      HAVING COUNT(*) < 2)

index is 527
before:
SELECT section_name FROM Sections ORDER BY section_name DESC
after:
SELECT section_name FROM Sections ORDER BY section_name DESC

index is 528
before:
SELECT section_name FROM Sections ORDER BY section_name DESC
after:
SELECT section_name  FROM Sections  ORDER BY section_name DESC

index is 529
before:
SELECT T1.semester_id, T1.semester_name FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id, T1.semester_name ORDER BY count(T2.student_enrolment_id) DESC LIMIT 1
after:
SELECT T1.semester_id, T1.semester_name FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id, T1.semester_name ORDER BY COUNT(T2.student_enrolment_id) DESC LIMIT 1

index is 530
before:
SELECT Semesters.semester_name, Semesters.semester_id FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id WHERE Student_Enrolment.semester_id IN (SELECT semester_id FROM Student_Enrolment GROUP BY semester_id HAVING COUNT(*) = (SELECT MAX(num_students) FROM (SELECT semester_id, COUNT(*) AS num_students FROM Student_Enrolment GROUP BY semester_id) AS counts)) ORDER BY Semesters.semester_id
after:
SELECT Semesters.semester_name, Semesters.semester_id  FROM Semesters  JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id  GROUP BY Semesters.semester_id  HAVING COUNT(*) = (     SELECT MAX(num_students)      FROM (         SELECT semester_id, COUNT(*) AS num_students          FROM Student_Enrolment          GROUP BY semester_id     ) AS counts ) ORDER BY Semesters.semester_id;

index is 531
before:
SELECT department_description FROM Departments WHERE department_name LIKE '%the computer%'
after:
SELECT department_description  FROM Departments  WHERE department_name LIKE '%the computer%'

index is 532
before:
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
after:
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'

index is 533
before:
SELECT Students.first_name, Students.middle_name, Students.last_name, Students.student_id FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id GROUP BY Students.first_name, Students.middle_name, Students.last_name, Students.student_id HAVING COUNT(Student_Enrolment.degree_program_id) = 2 AND COUNT(DISTINCT Student_Enrolment.semester_id) = 1
after:
SELECT Students.first_name, Students.middle_name, Students.last_name, Students.student_id FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id GROUP BY Students.first_name, Students.middle_name, Students.last_name, Students.student_id HAVING COUNT(DISTINCT Student_Enrolment.degree_program_id) = 2 AND COUNT(DISTINCT Student_Enrolment.semester_id) = 1

index is 534
before:
)
after:
SELECT Students.student_id, Students.first_name, Students.middle_name, Students.last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Student_Enrolment.semester_id = 1 GROUP BY Students.student_id HAVING COUNT(DISTINCT Student_Enrolment.degree_program_id) = 2

index is 535
before:
SELECT first_name, middle_name, last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name = 'Bachelor'
after:
SELECT first_name, middle_name, last_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name = 'Bachelor';

index is 536
before:
WHERE Degree_Programs.degree_summary_name = 'Bachelors'
after:
SELECT first_name, middle_name, last_name  FROM Students  JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id  JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id  WHERE Degree_Programs.degree_summary_name = 'Bachelors'

index is 537
before:
This query will give you the kind of program (degree summary name) with the most number of students enrolled.
after:
SELECT Degree_Programs.degree_summary_name, COUNT(*) AS num_students FROM Student_Enrolment JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id GROUP BY Degree_Programs.degree_summary_name ORDER BY num_students DESC LIMIT 1

index is 538
before:
SELECT Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id GROUP BY Degree_Programs.degree_summary_name ORDER BY COUNT(Student_Enrolment.student_enrolment_id) DESC LIMIT 1
after:
SELECT Degree_Programs.degree_summary_name  FROM Degree_Programs  JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id  GROUP BY Degree_Programs.degree_summary_name  ORDER BY COUNT(Student_Enrolment.student_enrolment_id) DESC  LIMIT 1

index is 539
before:
This query will retrieve the degree program with the highest number of enrolled students, listing both the degree program ID and the summary.
after:
SELECT Degree_Programs.degree_program_id, Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id GROUP BY Degree_Programs.degree_program_id, Degree_Programs.degree_summary_name ORDER BY COUNT(Student_Enrolment.student_enrolment_id) DESC LIMIT 1

index is 540
before:
This query retrieves the degree program ID and the summary of the degree program with the highest number of students enrolled.
after:
SELECT degree_program_id, degree_summary_description  FROM Degree_Programs  JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id  GROUP BY degree_program_id, degree_summary_description  ORDER BY COUNT(Student_Enrolment.student_enrolment_id) DESC  LIMIT 1

index is 541
before:
SELECT student_id, first_name, middle_name, last_name, COUNT(student_enrolment_id) FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id GROUP BY student_id ORDER BY COUNT(student_enrolment_id) DESC LIMIT 1.
after:
SELECT Students.student_id, Students.first_name, Students.middle_name, Students.last_name, COUNT(Student_Enrolment.student_enrolment_id) AS enrollment_count FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id GROUP BY Students.student_id, Students.first_name, Students.middle_name, Students.last_name ORDER BY enrollment_count DESC LIMIT 1;

index is 542
before:
SELECT first_name, middle_name, last_name, student_id, COUNT(T2.student_enrolment_id) AS enrollments FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY enrollments DESC LIMIT 1
after:
SELECT first_name, middle_name, last_name, T1.student_id, COUNT(T2.student_enrolment_id) AS enrollments FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY enrollments DESC LIMIT 1

index is 543
before:
SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)
after:
SELECT Semesters.semester_name FROM Semesters LEFT JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id WHERE Student_Enrolment.student_enrolment_id IS NULL

index is 544
before:
SELECT semester_name FROM Semesters LEFT JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id WHERE Student_Enrolment.semester_id IS NULL
after:
SELECT semester_name FROM Semesters LEFT JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id WHERE Student_Enrolment.student_enrolment_id IS NULL

index is 545
before:
SELECT DISTINCT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id
after:
SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id

index is 546
before:
SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id
after:
SELECT T1.course_name  FROM Courses AS T1  JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id JOIN Student_Enrolment AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id;

index is 547
before:
LIMIT 1
after:
SELECT Courses.course_name FROM Courses INNER JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id GROUP BY Courses.course_name ORDER BY COUNT(*) DESC LIMIT 1

index is 548
before:
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY count(T2.student_enrolment_id) DESC LIMIT 1
after:
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(T2.student_enrolment_id) DESC LIMIT 1

index is 549
before:
SELECT last_name FROM Students WHERE Addresses.state_province_county  =  'North Carolina' AND student_id NOT IN (SELECT student_id FROM Student_Enrolment)
after:
SELECT last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id WHERE Addresses.state_province_county = 'North Carolina' AND student_id NOT IN (SELECT student_id FROM Student_Enrolment)

index is 550
before:
SELECT last_name FROM Students WHERE current_address_id IN (SELECT address_id FROM Addresses WHERE state_province_county  =  'North Carolina') AND student_id NOT IN (SELECT student_id FROM Student_Enrolment WHERE degree_program_id IS NOT NULL)
after:
SELECT Students.last_name  FROM Students  JOIN Addresses ON Students.current_address_id = Addresses.address_id LEFT JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Addresses.state_province_county = 'North Carolina'  AND Student_Enrolment.degree_program_id IS NULL

index is 551
before:
SELECT transcript_date ,  transcript_id FROM Transcripts WHERE transcript_id NOT IN (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id HAVING count(*) < 2)
after:
SELECT transcript_date, transcript_id  FROM Transcripts  WHERE transcript_id IN (     SELECT transcript_id      FROM Transcript_Contents      GROUP BY transcript_id      HAVING COUNT(*) >= 2 )

index is 552
before:
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(*) >= 2
after:
SELECT T1.transcript_id, T1.transcript_date FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id, T1.transcript_date HAVING COUNT(*) >= 2

index is 553
before:
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
after:
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'

index is 554
before:
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
after:
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'

index is 555
before:
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
after:
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1

index is 556
before:
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
after:
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1

index is 557
before:
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
after:
SELECT first_name, middle_name, last_name  FROM Students  ORDER BY date_first_registered  LIMIT 1

index is 558
before:
This query joins the Students and Transcripts tables based on the student_id column. It selects the first_name, middle_name, and last_name columns from the Students table and orders the results by the transcript_date column in ascending order. Finally, it limits the result to only one row, which corresponds to the earliest school graduate.
after:
SELECT first_name, middle_name, last_name FROM Students JOIN Transcripts ON Students.student_id = Transcripts.student_id ORDER BY Transcripts.transcript_date ASC LIMIT 1

index is 559
before:
SELECT first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id AND Students.current_address_id = Addresses.address_id WHERE Students.permanent_address_id <> Students.current_address_id
after:
SELECT Students.first_name  FROM Students  JOIN Addresses AS permanent ON Students.permanent_address_id = permanent.address_id  JOIN Addresses AS current ON Students.current_address_id = current.address_id  WHERE permanent.address_id <> current.address_id

index is 560
before:
```
after:
SELECT first_name FROM Students JOIN Addresses AS P ON Students.permanent_address_id = P.address_id JOIN Addresses AS C ON Students.current_address_id = C.address_id WHERE P.address_id != C.address_id

index is 561
before:
```
after:
SELECT address_id, line_1, line_2, line_3  FROM Addresses  WHERE address_id IN (     SELECT current_address_id      FROM Students      GROUP BY current_address_id      ORDER BY count(*) DESC      LIMIT 1 )

index is 562
before:
SELECT
after:
SELECT SELECT A.address_id, A.line_1, A.line_2 FROM Addresses A JOIN Students S ON S.current_address_id = A.address_id GROUP BY A.address_id, A.line_1, A.line_2 ORDER BY COUNT(S.student_id) DESC LIMIT 1;

index is 563
before:
SELECT AVG(transcript_date) FROM Transcripts
after:
SELECT AVG(transcript_date) AS average_transcript_date FROM Transcripts

index is 564
before:
SELECT AVG(transcript_date) FROM Transcripts
after:
SELECT AVG(transcript_date) FROM Transcripts

index is 565
before:
SELECT transcript_date, other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
after:
SELECT transcript_date, other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

index is 566
before:
SELECT transcript_date, other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
after:
SELECT transcript_date, other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

index is 567
before:
SELECT COUNT(*) FROM Transcripts
after:
SELECT COUNT(*) FROM Transcripts

index is 568
before:
SELECT COUNT(*) FROM Transcripts
after:
SELECT COUNT(DISTINCT transcript_id) FROM Transcripts

index is 569
before:
SELECT MAX(transcript_date) FROM Transcripts
after:
SELECT MAX(transcript_date) AS last_transcript_release_date FROM Transcripts

index is 570
before:
SELECT MAX(transcript_date) FROM Transcripts
after:
SELECT MAX(transcript_date) AS last_transcript_date FROM Transcripts

index is 571
before:
SELECT T1.student_course_id, count(T1.transcript_id) as enrollment_count FROM Transcript_Contents AS T1 GROUP BY T1.student_course_id ORDER BY enrollment_count DESC LIMIT 1
after:
SELECT T1.student_course_id, COUNT(T1.transcript_id) AS enrollment_count  FROM Transcript_Contents AS T1  GROUP BY T1.student_course_id  ORDER BY enrollment_count DESC  LIMIT 1

index is 572
before:
SELECT student_course_id, COUNT(transcript_id) FROM Transcript_Contents GROUP BY student_course_id ORDER BY COUNT(transcript_id) DESC LIMIT 1.
after:
SELECT student_course_id, COUNT(transcript_id) AS course_count FROM Transcript_Contents GROUP BY student_course_id ORDER BY course_count DESC LIMIT 1;

index is 573
before:
SELECT T2.transcript_date, T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id, T2.transcript_date HAVING COUNT(*) = (SELECT MIN(result_count) FROM (SELECT T3.transcript_id, COUNT(*) AS result_count FROM Transcript_Contents AS T3 GROUP BY T3.transcript_id) AS subquery)
after:
SELECT T2.transcript_date, T1.transcript_id  FROM Transcript_Contents AS T1  JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T2.transcript_date, T1.transcript_id  HAVING COUNT(*) = (     SELECT MIN(result_count)      FROM (         SELECT T3.transcript_id, COUNT(*) AS result_count          FROM Transcript_Contents AS T3          GROUP BY T3.transcript_id     ) AS subquery )

index is 574
before:
SELECT T1.transcript_date ,  T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T2.transcript_id ORDER BY count(*) ASC LIMIT 1
after:
SELECT T1.transcript_date, T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_date, T1.transcript_id ORDER BY COUNT(*) ASC LIMIT 1

index is 575
before:
SELECT semester_name FROM Semesters WHERE semester_id IN (SELECT semester_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Master')) AND semester_id IN (SELECT semester_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Bachelor'))
after:
SELECT semester_name FROM Semesters WHERE semester_id IN (   SELECT semester_id   FROM Student_Enrolment   WHERE degree_program_id IN (     SELECT degree_program_id     FROM Degree_Programs     WHERE degree_summary_name = 'Master'   ) ) AND semester_id IN (   SELECT semester_id   FROM Student_Enrolment   WHERE degree_program_id IN (     SELECT degree_program_id     FROM Degree_Programs     WHERE degree_summary_name = 'Bachelor'   ) )

index is 576
before:
SELECT semester_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Masters') INTERSECT SELECT semester_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Bachelors')
after:
SELECT semester_id FROM Student_Enrolment WHERE degree_program_id IN (     SELECT degree_program_id     FROM Degree_Programs     WHERE degree_summary_name = 'Masters' ) INTERSECT SELECT semester_id FROM Student_Enrolment WHERE degree_program_id IN (     SELECT degree_program_id     FROM Degree_Programs     WHERE degree_summary_name = 'Bachelors' )

index is 577
before:
SELECT COUNT(DISTINCT current_address_id) FROM Students
after:
SELECT COUNT(DISTINCT Students.current_address_id) FROM Students

index is 578
before:
SELECT DISTINCT T1.* FROM Addresses AS T1 JOIN Students AS T2 ON T2.current_address_id = T1.address_id OR T2.permanent_address_id = T1.address_id
after:
SELECT T1.*  FROM Addresses AS T1  JOIN Students AS T2 ON T2.current_address_id = T1.address_id OR T2.permanent_address_id = T1.address_id

index is 579
before:
SELECT * FROM Students ORDER BY last_name DESC, first_name DESC
after:
SELECT Students.student_id, Students.current_address_id, Students.permanent_address_id, Students.first_name, Students.middle_name, Students.last_name, Students.cell_mobile_number, Students.email_address, Students.ssn, Students.date_first_registered, Students.date_left, Students.other_student_details FROM Students ORDER BY Students.last_name DESC, Students.first_name DESC

index is 580
before:
SELECT * FROM Students ORDER BY last_name DESC
after:
SELECT * FROM Students ORDER BY last_name DESC

index is 581
before:
SELECT * FROM section WHERE section_id = 'h'
after:
SELECT Sections.* FROM Sections WHERE Sections.section_id = 'h'

index is 582
before:
SELECT section_description FROM Sections WHERE section_name = 'h'
after:
SELECT section_description FROM Sections WHERE section_name = 'h'

index is 583
before:
SELECT first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = 'Haiti' OR Students.cell_mobile_number = '09700166582'
after:
SELECT first_name  FROM Students  JOIN Addresses ON Students.permanent_address_id = Addresses.address_id  WHERE Addresses.country = 'Haiti' OR Students.cell_mobile_number = '09700166582'

index is 584
before:
OR cell_mobile_number = '09700166582'
after:
SELECT first_name  FROM Students  WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti')  OR cell_mobile_number = '09700166582'

index is 585
before:
SELECT Title FROM Cartoon ORDER BY Title ASC
after:
SELECT Title FROM Cartoon ORDER BY Title ASC

index is 586
before:
SELECT Title FROM Cartoon ORDER BY Title ASC
after:
SELECT Title FROM Cartoon ORDER BY Title ASC

index is 587
before:
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
after:
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'

index is 588
before:
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'
after:
SELECT Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Directed_by = 'Ben Jones'

index is 589
before:
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'
after:
SELECT COUNT(DISTINCT id) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'

index is 590
before:
SELECT COUNT(id) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'
after:
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'

index is 591
before:
This query selects the titles and directors from the "Cartoon" table and joins it with the "TV_Channel" table using the common column "Channel." It then orders the results by the "Original_air_date" column.
after:
SELECT Cartoon.Title, Cartoon.Directed_by FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id ORDER BY Cartoon.Original_air_date;

index is 592
before:
ORDER BY Original_air_date ASC
after:
SELECT Cartoon.Title, Cartoon.Directed_by FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id ORDER BY Cartoon.Original_air_date ASC

index is 593
before:
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
after:
SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')

index is 594
before:
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
after:
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'

index is 595
before:
LIMIT 1
after:
SELECT Country, COUNT(*) AS NumChannels FROM TV_Channel GROUP BY Country ORDER BY NumChannels DESC LIMIT 1

index is 596
before:
SELECT Country, COUNT(id) AS channel_count FROM TV_Channel GROUP BY Country ORDER BY channel_count DESC LIMIT 1
after:
SELECT Country, COUNT(id) AS channel_count  FROM TV_Channel  GROUP BY Country  ORDER BY channel_count DESC  LIMIT 1

index is 597
before:
SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel
after:
SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel

index is 598
before:
SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel
after:
SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel;

index is 599
before:
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
after:
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'

index is 600
before:
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'
after:
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'

index is 601
before:
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
after:
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'

index is 602
before:
SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'
after:
SELECT Package_Option FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_Channel.series_name = 'Sky Radio'

index is 603
before:
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English'
after:
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English'

index is 604
before:
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English'
after:
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English'

index is 605
before:
SELECT Language, COUNT(id) AS Channel_Count FROM TV_Channel GROUP BY Language ORDER BY Channel_Count ASC LIMIT 1
after:
SELECT TV_Channel.Language, COUNT(TV_Channel.id) AS Channel_Count FROM TV_Channel GROUP BY TV_Channel.Language ORDER BY Channel_Count ASC LIMIT 1

index is 606
before:
SELECT Language, COUNT(*) AS channel_count FROM TV_Channel GROUP BY Language ORDER BY channel_count ASC LIMIT 1
after:
SELECT Language, COUNT(*) AS channel_count  FROM TV_Channel  GROUP BY Language  ORDER BY channel_count ASC  LIMIT 1

index is 607
before:
SELECT Language, COUNT(*) AS num_channels FROM TV_Channel GROUP BY Language
after:
SELECT Language, COUNT(DISTINCT TV_Channel.id) AS num_channels FROM TV_Channel GROUP BY Language

index is 608
before:
SELECT Language, COUNT(DISTINCT id) FROM TV_Channel GROUP BY Language
after:
SELECT Language, COUNT(DISTINCT id) FROM TV_Channel GROUP BY Language

index is 609
before:
SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T2.Channel  =  T1.id WHERE T2.Title  =  'The Rise of the Blue Beetle!'
after:
SELECT T1.series_name  FROM TV_Channel AS T1  JOIN Cartoon AS T2 ON T2.Channel = T1.id  WHERE T2.Title = 'The Rise of the Blue Beetle!';

index is 610
before:
SELECT
after:
SELECT TV_Channel.series_name FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Title = "The Rise of the Blue Beetle";

index is 611
before:
SELECT Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio'
after:
SELECT Cartoon.Title  FROM Cartoon  JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id  WHERE TV_Channel.series_name = 'Sky Radio'

index is 612
before:
SELECT
after:
SELECT SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio";

index is 613
before:
SELECT Episode FROM TV_series ORDER BY Rating DESC
after:
SELECT TV_series.Episode  FROM TV_series  ORDER BY TV_series.Rating DESC

index is 614
before:
SELECT * FROM TV_series ORDER BY Rating DESC
after:
SELECT TV_series.*, Cartoon.Title FROM TV_series JOIN Cartoon ON TV_series.Channel = Cartoon.Channel ORDER BY TV_series.Rating DESC

index is 615
before:
LIMIT 3
after:
SELECT TV_series.Episode, TV_series.Rating FROM TV_series ORDER BY TV_series.Rating DESC LIMIT 3

index is 616
before:
```
after:
SELECT TV_series.Episode, TV_series.Rating FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id ORDER BY TV_series.Rating DESC LIMIT 3

index is 617
before:
SELECT MIN(Share), MAX(Share) FROM TV_series
after:
SELECT MIN(Share), MAX(Share) FROM TV_series

index is 618
before:
SELECT MAX(Share), MIN(Share) FROM TV_series
after:
SELECT MAX(Share) AS Maximum_Share, MIN(Share) AS Minimum_Share FROM TV_series;

index is 619
before:
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'
after:
SELECT TV_series.Air_Date FROM TV_series WHERE TV_series.Episode = 'A Love of a Lifetime'

index is 620
before:
SELECT TV_series.Air_Date FROM Cartoon JOIN TV_series ON Cartoon.Channel = TV_series.Channel JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Title = 'A Love of a Lifetime'
after:
SELECT TV_series.Air_Date  FROM Cartoon  JOIN TV_series ON Cartoon.id = TV_series.id  JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id  WHERE Cartoon.Title = 'A Love of a Lifetime'

index is 621
before:
SELECT
after:
SELECT SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime"

index is 622
before:
Since the schema links for the given question are not provided, I am unable to generate the corresponding SQL query. Please provide the schema links for the tables related to the episode and its weekly rank.
after:
SELECT The provided tables, columns, foreign keys, and primary keys are not sufficient to generate the SQL query for the given question. To fix the query, we need access to the tables related to the episode and its weekly rank. Please provide the schema links or additional information related to these tables so that I can assist you further.

index is 623
before:
SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.Episode = 'A Love of a Lifetime'
after:
SELECT TV_Channel.series_name  FROM TV_Channel  JOIN TV_series ON TV_Channel.id = TV_series.Channel  WHERE TV_series.Episode = 'A Love of a Lifetime'

index is 624
before:
SELECT series_name FROM TV_series WHERE Episode = 'A Love of a Lifetime'
after:
SELECT series_name  FROM TV_series  WHERE Episode = 'A Love of a Lifetime'

index is 625
before:
SELECT Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio'
after:
SELECT TV_series.Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio'

index is 626
before:
SELECT
after:
SELECT TV_series.Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio"

index is 627
before:
SELECT Directed_by, COUNT(id) FROM Cartoon WHERE Directed_by IN ('Director1', 'Director2', 'Director3') GROUP BY Directed_by
after:
SELECT Directed_by, COUNT(*)  FROM Cartoon  WHERE Directed_by IN ('Director1', 'Director2', 'Director3')  GROUP BY Directed_by

index is 628
before:
SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by
after:
SELECT Directed_by, COUNT(*)  FROM Cartoon  GROUP BY Directed_by

index is 629
before:
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
after:
SELECT Cartoon.Production_code, TV_Channel.series_name AS Channel FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id ORDER BY Cartoon.Original_air_date DESC LIMIT 1

index is 630
before:
WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)
after:
SELECT Production_code, Cartoon.Channel FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon)

index is 631
before:
SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = true
after:
SELECT Package_Option, series_name FROM TV_Channel WHERE High_definition_TV = 1

index is 632
before:
SELECT Package_Option, series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE Hight_definition_TV = true
after:
SELECT Package_Option, series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE Hight_definition_TV = 1

index is 633
before:
WHERE Cartoon.Written_by = 'Todd Casey'
after:
SELECT Country FROM TV_Channel JOIN Cartoon ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = 'Todd Casey';

index is 634
before:
SELECT DISTINCT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = 'Todd Casey'
after:
SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = 'Todd Casey'

index is 635
before:
SELECT DISTINCT Country FROM TV_Channel AS T1 LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = 'Todd Casey' AND T2.Channel IS NULL
after:
SELECT DISTINCT T1.Country FROM TV_Channel AS T1 LEFT JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by <> 'Todd Casey' OR T2.Written_by IS NULL

index is 636
before:
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')
after:
SELECT DISTINCT Country  FROM TV_Channel  WHERE id NOT IN (     SELECT Channel      FROM Cartoon      WHERE Written_by = 'Todd Casey' )

index is 637
before:
SELECT Cartoon.series_name, TV_Channel.Country FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Directed_by = 'Ben Jones' UNION SELECT Cartoon.series_name, TV_Channel.Country FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Directed_by = 'Michael Chang'
after:
SELECT TV_Channel.series_name, TV_Channel.Country  FROM Cartoon  JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id  WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang')

index is 638
before:
SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Directed_by = 'Ben Jones' AND Cartoon.Directed_by = 'Michael Chang'
after:
SELECT TV_Channel.series_name, TV_Channel.Country  FROM TV_Channel  JOIN Cartoon ON Cartoon.Channel = TV_Channel.id  WHERE Cartoon.Directed_by = 'Ben Jones' OR Cartoon.Directed_by = 'Michael Chang'

index is 639
before:
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'
after:
SELECT Pixel_aspect_ratio_PAR, Country  FROM TV_Channel  WHERE Language != 'English'

index is 640
before:
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'
after:
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'

index is 641
before:
SELECT id FROM TV_Channel GROUP BY Country HAVING count(*) > 2
after:
SELECT TV_Channel.id  FROM TV_Channel  GROUP BY TV_Channel.Country  HAVING COUNT(*) > 2

index is 642
before:
SELECT id FROM TV_Channel GROUP BY id HAVING count(*) > 2
after:
SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.id HAVING COUNT(*) > 2

index is 643
before:
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Cartoon.id FROM Cartoon WHERE Directed_by = 'Ben Jones')
after:
SELECT TV_Channel.id FROM TV_Channel LEFT JOIN Cartoon ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Directed_by <> 'Ben Jones' OR Cartoon.Directed_by IS NULL

index is 644
before:
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
after:
SELECT TV_Channel.id  FROM TV_Channel  WHERE TV_Channel.id NOT IN      (SELECT Cartoon.Channel      FROM Cartoon      WHERE Cartoon.Directed_by = 'Ben Jones')

index is 645
before:
SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT T1.id FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by = 'Ben Jones')
after:
SELECT Package_Option  FROM TV_Channel  WHERE id NOT IN (   SELECT T1.id    FROM TV_Channel AS T1    JOIN Cartoon AS T2 ON T1.id = T2.Channel    WHERE T2.Directed_by = 'Ben Jones' )

index is 646
before:
SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT id FROM Cartoon WHERE Directed_by = 'Ben Jones')
after:
SELECT Package_Option FROM TV_Channel WHERE id NOT IN      (SELECT Channel      FROM Cartoon      WHERE Directed_by = 'Ben Jones')

index is 647
before:
SELECT COUNT(Poker_Player_ID) FROM poker_player
after:
SELECT COUNT(DISTINCT Poker_Player_ID) FROM poker_player

index is 648
before:
SELECT COUNT(*) FROM poker_player
after:
SELECT COUNT(DISTINCT People_ID) FROM poker_player

index is 649
before:
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
after:
SELECT poker_player.Earnings  FROM poker_player  ORDER BY Earnings DESC

index is 650
before:
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
after:
SELECT poker_player.Earnings  FROM poker_player  ORDER BY poker_player.Earnings DESC

index is 651
before:
SELECT Final_Table_Made, Best_Finish FROM poker_player
after:
SELECT Final_Table_Made, Best_Finish FROM poker_player

index is 652
before:
SELECT Final_Table_Made, Best_Finish FROM poker_player
after:
SELECT Final_Table_Made, Best_Finish  FROM poker_player

index is 653
before:
SELECT AVG(Earnings) FROM poker_player
after:
SELECT AVG(Earnings) FROM poker_player

index is 654
before:
SELECT avg(Earnings) FROM poker_player
after:
SELECT avg(Earnings) FROM poker_player

index is 655
before:
SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
after:
SELECT Money_Rank  FROM poker_player  WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)

index is 656
before:
SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
after:
SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Earnings DESC LIMIT 1

index is 657
before:
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
after:
SELECT MAX(Final_Table_Made)  FROM poker_player  WHERE Earnings < 200000;

index is 658
before:
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
after:
SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000

index is 659
before:
SELECT Name FROM people JOIN poker_player ON poker_player.People_ID = people.People_ID
after:
SELECT Name FROM people

index is 660
before:
SELECT Name FROM people
after:
SELECT Name FROM people

index is 661
before:
SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Earnings > 300000
after:
SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Earnings > 300000

index is 662
before:
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000
after:
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000

index is 663
before:
SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY Final_Table_Made ASC
after:
SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY poker_player.Final_Table_Made ASC

index is 664
before:
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T2.People_ID = T1.People_ID ORDER BY T2.Final_Table_Made ASC
after:
SELECT T1.Name  FROM people AS T1  JOIN poker_player AS T2 ON T2.People_ID = T1.People_ID  ORDER BY T2.Final_Table_Made ASC

index is 665
before:
SELECT P.Birth_Date FROM people AS P JOIN poker_player AS PP ON P.People_ID = PP.People_ID ORDER BY PP.Earnings ASC LIMIT 1
after:
SELECT P.Birth_Date FROM people AS P JOIN poker_player AS PP ON P.People_ID = PP.People_ID ORDER BY PP.Earnings ASC LIMIT 1

index is 666
before:
SELECT Birth_Date FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY Earnings ASC LIMIT 1
after:
SELECT people.Birth_Date  FROM poker_player  JOIN people ON people.People_ID = poker_player.People_ID  ORDER BY poker_player.Earnings ASC  LIMIT 1

index is 667
before:
LIMIT 1
after:
SELECT Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY people.Height DESC LIMIT 1

index is 668
before:
ORDER BY (SELECT Height FROM people WHERE poker_player.People_ID = people.People_ID) DESC LIMIT 1
after:
SELECT poker_player.Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY people.Height DESC LIMIT 1

index is 669
before:
SELECT avg(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200
after:
SELECT AVG(poker_player.Earnings) AS Average_Earnings FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200

index is 670
before:
SELECT avg(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200
after:
SELECT avg(poker_player.Earnings) FROM poker_player  JOIN people ON poker_player.People_ID = people.People_ID  WHERE people.Height > 200

index is 671
before:
SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY Earnings DESC
after:
SELECT people.Name  FROM people  JOIN poker_player ON people.People_ID = poker_player.People_ID  ORDER BY poker_player.Earnings DESC

index is 672
before:
SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY poker_player.Earnings DESC
after:
SELECT people.Name  FROM people  JOIN poker_player ON people.People_ID = poker_player.People_ID  ORDER BY poker_player.Earnings DESC

index is 673
before:
SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality
after:
SELECT Nationality, COUNT(*)  FROM people  GROUP BY Nationality

index is 674
before:
SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality
after:
SELECT Nationality, COUNT(*)  FROM people  GROUP BY Nationality

index is 675
before:
LIMIT 1
after:
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1

index is 676
before:
SELECT Nationality FROM people GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1
after:
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1

index is 677
before:
SELECT DISTINCT Nationality FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player)
after:
SELECT Nationality FROM people WHERE Nationality IN (   SELECT Nationality   FROM people   GROUP BY Nationality   HAVING COUNT(*) >= 2 )

index is 678
before:
SELECT Nationality FROM people GROUP BY Nationality HAVING count(*)  >= 2
after:
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(DISTINCT People_ID) >= 2

index is 679
before:
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
after:
SELECT Name, Birth_Date FROM people ORDER BY Name ASC

index is 680
before:
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
after:
SELECT Name, Birth_Date FROM people ORDER BY Name ASC

index is 681
before:
SELECT Name FROM people WHERE Nationality != 'Russia'
after:
SELECT Name FROM people WHERE Nationality <> 'Russia'

index is 682
before:
SELECT Name FROM people WHERE Nationality <> 'Russia'
after:
SELECT Name FROM people WHERE Nationality <> 'Russia'

index is 683
before:
SELECT Name FROM people LEFT JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Poker_Player_ID IS NULL
after:
SELECT Name FROM people LEFT JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Poker_Player_ID IS NULL

index is 684
before:
SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
after:
SELECT Name  FROM people  WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

index is 685
before:
SELECT COUNT(DISTINCT Nationality) FROM people
after:
SELECT COUNT(DISTINCT Nationality) FROM people

index is 686
before:
SELECT COUNT(DISTINCT Nationality) FROM people
after:
SELECT COUNT(DISTINCT Nationality) FROM people

index is 687
before:
SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE
after:
SELECT COUNT(DISTINCT state) AS state_count FROM AREA_CODE_STATE

index is 688
before:
SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
after:
SELECT contestant_number, contestant_name  FROM CONTESTANTS  ORDER BY contestant_name DESC

index is 689
before:
SELECT vote_id, phone_number, state FROM VOTES
after:
SELECT vote_id, phone_number, state FROM VOTES

index is 690
before:
SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE
after:
SELECT MAX(area_code) AS max_area_code, MIN(area_code) AS min_area_code FROM AREA_CODE_STATE

index is 691
before:
SELECT MAX(created) FROM VOTES JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state WHERE AREA_CODE_STATE.state = 'CA'
after:
SELECT MAX(created)  FROM VOTES  JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state  WHERE AREA_CODE_STATE.state = 'CA'

index is 692
before:
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name <> 'Jessie Alloway'
after:
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name <> 'Jessie Alloway'

index is 693
before:
SELECT DISTINCT state, created FROM VOTES
after:
SELECT DISTINCT state, created FROM VOTES

index is 694
before:
SELECT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number, T1.contestant_name HAVING count(T2.*) >= 2
after:
SELECT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number, T1.contestant_name HAVING COUNT(T2.vote_id) >= 2

index is 695
before:
SELECT contestant_number, contestant_name FROM CONTESTANTS WHERE contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(*) = (SELECT MIN(vote_count) FROM (SELECT contestant_number, COUNT(*) as vote_count FROM VOTES GROUP BY contestant_number) as vote_counts))
after:
SELECT contestant_number, contestant_name  FROM CONTESTANTS  WHERE contestant_number IN (   SELECT contestant_number    FROM VOTES    GROUP BY contestant_number    HAVING COUNT(*) = (     SELECT MIN(vote_count)      FROM (       SELECT contestant_number, COUNT(*) as vote_count        FROM VOTES        GROUP BY contestant_number     ) as vote_counts   ) )

index is 696
before:
SELECT COUNT(*) FROM VOTES WHERE state = 'NY' OR state = 'CA'
after:
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA')

index is 697
before:
SELECT count(contestant_number) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)
after:
SELECT count(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)

index is 698
before:
SELECT T2.area_code FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state  =  T2.state GROUP BY T2.area_code ORDER BY count(*) DESC LIMIT 1
after:
SELECT T2.area_code FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state GROUP BY T2.area_code ORDER BY COUNT(*) DESC LIMIT 1

index is 699
before:
SELECT created, state, phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling'
after:
SELECT created, state, phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling';

index is 700
before:
SELECT DISTINCT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state JOIN CONTESTANTS AS T3 ON T2.contestant_number = T3.contestant_number WHERE T3.contestant_name = 'Tabatha Gehling' AND T1.area_code IN (SELECT DISTINCT area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state JOIN CONTESTANTS AS T3 ON T2.contestant_number = T3.contestant_number WHERE T3.contestant_name = 'Kelly Clauss')
after:
SELECT T1.area_code  FROM AREA_CODE_STATE AS T1  JOIN VOTES AS T2 ON T1.state = T2.state  JOIN CONTESTANTS AS T3 ON T2.contestant_number = T3.contestant_number  WHERE T3.contestant_name = 'Tabatha Gehling'    AND T1.area_code IN (     SELECT T1.area_code      FROM AREA_CODE_STATE AS T1      JOIN VOTES AS T2 ON T1.state = T2.state      JOIN CONTESTANTS AS T3 ON T2.contestant_number = T3.contestant_number      WHERE T3.contestant_name = 'Kelly Clauss'   )

index is 701
before:
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
after:
SELECT contestant_name  FROM CONTESTANTS  WHERE contestant_name LIKE '%Al%'

index is 702
before:
SELECT Name FROM country WHERE IndepYear > 1950
after:
SELECT country.Name FROM country WHERE country.IndepYear > 1950

index is 703
before:
SELECT Name FROM country WHERE IndepYear > 1950
after:
SELECT Name FROM country WHERE IndepYear > 1950

index is 704
before:
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic'
after:
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic'

index is 705
before:
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic'
after:
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic'

index is 706
before:
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'
after:
SELECT SUM(SurfaceArea)  FROM country  WHERE Region = 'Caribbean'

index is 707
before:
SELECT sum(SurfaceArea) FROM country WHERE Continent = 'Caribbean'
after:
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'

index is 708
before:
SELECT Continent FROM country JOIN city ON country.Code = city.CountryCode WHERE city.Name = 'Anguilla'
after:
SELECT Continent FROM country WHERE country.Code IN (SELECT CountryCode FROM city WHERE Name = 'Anguilla')

index is 709
before:
SELECT Continent FROM country WHERE Code = (SELECT CountryCode FROM city WHERE Name = 'Anguilla')
after:
SELECT Continent FROM country WHERE Code = (SELECT CountryCode FROM city WHERE Name = 'Anguilla')

index is 710
before:
SELECT Region FROM country JOIN city ON city.CountryCode = country.Code WHERE city.Name = 'Kabul'
after:
SELECT country.Region FROM country JOIN city ON city.CountryCode = country.Code WHERE city.Name = 'Kabul'

index is 711
before:
SELECT country.Region FROM country JOIN city ON city.CountryCode = country.Code WHERE city.Name = 'Kabul'
after:
SELECT country.Region  FROM country  JOIN city ON city.CountryCode = country.Code  WHERE city.Name = 'Kabul'

index is 712
before:
SELECT Language FROM countrylanguage JOIN city ON city.CountryCode = countrylanguage.CountryCode JOIN country ON country.Code = city.CountryCode WHERE city.Name = 'Aruba' ORDER BY Percentage DESC LIMIT 1
after:
SELECT countrylanguage.Language FROM countrylanguage JOIN city ON city.CountryCode = countrylanguage.CountryCode JOIN country ON country.Code = city.CountryCode WHERE city.Name = 'Aruba' GROUP BY countrylanguage.Language ORDER BY SUM(countrylanguage.Percentage) DESC LIMIT 1

index is 713
before:
SELECT T1.Language FROM countrylanguage AS T1 JOIN city AS T2 ON T2.CountryCode = T1.CountryCode JOIN country AS T3 ON T3.Code = T2.CountryCode WHERE T2.Name = 'Aruba' ORDER BY T1.Percentage DESC LIMIT 1
after:
SELECT T1.Language FROM countrylanguage AS T1 JOIN city AS T2 ON T2.CountryCode = T1.CountryCode JOIN country AS T3 ON T3.Code = T2.CountryCode WHERE T2.Name = 'Aruba' GROUP BY T1.Language ORDER BY T1.Percentage DESC LIMIT 1

index is 714
before:
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'
after:
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'

index is 715
before:
)
after:
SELECT country.Population, country.LifeExpectancy FROM country INNER JOIN city ON country.Code = city.CountryCode WHERE city.Name = 'Brazil'

index is 716
before:
SELECT Region, Population FROM country WHERE Name = 'Angola'
after:
SELECT Region, Population  FROM country  WHERE Name = 'Angola'

index is 717
before:
SELECT Region, Population FROM country WHERE Name = 'Angola'
after:
SELECT Region, Population FROM country WHERE Name = 'Angola'

index is 718
before:
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'
after:
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'

index is 719
before:
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND Region = 'Central Africa'
after:
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND Region = 'Central Africa'

index is 720
before:
LIMIT 1
after:
SELECT c.Name FROM country c WHERE c.Continent = 'Asia' ORDER BY c.LifeExpectancy ASC LIMIT 1

index is 721
before:
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1
after:
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1

index is 722
before:
SELECT sum(population), max(GNP) FROM country WHERE continent = 'Asia'
after:
SELECT sum(population) AS total_population, max(GNP) AS maximum_GNP  FROM country  WHERE continent = 'Asia'

index is 723
before:
SELECT SUM(Population), MAX(GNP) FROM country WHERE Continent = 'Asia'
after:
SELECT SUM(country.Population), MAX(country.GNP) FROM country WHERE country.Continent = 'Asia'

index is 724
before:
WHERE country.Continent = 'Africa' AND country.GovernmentForm = 'Republic'
after:
SELECT AVG(country.LifeExpectancy) FROM country JOIN city ON country.Code = city.CountryCode JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Africa' AND country.GovernmentForm = 'Republic'

index is 725
before:
SELECT avg(LifeExpectancy) FROM country WHERE Code IN (SELECT Code FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%')
after:
SELECT avg(LifeExpectancy)  FROM country  WHERE Continent = 'Africa'  AND GovernmentForm LIKE '%Republic%'

index is 726
before:
SELECT SUM(SurfaceArea) FROM country WHERE Continent = 'Asia' OR Continent = 'Europe'
after:
SELECT SUM(SurfaceArea) AS TotalSurfaceArea FROM country WHERE Continent IN ('Asia', 'Europe')

index is 727
before:
SELECT SUM(SurfaceArea) FROM country WHERE Continent = 'Asia' OR Continent = 'Europe'
after:
SELECT SUM(SurfaceArea) AS TotalSurfaceArea FROM country WHERE Continent IN ('Asia', 'Europe')

index is 728
before:
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
after:
SELECT SUM(Population)  FROM city  WHERE District = 'Gelderland'

index is 729
before:
SELECT SUM(Population) FROM city WHERE District = 'Gelderland'
after:
SELECT SUM(Population)  FROM city  WHERE District = 'Gelderland'

index is 730
before:
WHERE GovernmentForm = 'US territory'
after:
SELECT AVG(country.GNP), SUM(country.Population)  FROM country JOIN city ON country.Code = city.CountryCode JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm = 'US territory'

index is 731
before:
SELECT avg(GNP) , sum(Population) FROM country WHERE Continent = 'US'
after:
SELECT avg(GNP) AS Mean_GNP, sum(Population) AS Total_Population  FROM country  WHERE Region = 'US'

index is 732
before:
SELECT COUNT(DISTINCT Language) FROM countrylanguage
after:
SELECT COUNT(DISTINCT Language) FROM countrylanguage

index is 733
before:
Note: This query assumes that the "countrylanguage" table contains all the languages used around the world.
after:
SELECT COUNT(DISTINCT Language) FROM countrylanguage

index is 734
before:
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'
after:
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'

index is 735
before:
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'
after:
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'

index is 736
before:
SELECT COUNT(DISTINCT countrylanguage.Language) FROM country JOIN city ON country.Code = city.CountryCode JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE city.Name = 'Aruba'
after:
SELECT COUNT(DISTINCT countrylanguage.Language) AS TotalLanguages FROM country JOIN city ON country.Code = city.CountryCode JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE city.Name = 'Aruba'

index is 737
before:
SELECT COUNT(DISTINCT T3.Language) FROM country AS T1, city AS T2, countrylanguage AS T3 WHERE T2.CountryCode = T1.Code AND T3.CountryCode = T1.Code AND T2.Name = 'Aruba'
after:
SELECT COUNT(DISTINCT T3.Language)  FROM city AS T2 JOIN country AS T1 ON T2.CountryCode = T1.Code JOIN countrylanguage AS T3 ON T3.CountryCode = T1.Code WHERE T2.Name = 'Aruba'

index is 738
before:
SELECT COUNT(countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'Afghanistan' AND countrylanguage.IsOfficial = 'T'
after:
SELECT COUNT(DISTINCT countrylanguage.Language)  FROM country  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE country.Name = 'Afghanistan'  AND countrylanguage.IsOfficial = 'T'

index is 739
before:
SELECT COUNT(Language) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Name = 'Afghanistan' AND countrylanguage.IsOfficial = 'T'
after:
SELECT COUNT(DISTINCT Language) FROM countrylanguage  JOIN country ON countrylanguage.CountryCode = country.Code  WHERE country.Name = 'Afghanistan'  AND countrylanguage.IsOfficial = 'T'

index is 740
before:
SELECT T1.Name FROM country AS T1 WHERE (SELECT count(*) FROM countrylanguage AS T2 WHERE T1.Code = T2.CountryCode) = (SELECT max(count) FROM (SELECT count(*) AS count FROM countrylanguage GROUP BY CountryCode) AS T3)
after:
SELECT T1.Name FROM country AS T1 JOIN (     SELECT CountryCode, COUNT(*) AS lang_count     FROM countrylanguage     GROUP BY CountryCode ) AS T2 ON T1.Code = T2.CountryCode ORDER BY T2.lang_count DESC LIMIT 1

index is 741
before:
LIMIT 1
after:
SELECT C.Name FROM country AS C JOIN countrylanguage AS CL ON C.Code = CL.CountryCode GROUP BY C.Name ORDER BY COUNT(DISTINCT CL.Language) DESC LIMIT 1

index is 742
before:
SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(DISTINCT T2.Language) DESC LIMIT 1
after:
SELECT T1.Continent, COUNT(DISTINCT T2.Language) AS LanguageCount FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY LanguageCount DESC LIMIT 1

index is 743
before:
LIMIT 1
after:
SELECT country.Continent, COUNT(DISTINCT countrylanguage.Language) AS language_count FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Continent ORDER BY language_count DESC LIMIT 1

index is 744
before:
SELECT count(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'English' AND CountryCode IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch')
after:
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'English' AND CountryCode IN (     SELECT CountryCode     FROM countrylanguage     WHERE Language = 'Dutch' )

index is 745
before:
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'English' UNION SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Dutch'
after:
SELECT COUNT(DISTINCT CountryCode)  FROM countrylanguage  WHERE Language IN ('English', 'Dutch')

index is 746
before:
SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French')
after:
SELECT Name FROM country WHERE Code IN (   SELECT CountryCode FROM countrylanguage WHERE Language = 'English' ) AND Code IN (   SELECT CountryCode FROM countrylanguage WHERE Language = 'French' )

index is 747
before:
SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French')
after:
SELECT Name FROM country WHERE Code IN (   SELECT CountryCode FROM countrylanguage WHERE Language = 'English' ) AND Code IN (   SELECT CountryCode FROM countrylanguage WHERE Language = 'French' )

index is 748
before:
SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') INTERSECT SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French' AND IsOfficial = 'T')
after:
SELECT Name  FROM country  WHERE Code IN (     SELECT CountryCode      FROM countrylanguage      WHERE Language = 'English'      AND IsOfficial = 'T'     GROUP BY CountryCode     HAVING COUNT(DISTINCT Language) = 2     ) AND Code IN (     SELECT CountryCode      FROM countrylanguage      WHERE Language = 'French'      AND IsOfficial = 'T'     GROUP BY CountryCode     HAVING COUNT(DISTINCT Language) = 2     )

index is 749
before:
SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French' AND IsOfficial = 'T')
after:
SELECT country.Name FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'T')    OR (countrylanguage.Language = 'French' AND countrylanguage.IsOfficial = 'T') GROUP BY country.Name

index is 750
before:
SELECT COUNT(DISTINCT T1.Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Chinese'
after:
SELECT COUNT(DISTINCT T1.Continent)  FROM country AS T1  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Language = 'Chinese'

index is 751
before:
SELECT COUNT(DISTINCT Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese'
after:
SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese'

index is 752
before:
SELECT DISTINCT country.Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch'
after:
SELECT country.Region FROM country  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE countrylanguage.Language IN ('English', 'Dutch')

index is 753
before:
SELECT DISTINCT Region FROM country AS C JOIN countrylanguage AS CL ON C.Code = CL.CountryCode WHERE CL.Language = 'Dutch' OR CL.Language = 'English'
after:
SELECT DISTINCT C.Region  FROM country AS C  JOIN countrylanguage AS CL ON C.Code = CL.CountryCode  WHERE CL.Language IN ('Dutch', 'English')

index is 754
before:
SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') OR Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch' AND IsOfficial = 'T')
after:
SELECT Name FROM country WHERE Code IN (   SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T' ) OR Code IN (   SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch' AND IsOfficial = 'T' )

index is 755
before:
SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') AND countrylanguage.IsOfficial = 'T'
after:
SELECT country.Name  FROM country  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch')  AND countrylanguage.IsOfficial = 'T'

index is 756
before:
LIMIT 1
after:
SELECT countrylanguage.Language  FROM countrylanguage  JOIN country ON country.Code = countrylanguage.CountryCode  WHERE country.Continent = 'Asia'  GROUP BY countrylanguage.Language  ORDER BY SUM(countrylanguage.Percentage) DESC  LIMIT 1

index is 757
before:
SELECT cl.Language FROM countrylanguage AS cl JOIN country AS c ON c.Code = cl.CountryCode WHERE c.Continent = 'Asia' GROUP BY cl.Language ORDER BY COUNT(*) DESC LIMIT 1
after:
SELECT cl.Language  FROM countrylanguage AS cl  JOIN country AS c ON c.Code = cl.CountryCode  WHERE c.Continent = 'Asia'  GROUP BY cl.Language  ORDER BY COUNT(*) DESC  LIMIT 1

index is 758
before:
```
after:
SELECT T1.Language FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.GovernmentForm = 'Republic' GROUP BY T1.Language HAVING COUNT(*) = 1

index is 759
before:
SELECT Language FROM countrylanguage AS CL JOIN country AS C ON CL.CountryCode = C.Code WHERE C.GovernmentForm = 'Republic' GROUP BY Language HAVING COUNT(C.CountryCode) = 1
after:
SELECT Language  FROM countrylanguage AS CL  JOIN country AS C ON CL.CountryCode = C.Code  WHERE C.GovernmentForm = 'Republic'  GROUP BY Language  HAVING COUNT(C.Code) = 1

index is 760
before:
SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode JOIN country ON city.CountryCode = country.Code WHERE countrylanguage.Language = "English" ORDER BY city.Population DESC LIMIT 1
after:
SELECT city.Name  FROM city  JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode  JOIN country ON city.CountryCode = country.Code  WHERE countrylanguage.Language = "English"  GROUP BY city.Name  ORDER BY city.Population DESC  LIMIT 1

index is 761
before:
SELECT city.Name, city.Population FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode JOIN country ON city.CountryCode = country.Code WHERE countrylanguage.Language = "English" ORDER BY city.Population DESC LIMIT 1
after:
SELECT city.Name, MAX(city.Population) AS Population FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode JOIN country ON city.CountryCode = country.Code WHERE countrylanguage.Language = "English" GROUP BY city.Name ORDER BY Population DESC LIMIT 1

index is 762
before:
SELECT Name, Population, LifeExpectancy FROM country WHERE SurfaceArea = (SELECT max(SurfaceArea) FROM country WHERE Continent = 'Asia')
after:
SELECT Name, Population, LifeExpectancy FROM country WHERE SurfaceArea = (     SELECT MAX(SurfaceArea)     FROM country     WHERE Continent = 'Asia' ) ORDER BY Population DESC LIMIT 1

index is 763
before:
LIMIT 1
after:
SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.Continent = 'Asia' ORDER BY country.SurfaceArea DESC LIMIT 1

index is 764
before:
SELECT avg(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language  =  'English' AND IsOfficial  =  'T')
after:
SELECT avg(LifeExpectancy)  FROM country  WHERE Code NOT IN (     SELECT CountryCode      FROM countrylanguage      WHERE Language <> 'English'      AND IsOfficial = 'T' )

index is 765
before:
SELECT AVG(LifeExpectancy) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language <> 'English' AND countrylanguage.IsOfficial = 'Not Official'
after:
SELECT AVG(LifeExpectancy)  FROM country  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE countrylanguage.Language <> 'English'  AND countrylanguage.IsOfficial <> 'T'

index is 766
before:
SELECT SUM(Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
after:
SELECT SUM(Population) AS TotalPopulation FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')

index is 767
before:
SELECT sum(Population) FROM country WHERE Code NOT IN (SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language = 'English')
after:
SELECT sum(Population)  FROM country  WHERE Code NOT IN (SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language = 'English')

index is 768
before:
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T'
after:
SELECT countrylanguage.Language  FROM country  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE country.HeadOfState = 'Beatrix'  AND countrylanguage.IsOfficial = 'T'

index is 769
before:
SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Beatrix' AND T2.IsOfficial = 'T'
after:
SELECT T2.Language  FROM country AS T1  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T1.HeadOfState = 'Beatrix'  AND T2.IsOfficial = 'T'

index is 770
before:
SELECT COUNT(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T'
after:
SELECT COUNT(DISTINCT countrylanguage.Language)  FROM country  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T'

index is 771
before:
SELECT count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930
after:
SELECT count(DISTINCT countrylanguage.Language) AS TotalDistinctLanguages FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930

index is 772
before:
SELECT Name FROM country WHERE SurfaceArea > ALL (SELECT SurfaceArea FROM country WHERE Continent = 'Europe')
after:
SELECT Name  FROM country  WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')

index is 773
before:
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')
after:
SELECT Name FROM country WHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe')

index is 774
before:
SELECT Name FROM country WHERE Continent = 'Africa' AND Population  <  ANY (SELECT Population FROM country WHERE Continent = 'Asia')
after:
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')

index is 775
before:
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT min(Population) FROM country WHERE Continent = 'Asia')
after:
SELECT Name FROM country WHERE Continent = 'Africa' AND Population < (   SELECT MIN(Population) FROM country WHERE Continent = 'Asia' )

index is 776
before:
SELECT Name FROM country WHERE Population > (SELECT max(Population) FROM country WHERE Continent = 'Africa') AND Continent = 'Asia'
after:
SELECT Name FROM country WHERE Population > (SELECT max(Population) FROM country WHERE Continent = 'Africa') AND Continent = 'Asia'

index is 777
before:
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT max(Population) FROM country WHERE Continent = 'Africa')
after:
SELECT country.Name FROM country WHERE country.Continent = 'Asia' AND country.Population > (     SELECT MAX(country.Population)     FROM country     WHERE country.Continent = 'Africa' )

index is 778
before:
SELECT Code FROM country WHERE Code NOT IN (SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language = 'English')
after:
SELECT Code FROM country WHERE Code NOT IN (SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language = 'English')

index is 779
before:
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
after:
SELECT Code  FROM country  WHERE Code NOT IN (   SELECT CountryCode    FROM countrylanguage    WHERE Language = 'English' )

index is 780
before:
SELECT DISTINCT T1.Code FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language <> 'English'
after:
SELECT DISTINCT T1.Code FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language <> 'English'

index is 781
before:
SELECT Code FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language != 'English')
after:
SELECT Code FROM country WHERE Code IN (   SELECT CountryCode   FROM countrylanguage   WHERE Language <> 'English' )

index is 782
before:
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND GovernmentForm NOT LIKE '%Republic%'
after:
SELECT Code  FROM country  WHERE Code NOT IN (     SELECT CountryCode      FROM countrylanguage      WHERE Language = 'English' )  AND GovernmentForm NOT LIKE '%Republic%'

index is 783
before:
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English') AND Code NOT IN (SELECT Code FROM country WHERE GovernmentForm = 'Republic')
after:
SELECT Code FROM country  WHERE Code NOT IN (     SELECT CountryCode FROM countrylanguage WHERE Language = 'English' )  AND GovernmentForm <> 'Republic'

index is 784
before:
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON countrylanguage.CountryCode = country.Code WHERE country.Continent = 'Europe' AND countrylanguage.Language != 'English' AND countrylanguage.IsOfficial != 'T'
after:
SELECT city.Name  FROM city  JOIN country ON city.CountryCode = country.Code  JOIN countrylanguage ON countrylanguage.CountryCode = country.Code  WHERE country.Continent = 'Europe'  AND countrylanguage.Language <> 'English'  AND countrylanguage.IsOfficial <> 'T'

index is 785
before:
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Europe' AND countrylanguage.Language <> 'English' AND countrylanguage.IsOfficial <> 'T'
after:
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Europe' AND countrylanguage.Language <> 'English' AND countrylanguage.IsOfficial <> 'T'

index is 786
before:
SELECT DISTINCT city.Name FROM city, country, countrylanguage WHERE country.Continent = 'Asia' AND country.Code = city.CountryCode AND country.Code = countrylanguage.CountryCode AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = true
after:
SELECT DISTINCT city.Name FROM city JOIN country ON country.Code = city.CountryCode JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia'   AND countrylanguage.Language = 'Chinese'   AND countrylanguage.IsOfficial = 1

index is 787
before:
AND countrylanguage.IsOfficial = 'T'
after:
SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T'

index is 788
before:
SELECT Name, IndepYear, SurfaceArea FROM country ORDER BY Population ASC LIMIT 1
after:
SELECT Name, IndepYear, SurfaceArea FROM country ORDER BY Population ASC LIMIT 1

index is 789
before:
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)
after:
SELECT country.Name, country.IndepYear, country.SurfaceArea  FROM country  WHERE country.Population = (   SELECT MIN(country.Population)    FROM country )

index is 790
before:
WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
after:
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country);

index is 791
before:
SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)
after:
SELECT Name, Population, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)

index is 792
before:
SELECT
after:
SELECT SELECT country.Name, COUNT(countrylanguage.Language) AS LanguageCount FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name HAVING LanguageCount >= 3;

index is 793
before:
SELECT T1.Name , count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING count(DISTINCT T2.Language) > 2
after:
SELECT T1.Name, COUNT(DISTINCT T2.Language)  FROM country AS T1  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Name  HAVING COUNT(DISTINCT T2.Language) > 2

index is 794
before:
GROUP BY district
after:
SELECT district, COUNT(*)  FROM city  WHERE population > (SELECT AVG(population) FROM city)  GROUP BY district

index is 795
before:
SELECT country.Code, city.District, COUNT(city.Name) FROM city JOIN country ON city.CountryCode = country.Code GROUP BY country.Code, city.District HAVING city.Population > (SELECT AVG(city.Population) FROM city)
after:
SELECT country.Code, city.District, COUNT(city.Name) FROM city JOIN country ON city.CountryCode = country.Code GROUP BY city.District HAVING city.Population > (SELECT AVG(city.Population) FROM city)

index is 796
before:
SELECT GovernmentForm, SUM(Population) FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72.
after:
SELECT GovernmentForm, SUM(Population) AS TotalPopulation  FROM country  GROUP BY GovernmentForm  HAVING AVG(LifeExpectancy) > 72;

index is 797
before:
SELECT GovernmentForm, SUM(Population) FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72
after:
SELECT GovernmentForm, SUM(Population)  FROM country  GROUP BY GovernmentForm  HAVING AVG(LifeExpectancy) > 72;

index is 798
before:
SELECT continent, AVG(LifeExpectancy), SUM(Population) FROM country GROUP BY continent HAVING AVG(LifeExpectancy) < 72
after:
SELECT continent, AVG(LifeExpectancy) AS AverageLifeExpectancy, SUM(Population) AS TotalPopulation FROM country GROUP BY continent HAVING AVG(LifeExpectancy) < 72

index is 799
before:
SELECT country.continent , sum(country.population) , avg(country.lifeexpectancy) FROM country GROUP BY country.continent HAVING avg(country.lifeexpectancy) < 72
after:
SELECT country.continent, SUM(country.population), AVG(country.lifeexpectancy) FROM country GROUP BY country.continent HAVING AVG(country.lifeexpectancy) < 72

index is 800
before:
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
after:
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5

index is 801
before:
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
after:
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5

index is 802
before:
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
after:
SELECT country.Name FROM country ORDER BY country.Population DESC LIMIT 3

index is 803
before:
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
after:
SELECT Name  FROM country  ORDER BY Population DESC  LIMIT 3

index is 804
before:
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
after:
SELECT Name FROM country ORDER BY Population ASC LIMIT 3

index is 805
before:
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
after:
SELECT Name FROM country ORDER BY Population ASC LIMIT 3

index is 806
before:
SELECT COUNT(*) FROM country WHERE Continent = 'Asia'
after:
SELECT COUNT(DISTINCT Code) FROM country WHERE Continent = 'Asia'

index is 807
before:
SELECT COUNT(*) FROM country WHERE Continent = 'Asia'
after:
SELECT COUNT(*) FROM country WHERE Continent = 'Asia'

index is 808
before:
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000
after:
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000

index is 809
before:
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000
after:
SELECT country.Name FROM country WHERE country.Continent = 'Europe' AND country.Population = 80000

index is 810
before:
SELECT sum(Population) , avg(SurfaceArea) FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000.
after:
SELECT sum(Population) AS TotalPopulation, avg(SurfaceArea) AS AverageArea FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000;

index is 811
before:
SELECT sum(Population) , avg(SurfaceArea) FROM country JOIN city ON city.CountryCode = country.Code WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000
after:
SELECT sum(country.Population) AS total_population, avg(country.SurfaceArea) AS average_surface_area FROM country JOIN city ON city.CountryCode = country.Code WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000;

index is 812
before:
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
after:
SELECT city.Name FROM city WHERE city.Population BETWEEN 160000 AND 900000

index is 813
before:
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
after:
SELECT city.Name FROM city WHERE city.Population BETWEEN 160000 AND 900000

index is 814
before:
SELECT Language FROM countrylanguage GROUP BY Language HAVING COUNT(*) = (SELECT MAX(language_count) FROM (SELECT COUNT(*) AS language_count FROM countrylanguage GROUP BY Language) AS counts)
after:
SELECT Language  FROM countrylanguage  GROUP BY Language  HAVING COUNT(*) = (     SELECT MAX(language_count)      FROM (         SELECT COUNT(*) AS language_count          FROM countrylanguage          GROUP BY Language     ) AS counts ) ORDER BY language_count DESC LIMIT 1

index is 815
before:
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1
after:
SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(DISTINCT CountryCode) DESC LIMIT 1

index is 816
before:
)
after:
SELECT T2.Name, T1.Language FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Percentage = (     SELECT MAX(cl.Percentage)     FROM countrylanguage AS cl     WHERE cl.CountryCode = T2.Code ) GROUP BY T2.Name

index is 817
before:
SELECT T1.Code, T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Code HAVING T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T1.Code)
after:
SELECT T1.Code, T2.Language  FROM country AS T1  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  GROUP BY T1.Code  HAVING T2.Percentage = (SELECT MAX(Percentage)                          FROM countrylanguage                          WHERE CountryCode = T1.Code)

index is 818
before:
SELECT COUNT(country.Code) FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')
after:
SELECT COUNT(DISTINCT country.Code) FROM countrylanguage  JOIN country ON country.Code = countrylanguage.CountryCode  WHERE countrylanguage.Language = 'Spanish'  AND countrylanguage.Percentage = (SELECT MAX(Percentage)                                    FROM countrylanguage                                    WHERE Language = 'Spanish')

index is 819
before:
SELECT count(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Spanish' AND T2.IsOfficial = 'T'
after:
SELECT COUNT(DISTINCT T1.Code) FROM country AS T1  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Language = 'Spanish' AND T2.IsOfficial = 'T'

index is 820
before:
SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' ORDER BY countrylanguage.Percentage DESC LIMIT 1
after:
SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' GROUP BY country.Code ORDER BY countrylanguage.Percentage DESC LIMIT 1

index is 821
before:
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND Percentage > 50
after:
SELECT country.Code FROM countrylanguage  JOIN country ON countrylanguage.CountryCode = country.Code  WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.Percentage > 50

index is 822
before:
SELECT COUNT(Conductor_ID) FROM conductor
after:
SELECT COUNT(Conductor_ID) FROM conductor

index is 823
before:
SELECT COUNT(*) FROM conductor
after:
SELECT COUNT(DISTINCT Conductor_ID) FROM conductor

index is 824
before:
SELECT Name FROM conductor ORDER BY Age ASC
after:
SELECT Name FROM conductor ORDER BY Age ASC

index is 825
before:
SELECT Name FROM conductor ORDER BY Age
after:
SELECT Name FROM conductor ORDER BY Age ASC

index is 826
before:
SELECT Name FROM conductor WHERE Nationality != 'USA'
after:
SELECT Name FROM conductor WHERE Nationality != 'USA'

index is 827
before:
SELECT Name FROM conductor WHERE Nationality <> 'USA'
after:
SELECT Name FROM conductor WHERE Nationality <> 'USA'

index is 828
before:
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
after:
SELECT orchestra.Record_Company  FROM orchestra  ORDER BY orchestra.Year_of_Founded DESC

index is 829
before:
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
after:
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC

index is 830
before:
SELECT AVG(Attendance) FROM show
after:
SELECT AVG(Attendance) FROM show

index is 831
before:
SELECT AVG(Attendance) FROM show
after:
SELECT AVG(Attendance) AS Average_Attendance FROM show

index is 832
before:
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type <> 'Live final'
after:
SELECT MAX(Share) AS Maximum_Share, MIN(Share) AS Minimum_Share FROM performance WHERE Type <> 'Live final'

index is 833
before:
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type <> 'Live final'
after:
SELECT MAX(Share) AS Max_Share, MIN(Share) AS Min_Share  FROM performance  WHERE Type <> 'Live final'

index is 834
before:
SELECT COUNT(DISTINCT Nationality) FROM conductor
after:
SELECT COUNT(DISTINCT Nationality) AS Total_Nationalities FROM conductor

index is 835
before:
SELECT COUNT(DISTINCT Nationality) FROM conductor
after:
SELECT COUNT(DISTINCT Nationality) AS Num_Nationalities FROM conductor

index is 836
before:
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
after:
SELECT conductor.Name  FROM conductor  ORDER BY conductor.Year_of_Work DESC

index is 837
before:
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
after:
SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work DESC

index is 838
before:
SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
after:
SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1

index is 839
before:
SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
after:
SELECT Name, COUNT(Year_of_Work) AS WorkYears FROM conductor GROUP BY Name ORDER BY WorkYears DESC LIMIT 1

index is 840
before:
This query will retrieve the names of conductors and the orchestras they have conducted by performing an inner join between the "conductor" and "orchestra" tables based on the matching conductor ID.
after:
SELECT Name, Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID

index is 841
before:
SELECT T1.Name, T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID
after:
SELECT T1.Name, T2.Orchestra  FROM conductor AS T1  JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID

index is 842
before:
SELECT
after:
SELECT SELECT conductor.Name FROM conductor INNER JOIN orchestra ON orchestra.Conductor_ID = conductor.Conductor_ID GROUP BY conductor.Name HAVING COUNT(DISTINCT orchestra.Orchestra_ID) > 1;

index is 843
before:
SELECT Name FROM conductor GROUP BY Conductor_ID HAVING count(DISTINCT Orchestra_ID) > 1
after:
SELECT Name FROM conductor GROUP BY Name HAVING COUNT(DISTINCT Orchestra_ID) > 1

index is 844
before:
LIMIT 1
after:
SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1

index is 845
before:
SELECT Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Conductor_ID ORDER BY COUNT(orchestra.Orchestra_ID) DESC LIMIT 1
after:
SELECT Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Conductor_ID ORDER BY COUNT(orchestra.Orchestra_ID) DESC LIMIT 1

index is 846
before:
SELECT Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded > 2008
after:
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded > 2008;

index is 847
before:
SELECT Name FROM conductor INNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded > 2008
after:
SELECT Name FROM conductor INNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded > 2008

index is 848
before:
SELECT Record_Company, COUNT(DISTINCT Orchestra_ID) AS num_orchestras FROM orchestra GROUP BY Record_Company
after:
SELECT Record_Company, COUNT(DISTINCT Orchestra_ID) AS num_orchestras FROM orchestra GROUP BY Record_Company

index is 849
before:
GROUP BY Record_Company
after:
SELECT Record_Company, COUNT(DISTINCT Orchestra_ID) AS num_orchestras FROM orchestra GROUP BY Record_Company

index is 850
before:
SELECT Major_Record_Format, COUNT(*) AS count FROM orchestra GROUP BY Major_Record_Format ORDER BY count ASC
after:
SELECT Major_Record_Format, COUNT(*) AS count  FROM orchestra  GROUP BY Major_Record_Format  ORDER BY count ASC

index is 851
before:
ORDER BY Frequency DESC
after:
SELECT Major_Record_Format, COUNT(*) as Frequency  FROM orchestra  WHERE Major_Record_Format IS NOT NULL GROUP BY Major_Record_Format  ORDER BY Frequency DESC

index is 852
before:
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
after:
SELECT Record_Company, COUNT(*) AS Num_Orchestras FROM orchestra GROUP BY Record_Company ORDER BY Num_Orchestras DESC LIMIT 1

index is 853
before:
)
after:
SELECT Record_Company, COUNT(DISTINCT Orchestra_ID) AS Orchestra_Count FROM orchestra GROUP BY Record_Company HAVING COUNT(DISTINCT Orchestra_ID) = (     SELECT MAX(Orchestra_Count)     FROM (         SELECT Record_Company, COUNT(DISTINCT Orchestra_ID) AS Orchestra_Count         FROM orchestra         GROUP BY Record_Company     ) AS counts )

index is 854
before:
SELECT Orchestra FROM orchestra LEFT JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Performance_ID IS NULL
after:
SELECT Orchestra FROM orchestra LEFT JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Performance_ID IS NULL

index is 855
before:
SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
after:
SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)

index is 856
before:
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
after:
SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003

index is 857
before:
SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded > 2003
after:
SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded > 2003

index is 858
before:
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD'
after:
SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD'

index is 859
before:
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD')
after:
SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD')

index is 860
before:
SELECT DISTINCT Year_of_Founded FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY Year_of_Founded HAVING COUNT(DISTINCT performance.Performance_ID) > 1
after:
SELECT DISTINCT Year_of_Founded FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY Year_of_Founded HAVING COUNT(DISTINCT performance.Performance_ID) > 1

index is 861
before:
SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING count(*) > 1)
after:
SELECT Year_of_Founded FROM orchestra  WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance                         GROUP BY Orchestra_ID                         HAVING COUNT(*) > 1)

index is 862
before:
SELECT COUNT(*) FROM Highschooler
after:
SELECT COUNT(ID) FROM Highschooler

index is 863
before:
SELECT COUNT(*) FROM Highschooler
after:
SELECT COUNT(*) FROM Highschooler

index is 864
before:
SELECT name, grade FROM Highschooler
after:
SELECT name, grade  FROM Highschooler

index is 865
before:
SELECT name, grade FROM Highschooler
after:
SELECT name, grade FROM Highschooler

index is 866
before:
SELECT grade FROM Highschooler
after:
SELECT grade FROM Highschooler

index is 867
before:
SELECT grade FROM Highschooler
after:
SELECT grade FROM Highschooler

index is 868
before:
SELECT grade FROM Highschooler WHERE name = 'Kyle'
after:
SELECT grade FROM Highschooler WHERE name = 'Kyle'

index is 869
before:
SELECT grade FROM Highschooler WHERE name = 'Kyle'
after:
SELECT grade FROM Highschooler WHERE name = 'Kyle'

index is 870
before:
SELECT name FROM Highschooler WHERE grade = 10
after:
SELECT Highschooler.name FROM Highschooler WHERE Highschooler.grade = 10

index is 871
before:
SELECT name FROM Highschooler WHERE grade = 10
after:
SELECT name FROM Highschooler WHERE grade = 10

index is 872
before:
SELECT ID FROM Highschooler WHERE name = 'Kyle'
after:
SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = 'Kyle'

index is 873
before:
SELECT ID FROM Highschooler WHERE name = 'Kyle'
after:
SELECT ID FROM Highschooler WHERE name = 'Kyle'

index is 874
before:
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10)
after:
SELECT COUNT(DISTINCT ID) FROM Highschooler WHERE grade IN (9, 10)

index is 875
before:
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10)
after:
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10)

index is 876
before:
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade
after:
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade

index is 877
before:
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade
after:
SELECT grade, COUNT(DISTINCT ID) FROM Highschooler GROUP BY grade

index is 878
before:
SELECT grade, COUNT(*) AS count FROM Highschooler GROUP BY grade ORDER BY count DESC LIMIT 1
after:
SELECT grade, COUNT(*) AS count  FROM Highschooler  GROUP BY grade  ORDER BY count DESC  LIMIT 1

index is 879
before:
SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
after:
SELECT grade, COUNT(*) as count FROM Highschooler GROUP BY grade ORDER BY count DESC LIMIT 1

index is 880
before:
SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4
after:
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4

index is 881
before:
SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4
after:
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4

index is 882
before:
SELECT T1.ID , count(DISTINCT T2.friend_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID
after:
SELECT T1.ID, COUNT(DISTINCT T2.friend_id)  FROM Highschooler AS T1  JOIN Friend AS T2 ON T1.ID = T2.student_id  GROUP BY T1.ID

index is 883
before:
SELECT Highschooler.ID, COUNT(Friend.friend_id) FROM Highschooler LEFT JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID
after:
SELECT Highschooler.ID, COUNT(Friend.friend_id) AS friend_count FROM Highschooler LEFT JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID

index is 884
before:
SELECT T1.name ,  count(DISTINCT T2.friend_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id GROUP BY T1.ID
after:
SELECT T1.name, COUNT(DISTINCT T2.friend_id)  FROM Highschooler AS T1  JOIN Friend AS T2 ON T1.ID = T2.student_id  GROUP BY T1.name

index is 885
before:
SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
after:
SELECT T1.name, COUNT(T2.friend_id)  FROM Highschooler AS T1  LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id  GROUP BY T1.name

index is 886
before:
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID = (SELECT student_id FROM Friend GROUP BY student_id ORDER BY count(friend_id) DESC LIMIT 1)
after:
SELECT T1.name  FROM Highschooler AS T1  JOIN Friend AS T2 ON T1.ID = T2.student_id  GROUP BY T1.ID  ORDER BY COUNT(T2.friend_id) DESC  LIMIT 1

index is 887
before:
SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id GROUP BY T1.ID ORDER BY count(DISTINCT T2.friend_id) DESC LIMIT 1
after:
SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY COUNT(DISTINCT T2.friend_id) DESC LIMIT 1

index is 888
before:
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING count(friend_id) >= 3)
after:
SELECT T1.name  FROM Highschooler AS T1  WHERE T1.ID IN (SELECT friend_id                  FROM Friend                  GROUP BY friend_id                  HAVING COUNT(student_id) >= 3)

index is 889
before:
SELECT Highschooler.name FROM Highschooler GROUP BY Highschooler.name HAVING count(Friend.student_id) >= 3
after:
SELECT Highschooler.name  FROM Highschooler  JOIN Friend ON Highschooler.ID = Friend.student_id  GROUP BY Highschooler.ID, Highschooler.name  HAVING COUNT(Friend.friend_id) >= 3

index is 890
before:
SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id WHERE T1.name = 'Kyle'
after:
SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id JOIN Highschooler AS T3 ON T2.student_id = T3.ID WHERE T3.name = 'Kyle'

index is 891
before:
SELECT DISTINCT H2.name FROM Highschooler AS H1 JOIN Friend AS F ON H1.ID = F.friend_id JOIN Highschooler AS H2 ON F.student_id = H2.ID WHERE H1.name = "Kyle"
after:
SELECT H2.name FROM Highschooler AS H1 JOIN Friend AS F ON H1.ID = F.friend_id JOIN Highschooler AS H2 ON F.student_id = H2.ID WHERE H1.name = "Kyle"

index is 892
before:
SELECT count(*) FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID WHERE Highschooler.name = 'Kyle'
after:
SELECT COUNT(*) FROM Friend  JOIN Highschooler ON Friend.friend_id = Highschooler.ID  WHERE Highschooler.name = 'Kyle'

index is 893
before:
SELECT count(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
after:
SELECT count(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')

index is 894
before:
SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)
after:
SELECT Highschooler.ID FROM Highschooler LEFT JOIN Friend ON Highschooler.ID = Friend.student_id WHERE Friend.student_id IS NULL GROUP BY Highschooler.ID

index is 895
before:
SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
after:
SELECT Highschooler.ID  FROM Highschooler  LEFT JOIN Friend ON Highschooler.ID = Friend.student_id  WHERE Friend.friend_id IS NULL

index is 896
before:
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT friend_id FROM Friend)
after:
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)

index is 897
before:
SELECT Highschooler.name FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)
after:
SELECT Highschooler.name  FROM Highschooler  WHERE Highschooler.ID NOT IN (     SELECT Friend.student_id      FROM Friend )

index is 898
before:
SELECT DISTINCT HS.ID FROM Highschooler AS HS JOIN Friend AS F ON HS.ID = F.student_id JOIN Likes AS L ON HS.ID = L.student_id WHERE HS.ID IN (SELECT friend_id FROM Friend) AND HS.ID IN (SELECT liked_id FROM Likes)
after:
SELECT DISTINCT HS.ID  FROM Highschooler AS HS  JOIN Friend AS F ON HS.ID = F.student_id  JOIN Likes AS L ON HS.ID = L.student_id  WHERE HS.ID IN (SELECT friend_id FROM Friend)  AND HS.ID IN (SELECT liked_id FROM Likes)

index is 899
before:
SELECT ID FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) AND ID IN (SELECT student_id FROM Likes)
after:
SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend) AND Highschooler.ID IN (SELECT Likes.student_id FROM Likes)

index is 900
before:
SELECT DISTINCT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) AND ID IN (SELECT student_id FROM Likes)
after:
SELECT name FROM Highschooler WHERE ID IN (   SELECT student_id   FROM Friend ) AND ID IN (   SELECT liked_id   FROM Likes )

index is 901
before:
SELECT DISTINCT H1.name FROM Highschooler AS H1 JOIN Friend AS F1 ON H1.ID = F1.student_id WHERE H1.ID IN (SELECT L1.student_id FROM Likes AS L1) AND H1.ID IN (SELECT L2.liked_id FROM Likes AS L2)
after:
SELECT DISTINCT H1.name  FROM Highschooler AS H1  JOIN Friend AS F1 ON H1.ID = F1.student_id  JOIN Likes AS L1 ON H1.ID = L1.student_id  JOIN Likes AS L2 ON H1.ID = L2.liked_id

index is 902
before:
SELECT Highschooler.ID, COUNT(Likes.*) FROM Highschooler LEFT JOIN Likes ON Highschooler.ID = Likes.student_id GROUP BY Highschooler.ID
after:
SELECT Highschooler.ID, COUNT(Likes.*) AS like_count  FROM Highschooler  LEFT JOIN Likes ON Highschooler.ID = Likes.student_id  GROUP BY Highschooler.ID

index is 903
before:
SELECT student_id, COUNT(*) FROM Likes GROUP BY student_id
after:
SELECT student_id, COUNT(*) AS num_likes FROM Likes GROUP BY student_id

index is 904
before:
SELECT Highschooler.name, COUNT(Likes.student_id) FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id GROUP BY Highschooler.name
after:
SELECT Highschooler.name, COUNT(Likes.student_id) AS num_likes FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id GROUP BY Highschooler.name

index is 905
before:
SELECT T1.name, count(T2.liked_id) FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name
after:
SELECT T1.name, COUNT(T2.liked_id)  FROM Highschooler AS T1  JOIN Likes AS T2 ON T1.ID = T2.student_id  GROUP BY T1.ID, T1.name

index is 906
before:
SELECT T1.name FROM Highschooler AS T1 ORDER BY (SELECT count(*) FROM Likes WHERE Likes.student_id = T1.ID) DESC LIMIT 1
after:
SELECT T1.name FROM Highschooler AS T1 ORDER BY (SELECT COUNT(*) FROM Likes WHERE Likes.student_id = T1.ID) DESC LIMIT 1

index is 907
before:
SELECT T1.name FROM Highschooler AS T1 WHERE T1.ID = (SELECT T2.student_id FROM Likes AS T2 GROUP BY T2.student_id ORDER BY count(*) DESC LIMIT 1)
after:
SELECT T1.name  FROM Highschooler AS T1  WHERE T1.ID = (   SELECT T2.student_id    FROM Likes AS T2    GROUP BY T2.student_id    ORDER BY count(*) DESC    LIMIT 1 )

index is 908
before:
SELECT T1.name FROM Highschooler AS T1 WHERE (SELECT count(*) FROM Likes WHERE Likes.student_id = T1.ID) >= 2
after:
SELECT T1.name FROM Highschooler AS T1 JOIN Likes ON Likes.student_id = T1.ID GROUP BY T1.ID HAVING COUNT(Likes.liked_id) >= 2

index is 909
before:
SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T2.student_id HAVING count(*) >= 2
after:
SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name HAVING count(*) >= 2

index is 910
before:
SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID HAVING Highschooler.grade > 5 AND count(Friend.friend_id) >= 2
after:
SELECT Highschooler.name  FROM Highschooler  JOIN Friend ON Highschooler.ID = Friend.student_id  GROUP BY Highschooler.ID  HAVING Highschooler.grade > 5 AND COUNT(DISTINCT Friend.friend_id) >= 2

index is 911
before:
SELECT name FROM Highschooler WHERE grade > 5 AND ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING count(*) >= 2)
after:
SELECT name FROM Highschooler WHERE grade > 5   AND ID IN (     SELECT student_id     FROM Friend     GROUP BY student_id     HAVING count(*) >= 2   )

index is 912
before:
SELECT COUNT(*) FROM Likes JOIN Highschooler ON Likes.student_id = Highschooler.ID WHERE Highschooler.name = 'Kyle'
after:
SELECT COUNT(*)  FROM Likes  JOIN Highschooler ON Likes.student_id = Highschooler.ID  WHERE Highschooler.name = 'Kyle'

index is 913
before:
```
after:
SELECT COUNT(*)  FROM Likes JOIN Highschooler ON Likes.student_id = Highschooler.ID WHERE Highschooler.name = 'Kyle'

index is 914
before:
SELECT AVG(T1.grade) FROM Highschooler AS T1 WHERE T1.ID IN (SELECT DISTINCT T2.student_id FROM Friend AS T2)
after:
SELECT AVG(T1.grade)  FROM Highschooler AS T1  WHERE T1.ID IN (     SELECT DISTINCT T2.student_id      FROM Friend AS T2 )

index is 915
before:
SELECT AVG(grade) FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id
after:
SELECT AVG(grade) FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id

index is 916
before:
SELECT
after:
SELECT MIN(grade) AS minimum_grade FROM Highschooler WHERE ID NOT IN (     SELECT student_id     FROM Friend )

index is 917
before:
SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend) AND ID NOT IN (SELECT friend_id FROM Friend)
after:
SELECT min(grade)  FROM Highschooler  WHERE ID NOT IN (SELECT student_id FROM Friend)

index is 918
before:
SELECT DISTINCT state FROM Owners INTERSECT SELECT DISTINCT state FROM Professionals
after:
SELECT state FROM Owners WHERE state IN (     SELECT state     FROM Professionals )

index is 919
before:
SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
after:
SELECT state  FROM Owners  WHERE state IN (     SELECT state      FROM Professionals )

index is 920
before:
SELECT AVG(Dogs.age) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id
after:
SELECT AVG(Dogs.age) AS average_age FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id

index is 921
before:
SELECT avg(age) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id
after:
SELECT avg(age) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id

index is 922
before:
SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) > 2)
after:
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (     SELECT professional_id     FROM Treatments     GROUP BY professional_id     HAVING COUNT(*) > 2 )

index is 923
before:
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING count(*) > 2)
after:
SELECT professional_id, last_name, cell_number  FROM Professionals  WHERE state = 'Indiana' OR professional_id IN      (SELECT professional_id      FROM Treatments      GROUP BY professional_id      HAVING count(*) > 2)

index is 924
before:
SELECT Dogs.name FROM Dogs LEFT JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.name HAVING COALESCE(SUM(Treatments.cost_of_treatment), 0) <= 1000
after:
SELECT Dogs.name FROM Dogs LEFT JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.name HAVING COALESCE(SUM(Treatments.cost_of_treatment), 0) <= 1000

index is 925
before:
HAVING COALESCE(SUM(T.cost_of_treatment), 0) <= 1000
after:
SELECT D.name FROM Dogs AS D LEFT JOIN Treatments AS T ON D.dog_id = T.dog_id LEFT JOIN Owners AS O ON D.owner_id = O.owner_id GROUP BY D.dog_id, D.name HAVING COALESCE(SUM(T.cost_of_treatment), 0) <= 1000

index is 926
before:
SELECT Owners.first_name , Professionals.first_name FROM Owners , Professionals WHERE (Owners.first_name NOT IN (SELECT DISTINCT name FROM Dogs) OR Professionals.first_name NOT IN (SELECT DISTINCT name FROM Dogs))
after:
SELECT Owners.first_name, Professionals.first_name FROM Owners LEFT JOIN Dogs ON Owners.first_name = Dogs.name LEFT JOIN Professionals ON Owners.first_name = Professionals.first_name WHERE Dogs.name IS NULL

index is 927
before:
SELECT first_name FROM Owners UNION SELECT first_name FROM Professionals WHERE first_name NOT IN (SELECT DISTINCT name FROM Dogs)
after:
SELECT first_name FROM (   SELECT first_name   FROM Owners   UNION   SELECT first_name   FROM Professionals ) AS all_names WHERE first_name NOT IN (   SELECT DISTINCT name   FROM Dogs )

index is 928
before:
SELECT professional_id, role_code, email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
after:
SELECT professional_id, role_code, email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)

index is 929
before:
SELECT professional_id ,  role_code ,  email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
after:
SELECT professional_id, role_code, email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)

index is 930
before:
LIMIT 1
after:
SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id GROUP BY Owners.owner_id ORDER BY COUNT(Dogs.dog_id) DESC LIMIT 1

index is 931
before:
)
after:
SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id ORDER BY COUNT(Dogs.dog_id) DESC LIMIT 1

index is 932
before:
SELECT professional_id, role_code, first_name FROM Professionals GROUP BY professional_id, role_code, first_name HAVING COUNT(professional_id) >= 2
after:
SELECT professional_id, role_code, first_name FROM Professionals GROUP BY professional_id, role_code, first_name HAVING COUNT(*) >= 2

index is 933
before:
SELECT professional_id , role_code , first_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING count(*) >= 2)
after:
SELECT professional_id, role_code, first_name FROM Professionals WHERE professional_id IN (     SELECT professional_id     FROM Treatments     GROUP BY professional_id     HAVING COUNT(*) >= 2 )

index is 934
before:
SELECT breed_name FROM Breeds WHERE breed_code IN (SELECT breed_code FROM Dogs GROUP BY breed_code HAVING count(*) = (SELECT max(count) FROM (SELECT breed_code, count(*) AS count FROM Dogs GROUP BY breed_code) AS dog_counts))
after:
SELECT breed_name FROM Breeds WHERE breed_code IN (     SELECT breed_code     FROM Dogs     GROUP BY breed_code     HAVING count(*) = (         SELECT max(dog_count)         FROM (             SELECT breed_code, count(*) AS dog_count             FROM Dogs             GROUP BY breed_code         ) AS dog_counts     ) )

index is 935
before:
SELECT breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY breed_name ORDER BY COUNT(*) DESC LIMIT 1
after:
SELECT breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY Breeds.breed_code ORDER BY COUNT(*) DESC LIMIT 1

index is 936
before:
```
after:
SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id ORDER BY COUNT(Treatments.treatment_id) DESC LIMIT 1;

index is 937
before:
SELECT
after:
SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Treatments ON Treatments.dog_id = Dogs.dog_id JOIN Charges ON Charges.charge_id = Treatments.charge_id GROUP BY Owners.owner_id, Owners.last_name ORDER BY SUM(Charges.charge_amount) DESC LIMIT 1;

index is 938
before:
LIMIT 1
after:
SELECT Treatment_Types.treatment_type_description  FROM Treatment_Types  JOIN Treatments ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code  GROUP BY Treatment_Types.treatment_type_code  ORDER BY SUM(Treatments.cost_of_treatment) ASC  LIMIT 1

index is 939
before:
SELECT T1.treatment_type_description FROM Treatment_Types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(T2.cost_of_treatment) ASC LIMIT 1
after:
SELECT T1.treatment_type_description  FROM Treatment_Types AS T1  JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code  GROUP BY T1.treatment_type_description  ORDER BY SUM(T2.cost_of_treatment) ASC  LIMIT 1

index is 940
before:
LIMIT 1
after:
SELECT Owners.owner_id, Owners.zip_code  FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Charges ON Dogs.charge_id = Charges.charge_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Charges.charge_amount) DESC LIMIT 1

index is 941
before:
This query will retrieve the owner ID and zip code of the owner who spent the most money in total for their dogs.
after:
SELECT T1.owner_id, T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id JOIN Professionals AS T4 ON T3.professional_id = T4.professional_id GROUP BY T1.owner_id, T1.zip_code ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1;

index is 942
before:
SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2
after:
SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2

index is 943
before:
SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2.
after:
SELECT T1.professional_id, T1.cell_number  FROM Professionals AS T1  JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id  GROUP BY T1.professional_id  HAVING COUNT(DISTINCT T2.treatment_type_code) >= 2.

index is 944
before:
SELECT first_name ,  last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments WHERE cost_of_treatment  <  (SELECT avg(cost_of_treatment) FROM Treatments))
after:
SELECT first_name, last_name FROM Professionals WHERE professional_id IN (   SELECT professional_id   FROM Treatments   WHERE cost_of_treatment < (     SELECT AVG(cost_of_treatment)     FROM Treatments   ) )

index is 945
before:
SELECT first_name ,  last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments WHERE cost_of_treatment  <  (SELECT avg(cost_of_treatment) FROM Treatments))
after:
SELECT first_name, last_name FROM Professionals WHERE professional_id IN (     SELECT professional_id     FROM Treatments     WHERE cost_of_treatment < (         SELECT AVG(cost_of_treatment)         FROM Treatments     ) )

index is 946
before:
SELECT Treatments.date_of_treatment, Professionals.first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id
after:
SELECT Treatments.date_of_treatment, Professionals.first_name  FROM Treatments  JOIN Professionals ON Treatments.professional_id = Professionals.professional_id

index is 947
before:
SELECT date_of_treatment, first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id
after:
SELECT date_of_treatment, Professionals.first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id

index is 948
before:
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code
after:
SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code

index is 949
before:
SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code
after:
SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;

index is 950
before:
JOIN Sizes ON Dogs.size_code = Sizes.size_code
after:
SELECT first_name, last_name, size_description FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Sizes ON Dogs.size_code = Sizes.size_code

index is 951
before:
SELECT T1.first_name, T1.last_name, T3.size_description FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Sizes AS T3 ON T2.size_code = T3.size_code
after:
SELECT T1.first_name, T1.last_name, T4.size_description FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Sizes AS T4 ON T2.size_code = T4.size_code;

index is 952
before:
SELECT Owners.first_name , Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id
after:
SELECT Owners.first_name, Dogs.name  FROM Owners  JOIN Dogs ON Owners.owner_id = Dogs.owner_id;

index is 953
before:
SELECT T1.first_name, T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
after:
SELECT T1.first_name, T2.name  FROM Owners AS T1  JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id

index is 954
before:
```
after:
SELECT D.name, T.date_of_treatment FROM Dogs AS D JOIN Breeds AS B ON D.breed_code = B.breed_code JOIN Treatments AS T ON T.dog_id = D.dog_id WHERE B.breed_code = (     SELECT breed_code     FROM Breeds     GROUP BY breed_code     ORDER BY COUNT(*) ASC     LIMIT 1 )

index is 955
before:
WHERE Breeds.breed_name = 'rarest_breed'
after:
SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Breeds ON Dogs.breed_code = Breeds.breed_code WHERE Breeds.breed_name = 'rarest_breed';

index is 956
before:
SELECT Owners.first_name, Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Owners.state = 'Virginia'
after:
SELECT Owners.first_name, Dogs.name  FROM Dogs  JOIN Owners ON Dogs.owner_id = Owners.owner_id  WHERE Owners.state = 'Virginia'

index is 957
before:
SELECT T1.first_name, T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'
after:
SELECT T1.first_name, T2.name  FROM Owners AS T1  JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id  WHERE T1.state = 'Virginia'

index is 958
before:
SELECT DISTINCT date_arrived, date_departed FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id
after:
SELECT date_arrived, date_departed  FROM Dogs  JOIN Treatments ON Dogs.dog_id = Treatments.dog_id

index is 959
before:
JOIN Treatments ON Treatments.dog_id = Dogs.dog_id
after:
SELECT date_arrived, date_departed FROM Dogs JOIN Treatments ON Treatments.dog_id = Dogs.dog_id

index is 960
before:
SELECT last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY age ASC LIMIT 1
after:
SELECT last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY age LIMIT 1

index is 961
before:
SELECT last_name FROM Owners WHERE owner_id = (SELECT owner_id FROM Dogs WHERE date_of_birth = (SELECT MIN(date_of_birth) FROM Dogs))
after:
SELECT last_name FROM Owners WHERE owner_id = (   SELECT owner_id   FROM Dogs   WHERE date_of_birth = (     SELECT MIN(date_of_birth)     FROM Dogs   ) ) LIMIT 1;

index is 962
before:
SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'
after:
SELECT email_address  FROM Professionals  WHERE state = 'Hawaii' OR state = 'Wisconsin'

index is 963
before:
SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'
after:
SELECT email_address  FROM Professionals  WHERE state = 'Hawaii' OR state = 'Wisconsin'

index is 964
before:
SELECT date_arrived, date_departed FROM Dogs
after:
SELECT date_arrived, date_departed  FROM Dogs

index is 965
before:
SELECT date_arrived, date_departed FROM Dogs
after:
SELECT date_arrived, date_departed  FROM Dogs

index is 966
before:
SELECT COUNT(DISTINCT T1.dog_id) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id
after:
SELECT COUNT(DISTINCT T2.dog_id) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id

index is 967
before:
SELECT COUNT(DISTINCT Dogs.dog_id) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id
after:
SELECT COUNT(DISTINCT Treatments.dog_id) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id

index is 968
before:
SELECT COUNT(DISTINCT T1.professional_id) FROM Professionals AS T1 JOIN Treatments AS T2 ON T2.professional_id = T1.professional_id
after:
SELECT COUNT(DISTINCT T1.professional_id) FROM Professionals AS T1 JOIN Treatments AS T2 ON T2.professional_id = T1.professional_id

index is 969
before:
SELECT count(DISTINCT Professionals.professional_id) FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id
after:
SELECT count(DISTINCT Professionals.professional_id) AS num_professionals FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id;

index is 970
before:
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'
after:
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'

index is 971
before:
WHERE city LIKE '%West%'
after:
SELECT role_code, street, city, state  FROM Professionals  WHERE city LIKE '%West%'

index is 972
before:
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
after:
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'

index is 973
before:
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'
after:
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'

index is 974
before:
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs)
after:
SELECT COUNT(*)  FROM Dogs  WHERE age < (SELECT AVG(age) FROM Dogs)

index is 975
before:
SELECT COUNT(dog_id) FROM Dogs WHERE age  <  (SELECT avg(age) FROM Dogs)
after:
SELECT COUNT(dog_id) AS dog_count FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs)

index is 976
before:
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
after:
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1

index is 977
before:
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
after:
SELECT Treatments.cost_of_treatment  FROM Treatments  ORDER BY Treatments.date_of_treatment DESC  LIMIT 1

index is 978
before:
SELECT COUNT(*) FROM Dogs LEFT JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Treatments.dog_id IS NULL
after:
SELECT COUNT(Dogs.dog_id) FROM Dogs LEFT JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Treatments.dog_id IS NULL

index is 979
before:
SELECT COUNT(DISTINCT Dogs.dog_id) FROM Dogs LEFT JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Treatments.dog_id IS NULL
after:
SELECT COUNT(DISTINCT Dogs.dog_id) FROM Dogs LEFT JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Treatments.dog_id IS NULL

index is 980
before:
SELECT count(owner_id) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs)
after:
SELECT COUNT(owner_id) AS owner_count FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs)

index is 981
before:
SELECT count(*) FROM Owners WHERE owner_id NOT IN (SELECT DISTINCT owner_id FROM Dogs)
after:
SELECT count(*) FROM Owners WHERE owner_id NOT IN (SELECT DISTINCT owner_id FROM Dogs WHERE abandoned_yn = 'N' AND date_departed IS NULL)

index is 982
before:
SELECT count(T1.professional_id) FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.professional_id IS NULL
after:
SELECT count(T1.professional_id) FROM Professionals AS T1 LEFT JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.professional_id IS NULL GROUP BY T1.professional_id

index is 983
before:
SELECT count(professional_id) FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
after:
SELECT COUNT(professional_id) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)

index is 984
before:
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1
after:
SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 1

index is 985
before:
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1
after:
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1

index is 986
before:
SELECT AVG(age) FROM Dogs
after:
SELECT AVG(age) FROM Dogs

index is 987
before:
SELECT AVG(age) FROM Dogs
after:
SELECT AVG(age) FROM Dogs

index is 988
before:
SELECT MAX(age) FROM Dogs
after:
SELECT MAX(age) AS oldest_age FROM Dogs

index is 989
before:
SELECT MAX(age) FROM Dogs
after:
SELECT MAX(age) AS oldest_age FROM Dogs

index is 990
before:
SELECT charge_type, charge_amount FROM Charges
after:
SELECT charge_type, charge_amount FROM Charges

index is 991
before:
SELECT charge_type, charge_amount FROM Charges
after:
SELECT charge_type, charge_amount FROM Charges

index is 992
before:
SELECT MAX(charge_amount) FROM Charges
after:
SELECT charge_type, MAX(charge_amount) FROM Charges

index is 993
before:
SELECT charge_amount FROM Charges ORDER BY charge_amount DESC LIMIT 1
after:
SELECT charge_amount FROM Charges ORDER BY charge_amount DESC LIMIT 1

index is 994
before:
SELECT email_address, cell_number, home_phone FROM Professionals
after:
SELECT email_address, cell_number, home_phone FROM Professionals

index is 995
before:
SELECT email_address, cell_number, home_phone FROM Professionals
after:
SELECT email_address, cell_number, home_phone  FROM Professionals

index is 996
before:
SELECT Breeds.breed_name, Sizes.size_description FROM Breeds JOIN Dogs ON Dogs.breed_code = Breeds.breed_code JOIN Sizes ON Dogs.size_code = Sizes.size_code
after:
SELECT Breeds.breed_name, Sizes.size_description  FROM Breeds  JOIN Dogs ON Dogs.breed_code = Breeds.breed_code  JOIN Sizes ON Dogs.size_code = Sizes.size_code GROUP BY Breeds.breed_name, Sizes.size_description

index is 997
before:
SELECT
after:
SELECT SELECT DISTINCT Dogs.breed_code, Dogs.size_code FROM Dogs

index is 998
before:
SELECT Professionals.first_name, Treatments.treatment_type_description FROM Professionals JOIN Treatments ON Treatments.professional_id = Professionals.professional_id
after:
SELECT Professionals.first_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Treatments.professional_id = Professionals.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code

index is 999
before:
SELECT professionals.first_name, treatment_types.treatment_type_description FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code
after:
SELECT professionals.first_name, treatment_types.treatment_type_description  FROM professionals  JOIN treatments ON professionals.professional_id = treatments.professional_id  JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code

index is 1000
before:
SELECT COUNT(Singer_ID) FROM singer
after:
SELECT COUNT(*) FROM singer

index is 1001
before:
SELECT COUNT(Singer_ID) FROM singer
after:
SELECT COUNT(*) FROM singer

index is 1002
before:
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
after:
SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions ASC

index is 1003
before:
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
after:
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC

index is 1004
before:
SELECT Birth_Year, Citizenship FROM singer
after:
SELECT Birth_Year, Citizenship FROM singer

index is 1005
before:
SELECT Birth_Year, Citizenship FROM singer
after:
SELECT Birth_Year, Citizenship FROM singer

index is 1006
before:
SELECT Name FROM singer WHERE Citizenship != 'France'
after:
SELECT Name FROM singer WHERE Citizenship <> 'France'

index is 1007
before:
SELECT Name FROM singer WHERE Citizenship <> 'French'
after:
SELECT Name FROM singer WHERE Citizenship <> 'French'

index is 1008
before:
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949
after:
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949

index is 1009
before:
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949)
after:
SELECT Name  FROM singer  WHERE Birth_Year = 1948 OR Birth_Year = 1949

index is 1010
before:
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
after:
SELECT singer.Name  FROM singer  ORDER BY singer.Net_Worth_Millions DESC  LIMIT 1

index is 1011
before:
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
after:
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1

index is 1012
before:
SELECT Citizenship, COUNT(Singer_ID) FROM singer GROUP BY Citizenship
after:
SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship

index is 1013
before:
SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship
after:
SELECT Citizenship, COUNT(DISTINCT Singer_ID) FROM singer GROUP BY Citizenship

index is 1014
before:
SELECT Citizenship, COUNT(*) AS Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1
after:
SELECT Citizenship, COUNT(*) AS Count  FROM singer  GROUP BY Citizenship  ORDER BY Count DESC  LIMIT 1

index is 1015
before:
LIMIT 1
after:
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1

index is 1016
before:
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
after:
SELECT Citizenship, MAX(Net_Worth_Millions)  FROM singer  GROUP BY Citizenship

index is 1017
before:
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship
after:
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship

index is 1018
before:
JOIN singer ON song.Singer_ID = singer.Singer_ID
after:
SELECT song.Title, singer.Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID

index is 1019
before:
SELECT Title, Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID
after:
SELECT Title, Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID

index is 1020
before:
SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000
after:
SELECT DISTINCT T1.Name  FROM singer AS T1  JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  WHERE T2.Sales > 300000

index is 1021
before:
SELECT DISTINCT Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE Sales > 300000
after:
SELECT Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE Sales > 300000

index is 1022
before:
SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Singer_ID HAVING count(*) > 1
after:
SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*) > 1

index is 1023
before:
SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID HAVING count(*) > 1
after:
SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*) > 1

index is 1024
before:
SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
after:
SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name

index is 1025
before:
SELECT T1.Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
after:
SELECT T1.Name, SUM(T2.Sales)  FROM singer AS T1  JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID  GROUP BY T1.Name

index is 1026
before:
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
after:
SELECT Name  FROM singer  WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)

index is 1027
before:
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
after:
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT DISTINCT Singer_ID FROM song)

index is 1028
before:
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 AND Birth_Year > 1955
after:
SELECT DISTINCT Citizenship  FROM singer  WHERE Birth_Year < 1945 OR Birth_Year > 1955

index is 1029
before:
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955
after:
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955

index is 1030
before:
SELECT COUNT(*) FROM Other_Available_Features
after:
SELECT COUNT(*) AS total_available_features FROM Other_Available_Features

index is 1031
before:
WHERE feature_name = 'AirCon')
after:
SELECT Ref_Feature_Types.feature_type_name  FROM Ref_Feature_Types JOIN Other_Available_Features ON Ref_Feature_Types.feature_type_code = Other_Available_Features.feature_type_code WHERE Other_Available_Features.feature_name = 'AirCon'

index is 1032
before:
SELECT property_type_description FROM Ref_Property_Types WHERE property_type_code = 'code'
after:
SELECT property_type_description FROM Ref_Property_Types WHERE property_type_code = 'code'

index is 1033
before:
SELECT property_name FROM Properties JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code WHERE (Ref_Property_Types.property_type_description = 'house' OR Ref_Property_Types.property_type_description = 'apartment') AND room_count > 1
after:
SELECT property_name  FROM Properties  JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code  WHERE (Ref_Property_Types.property_type_description = 'house' OR Ref_Property_Types.property_type_description = 'apartment')  AND room_count > 1

