index is 0
before:
SELECT count(singer_id) FROM singer
after:
SELECT COUNT(Singer_ID) FROM singer

index is 1
before:
SELECT count(*) FROM singer
after:
SELECT count(Singer_ID) FROM singer

index is 2
before:
SELECT name , country , age FROM singer ORDER BY age DESC
after:
SELECT name, country, age FROM singer ORDER BY age ASC

index is 3
before:
SELECT name ,  country ,  age FROM singer ORDER BY age DESC
after:
SELECT singer.Name, singer.Country, singer.Age FROM singer ORDER BY singer.Age DESC

index is 4
before:
SELECT AVG(age) ,  MIN(age) ,  MAX(age) FROM singer WHERE country  =  'France'
after:
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'

index is 5
before:
SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
after:
SELECT avg(Age), min(Age), max(Age)  FROM singer  WHERE Country = 'France'

index is 6
before:
SELECT name ,  song_release_year FROM singer ORDER BY age ASC LIMIT 1
after:
SELECT singer.Name, singer.Song_release_year FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE singer.Age = (   SELECT MIN(Age)   FROM singer ) LIMIT 1;

index is 7
before:
SELECT name ,  song_release_year FROM singer WHERE age  =  (SELECT min(age) FROM singer)
after:
SELECT singer.Name, singer.Song_release_year FROM singer WHERE singer.Age = (SELECT MIN(singer.Age) FROM singer)

index is 8
before:
SELECT DISTINCT country FROM singer WHERE age > 20
after:
SELECT DISTINCT Country  FROM singer  WHERE Age > 20

index is 9
before:
SELECT DISTINCT country FROM singer WHERE age  >  20
after:
SELECT DISTINCT Country FROM singer WHERE Age > 20

index is 10
before:
SELECT country , COUNT(*) FROM singer GROUP BY country
after:
SELECT singer.Country, COUNT(*) AS Singer_Count  FROM singer  GROUP BY singer.Country

index is 11
before:
SELECT country , count(*) FROM singer GROUP BY country
after:
SELECT Country, COUNT(*) AS Singer_Count FROM singer GROUP BY Country

index is 12
before:
SELECT song_name FROM singer GROUP BY song_name HAVING age > (SELECT avg(age) FROM singer)
after:
SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT AVG(singer.Age) FROM singer)

index is 13
before:
SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
after:
SELECT s.song_name FROM singer s WHERE s.age > (SELECT AVG(age) FROM singer)

index is 14
before:
SELECT location ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
after:
SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000

index is 15
before:
SELECT location ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
after:
SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000

index is 16
before:
SELECT MAX(capacity) , AVG(capacity) FROM stadium
after:
SELECT MAX(Capacity), AVG(Capacity) FROM stadium

index is 17
before:
SELECT avg(capacity) , max(capacity) FROM stadium
after:
SELECT avg(Capacity), max(Capacity) FROM stadium

index is 18
before:
SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
after:
SELECT stadium.name, stadium.capacity FROM stadium ORDER BY stadium.average DESC LIMIT 1

index is 19
before:
SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
after:
SELECT name, capacity  FROM stadium  ORDER BY average DESC  LIMIT 1

index is 20
before:
SELECT COUNT(DISTINCT concert_ID) FROM concert WHERE year = 2014 OR year = 2015
after:
SELECT COUNT(DISTINCT concert_ID) FROM concert WHERE Year = 2014 OR Year = 2015

index is 21
before:
SELECT count(DISTINCT concert_ID) FROM concert WHERE Year = 2014 OR Year = 2015
after:
SELECT count(DISTINCT concert_ID) FROM concert WHERE Year = 2014 OR Year = 2015

index is 22
before:
SELECT stadium.name , COUNT(concert.concert_ID) FROM stadium JOIN concert ON stadium.stadium_ID = concert.stadium_ID GROUP BY stadium.name
after:
SELECT stadium.Name, COUNT(concert.concert_ID)  FROM stadium  JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID  GROUP BY stadium.Name

index is 23
before:
SELECT COUNT(concert_ID), stadium.Name FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY stadium.Name
after:
SELECT COUNT(concert_ID) AS Concert_Count, stadium.Name  FROM stadium  LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID  GROUP BY stadium.Stadium_ID, stadium.Name

index is 24
before:
SELECT name ,  capacity FROM stadium WHERE stadium_id IN (SELECT stadium_id FROM concert WHERE year >= 2014) ORDER BY capacity DESC LIMIT 1
after:
SELECT stadium.Name, stadium.Capacity FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year >= 2014 GROUP BY stadium.Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1

index is 25
before:
SELECT name ,  capacity FROM stadium WHERE stadium_id  =  (SELECT max(stadium_id) FROM concert WHERE year > 2013)
after:
SELECT stadium.name, stadium.capacity  FROM stadium  WHERE stadium.stadium_id = (     SELECT concert.stadium_id      FROM concert      WHERE concert.year > 2013     GROUP BY concert.stadium_id     ORDER BY COUNT(*) DESC     LIMIT 1 )

index is 26
before:
SELECT year FROM concert GROUP BY year ORDER BY count(*) DESC LIMIT 1
after:
SELECT year, COUNT(*) AS concert_count FROM concert GROUP BY year ORDER BY concert_count DESC LIMIT 1

index is 27
before:
SELECT year FROM concert GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1
after:
SELECT Year, COUNT(*) AS concert_count FROM concert GROUP BY year ORDER BY concert_count DESC LIMIT 1

index is 28
before:
SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
after:
SELECT name FROM stadium LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.stadium_id IS NULL

index is 29
before:
SELECT name FROM stadium WHERE NOT EXISTS (SELECT * FROM concert WHERE concert.Stadium_ID = stadium.Stadium_ID)
after:
SELECT name FROM stadium WHERE stadium.Stadium_ID NOT IN (SELECT concert.Stadium_ID FROM concert)

index is 30
before:
SELECT DISTINCT country FROM singer WHERE age > 40 AND age < 30
after:
SELECT DISTINCT country FROM singer WHERE age > 40 OR age < 30

index is 31
before:
SELECT name FROM stadium WHERE NOT EXISTS (SELECT stadium_id FROM concert WHERE year  =  2014 AND stadium.stadium_id  =  concert.stadium_id)
after:
SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)

index is 32
before:
SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)
after:
SELECT name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014)

index is 33
before:
SELECT concert_name ,  theme , COUNT(singer_id) FROM concert JOIN singer_in_concert ON concert.concert_id  =  singer_in_concert.concert_id GROUP BY concert_name ,  theme
after:
SELECT concert_name, theme, COUNT(singer_id)  FROM concert  JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID  GROUP BY concert_name, theme

index is 34
before:
SELECT concert_name , theme , COUNT(singer_id) FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert_name , theme
after:
SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_Name, concert.Theme

index is 35
before:
SELECT name , COUNT(Singer_ID) FROM singer_in_concert JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY name
after:
SELECT singer.Name, COUNT(singer_in_concert.Singer_ID)  FROM singer  JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID  GROUP BY singer.Name

index is 36
before:
SELECT name , COUNT(concert_ID) FROM singer_in_concert JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY name
after:
SELECT singer.Name, COUNT(singer_in_concert.concert_ID)  FROM singer_in_concert  JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID  GROUP BY singer.Name

index is 37
before:
SELECT DISTINCT singer.name FROM singer_in_concert JOIN concert ON singer_in_concert.concert_id = concert.concert_ID JOIN singer ON singer_in_concert.singer_id = singer.singer_ID WHERE concert.year = 2014
after:
SELECT singer.Name FROM singer_in_concert JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE concert.Year = 2014;

index is 38
before:
SELECT singer.name FROM singer_in_concert JOIN concert ON singer_in_concert.concert_id = concert.concert_ID JOIN singer ON singer_in_concert.singer_id = singer.singer_ID WHERE concert.year = 2014
after:
SELECT singer.Name FROM singer_in_concert JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE concert.Year = 2014

index is 39
before:
SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
after:
SELECT singer.Name, singer.Country  FROM singer  WHERE singer.Song_Name LIKE '%Hey%'

index is 40
before:
SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
after:
SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE '%Hey%'

index is 41
before:
SELECT DISTINCT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014 AND T1.stadium_id IN (SELECT stadium_id FROM concert WHERE year  =  2015)
after:
SELECT T2.Name, T2.Location FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Year = 2014 AND T1.Stadium_ID IN (SELECT Stadium_ID FROM concert WHERE Year = 2015)

index is 42
before:
SELECT DISTINCT T1.name ,  T1.location FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T2.year  =  2014 INTERSECT SELECT DISTINCT T1.name ,  T1.location FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T2.year  =  2015
after:
SELECT T1.Name, T1.Location  FROM stadium AS T1  JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T2.Year = 2014  INTERSECT  SELECT T1.Name, T1.Location  FROM stadium AS T1  JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T2.Year = 2015

index is 43
before:
SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)
after:
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)

index is 44
before:
SELECT count(DISTINCT concert_ID) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium WHERE Capacity = (SELECT max(Capacity) FROM stadium))
after:
SELECT count(DISTINCT concert_ID) FROM concert WHERE Stadium_ID = (   SELECT Stadium_ID   FROM stadium   WHERE Capacity = (     SELECT MAX(Capacity)     FROM stadium   ) )

index is 45
before:
SELECT count(*) FROM Pets WHERE weight > 10
after:
SELECT count(*) FROM Pets WHERE weight > 10

index is 46
before:
SELECT count(*) FROM pets WHERE weight  >  10
after:
SELECT count(*) FROM Pets WHERE weight > 10

index is 47
before:
SELECT weight FROM pets WHERE pettype = 'dog' AND pet_age  =  (SELECT min(pet_age) FROM pets WHERE pettype = 'dog')
after:
SELECT weight  FROM Pets  WHERE PetType = 'dog'  AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')

index is 48
before:
SELECT weight FROM pets WHERE pettype = 'dog' AND pet_age = (SELECT min(pet_age) FROM pets WHERE pettype = 'dog')
after:
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')

index is 49
before:
SELECT max(weight) ,  pettype FROM pets GROUP BY pettype
after:
SELECT MAX(weight), PetType FROM Pets GROUP BY PetType

index is 50
before:
SELECT MAX(weight) ,  pettype FROM pets GROUP BY pettype
after:
SELECT MAX(weight) AS max_weight, pettype FROM Pets GROUP BY pettype

index is 51
before:
SELECT count(DISTINCT has_pet.petid) FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.age > 20
after:
SELECT COUNT(DISTINCT has_pet.petid) AS pet_count FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.age > 20;

index is 52
before:
SELECT count(pets.*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20
after:
SELECT count(DISTINCT pets.petid) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20

index is 53
before:
SELECT count(petid) FROM student JOIN has_pet ON student.StuID = has_pet.StuID JOIN pets ON has_pet.PetID = pets.PetID WHERE pet_type = 'dog' AND sex = 'F'
after:
SELECT COUNT(DISTINCT has_pet.PetID) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' AND Student.Sex = 'F'

index is 54
before:
SELECT count(*) FROM pets JOIN has_pet ON pets.petid = has_pet.petid JOIN student ON student.stuid = has_pet.stuid WHERE pets.pettype = 'dog' AND student.sex = 'female'
after:
SELECT COUNT(DISTINCT pets.petid) FROM pets  JOIN has_pet ON pets.petid = has_pet.petid  JOIN student ON student.stuid = has_pet.stuid  WHERE pets.pettype = 'dog'  AND student.sex = 'female'

index is 55
before:
SELECT count(DISTINCT pettype) FROM pets
after:
SELECT COUNT(DISTINCT PetType) FROM Pets

index is 56
before:
SELECT COUNT(DISTINCT pettype) FROM pets
after:
SELECT COUNT(DISTINCT PetType) FROM Pets

index is 57
before:
SELECT DISTINCT fname FROM student WHERE stuid IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype IN ('cat', 'dog')))
after:
SELECT fname FROM Student WHERE StuID IN (   SELECT StuID   FROM Has_Pet   WHERE PetID IN (     SELECT PetID     FROM Pets     WHERE PetType IN ('cat', 'dog')   ) )

index is 58
before:
SELECT DISTINCT fname FROM student WHERE EXISTS (SELECT * FROM has_pet WHERE has_pet.stuid = student.stuid AND EXISTS (SELECT * FROM pets WHERE (pettype = 'cat' OR pettype = 'dog') AND has_pet.petid = pets.petid))
after:
SELECT DISTINCT fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog')

index is 59
before:
SELECT DISTINCT fname FROM student WHERE EXISTS (SELECT * FROM has_pet WHERE student.stuid = has_pet.stuid AND has_pet.petid IN (SELECT petid FROM pets WHERE pettype = 'cat')) AND EXISTS (SELECT * FROM has_pet WHERE student.stuid = has_pet.stuid AND has_pet.petid IN (SELECT petid FROM pets WHERE pettype = 'dog'))
after:
SELECT DISTINCT fname  FROM Student  WHERE StuID IN (     SELECT StuID      FROM Has_Pet      WHERE PetID IN (         SELECT PetID          FROM Pets          WHERE PetType = 'cat'     ) )  AND StuID IN (     SELECT StuID      FROM Has_Pet      WHERE PetID IN (         SELECT PetID          FROM Pets          WHERE PetType = 'dog'     ) );

index is 60
before:
SELECT DISTINCT fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
after:
SELECT DISTINCT fname  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Pets.PetType IN ('cat', 'dog') GROUP BY fname HAVING COUNT(DISTINCT Pets.PetType) = 2

index is 61
before:
SELECT major , age FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat'))
after:
SELECT major, age FROM Student WHERE StuID NOT IN (   SELECT StuID   FROM Has_Pet   WHERE PetID IN (     SELECT PetID     FROM Pets     WHERE PetType = 'cat'   ) )

index is 62
before:
SELECT major , age FROM student WHERE id NOT IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat'))
after:
SELECT major, age  FROM Student  WHERE StuID NOT IN (     SELECT StuID      FROM Has_Pet      WHERE PetID IN (         SELECT PetID          FROM Pets          WHERE PetType = 'cat'     ) )

index is 63
before:
SELECT stuid FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet WHERE petid = 'cat')
after:
SELECT student.stuid  FROM student  LEFT JOIN has_pet ON student.stuid = has_pet.stuid  LEFT JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype <> 'cat' OR pets.pettype IS NULL;

index is 64
before:
SELECT id FROM student WHERE id NOT IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat')
after:
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat')

index is 65
before:
SELECT fname , age FROM student WHERE stuid NOT IN (SELECT has_pet.stuid FROM has_pet INNER JOIN pets ON has_pet.petid  =  pets.petid WHERE pets.pettype  =  'cat') AND stuid IN (SELECT has_pet.stuid FROM has_pet INNER JOIN pets ON has_pet.petid  =  pets.petid WHERE pets.pettype  =  'dog')
after:
SELECT fname, age  FROM student  WHERE stuid IN (     SELECT has_pet.stuid      FROM has_pet      INNER JOIN pets ON has_pet.petid = pets.petid      WHERE pets.pettype = 'dog' )  AND stuid NOT IN (     SELECT has_pet.stuid      FROM has_pet      INNER JOIN pets ON has_pet.petid = pets.petid      WHERE pets.pettype = 'cat' )

index is 66
before:
SELECT DISTINCT fname FROM student WHERE EXISTS (SELECT * FROM pets WHERE pettype  =  'dog' AND has_pet.stuid  =  student.stuid) AND NOT EXISTS (SELECT * FROM pets WHERE pettype  =  'cat' AND has_pet.stuid  =  student.stuid)
after:
SELECT fname FROM Student WHERE EXISTS (   SELECT *   FROM Has_Pet   JOIN Pets ON Has_Pet.PetID = Pets.PetID   WHERE Has_Pet.StuID = Student.StuID     AND Pets.PetType = 'dog' ) AND NOT EXISTS (   SELECT *   FROM Has_Pet   JOIN Pets ON Has_Pet.PetID = Pets.PetID   WHERE Has_Pet.StuID = Student.StuID     AND Pets.PetType = 'cat' )

index is 67
before:
SELECT pettype ,  weight FROM pets WHERE pet_age  =  (SELECT min(pet_age) FROM pets)
after:
SELECT pets.PetType, pets.weight FROM pets WHERE pets.pet_age = (SELECT MIN(pets.pet_age) FROM pets)

index is 68
before:
SELECT pettype ,  weight FROM pets WHERE pet_age  =  (SELECT min(pet_age) FROM pets)
after:
SELECT Pets.PetType, Pets.weight FROM Pets WHERE Pets.pet_age = (SELECT MIN(pet_age) FROM Pets)

index is 69
before:
SELECT petid ,  weight FROM pets WHERE pet_age  >  1
after:
SELECT Pets.PetID, Pets.weight  FROM Pets  WHERE Pets.pet_age > 1

index is 70
before:
SELECT petid ,  weight FROM pets WHERE pet_age  >  1
after:
SELECT pets.petid, pets.weight FROM pets WHERE pets.pet_age > 1

index is 71
before:
SELECT pettype , AVG(pet_age) , MAX(pet_age) FROM pets GROUP BY pettype
after:
SELECT pets.pettype, AVG(pets.pet_age), MAX(pets.pet_age) FROM pets GROUP BY pets.pettype

index is 72
before:
SELECT avg(pet_age) ,  max(pet_age) ,  pet_type FROM pets GROUP BY pet_type
after:
SELECT avg(pet_age) AS average_age, max(pet_age) AS maximum_age, PetType FROM Pets GROUP BY PetType

index is 73
before:
SELECT pettype , AVG(weight) FROM pets GROUP BY pettype
after:
SELECT pets.PetType, AVG(pets.weight)  FROM pets GROUP BY pets.PetType

index is 74
before:
SELECT pettype ,  AVG (weight) FROM pets GROUP BY pettype
after:
SELECT pettype, AVG(weight)  FROM Pets  GROUP BY pettype

index is 75
before:
SELECT fname , age FROM student WHERE EXISTS (SELECT * FROM has_pet WHERE has_pet.stuid = student.stuid)
after:
SELECT fname, age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet)

index is 76
before:
SELECT DISTINCT fname , age FROM student WHERE EXISTS (SELECT * FROM has_pet WHERE student.stuid  =  has_pet.stuid)
after:
SELECT DISTINCT Fname, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet)

index is 77
before:
SELECT has_pet.petid FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid WHERE student.lname  =  'Smith'
after:
SELECT pets.petid FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid WHERE student.lname = 'Smith'

index is 78
before:
SELECT petid FROM has_pet JOIN student ON student.stuid  =  has_pet.stuid WHERE student.lname  =  'Smith'
after:
SELECT Pets.PetID FROM Has_Pet JOIN Student ON Student.StuID = Has_Pet.StuID JOIN Pets ON Pets.PetID = Has_Pet.PetID WHERE Student.LName = 'Smith'

index is 79
before:
SELECT count(pets.*) , student.stuid FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid JOIN pets ON pets.petid  =  has_pet.petid GROUP BY student.stuid
after:
SELECT COUNT(pets.PetID) AS pet_count, student.StuID FROM Student JOIN Has_Pet ON student.StuID = Has_Pet.StuID JOIN Pets ON Pets.PetID = Has_Pet.PetID GROUP BY student.StuID

index is 80
before:
SELECT stuid , count(petid) FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY student.stuid
after:
SELECT student.StuID, COUNT(has_pet.PetID)  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  GROUP BY Student.StuID

index is 81
before:
SELECT fname ,  sex FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid GROUP BY fname , sex HAVING count(petid)  >  1
after:
SELECT fname, sex  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  GROUP BY student.stuid, fname, sex  HAVING count(has_pet.petid) > 1

index is 82
before:
SELECT fname ,  sex FROM student JOIN has_pet ON student.stuid  =  has_pet.stuid GROUP BY student.fname, student.sex HAVING count(has_pet.*)  >  1
after:
SELECT student.fname, student.sex  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  GROUP BY student.fname, student.sex  HAVING COUNT(has_pet.PetID) > 1

index is 83
before:
SELECT lname FROM student JOIN has_pet ON student.StuID = has_pet.StuID JOIN pets ON has_pet.PetID = pets.PetID WHERE pets.PetType = 'cat' AND pets.pet_age = 3
after:
SELECT student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;

index is 84
before:
SELECT lname FROM student WHERE EXISTS (SELECT 1 FROM has_pet INNER JOIN pets ON has_pet.petid = pets.petid WHERE has_pet.stuid = student.stuid AND pets.pettype = 'cat' AND pets.pet_age = 3)
after:
SELECT student.lname  FROM student  WHERE EXISTS (   SELECT 1    FROM has_pet    INNER JOIN pets ON has_pet.petid = pets.petid    WHERE has_pet.stuid = student.stuid    AND pets.pettype = 'cat'    AND pets.pet_age = 3 )

index is 85
before:
SELECT AVG(age) FROM student WHERE id NOT IN (SELECT stuid FROM Has_Pet)
after:
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)

index is 86
before:
SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)
after:
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)

index is 87
before:
SELECT count(DISTINCT continent) FROM continents
after:
SELECT count(DISTINCT ContId) FROM continents

index is 88
before:
SELECT COUNT(*) FROM continents
after:
SELECT COUNT(ContId) FROM continents

index is 89
before:
SELECT contid ,  continent , count(countryname) FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY contid, continent
after:
SELECT contid, continent, COUNT(countryname) AS num_countries FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY contid, continent

index is 90
before:
SELECT contid , continent , count(countryname) FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY contid , continent
after:
SELECT contid, continent, COUNT(countryname) AS country_count FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY contid, continent

index is 91
before:
SELECT count(DISTINCT countryname) FROM countries
after:
SELECT COUNT(DISTINCT CountryName) FROM countries

index is 92
before:
SELECT count(DISTINCT countryname) FROM countries
after:
SELECT COUNT(DISTINCT CountryName) AS CountryCount FROM countries

index is 93
before:
SELECT car_makers.fullname ,  car_makers.id ,  count(model_list.modelid) FROM car_makers JOIN model_list ON car_makers.id  =  model_list.maker GROUP BY car_makers.fullname ,  car_makers.id
after:
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.ModelId) AS ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id

index is 94
before:
SELECT fullname ,  id , COUNT(*) FROM car_makers JOIN model_list ON car_makers.id  =  model_list.maker GROUP BY fullname ,  id
after:
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.ModelId) AS ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id

index is 95
before:
SELECT T3.model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.id  =  T2.makeid JOIN model_list AS T3 ON T2.model  =  T3.model WHERE T1.horsepower  =  (SELECT min(horsepower) FROM cars_data)
after:
SELECT T3.Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T1.Horsepower = (   SELECT MIN(Horsepower)   FROM cars_data )

index is 96
before:
SELECT model FROM cars_data JOIN car_names ON cars_data.id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model ORDER BY cars_data.Horsepower LIMIT 1
after:
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model ORDER BY cars_data.Horsepower ASC LIMIT 1

index is 97
before:
SELECT model FROM car_names WHERE MakeId IN (SELECT id FROM cars_data WHERE weight < (SELECT avg(weight) FROM cars_data))
after:
SELECT car_names.Model FROM car_names WHERE car_names.MakeId IN (     SELECT cars_data.Id     FROM cars_data     WHERE cars_data.Weight < (         SELECT AVG(cars_data.Weight)         FROM cars_data     ) )

index is 98
before:
SELECT model FROM cars_data WHERE weight  <  (SELECT avg(weight) FROM cars_data)
after:
SELECT model  FROM cars_data  WHERE Weight < (SELECT AVG(Weight) FROM cars_data)

index is 99
before:
SELECT DISTINCT maker FROM car_makers JOIN car_names ON car_makers.id = car_names.makeid JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year = 1970
after:
SELECT DISTINCT car_makers.Maker  FROM car_makers  JOIN car_names ON car_makers.Id = car_names.MakeId  JOIN cars_data ON car_names.MakeId = cars_data.Id  WHERE cars_data.Year = 1970

index is 100
before:
SELECT DISTINCT maker FROM car_makers JOIN car_names ON car_makers.id = car_names.makeid JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year = 1970
after:
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1970

index is 101
before:
SELECT make , MIN(year) FROM car_names JOIN cars_data ON car_names.makeId = cars_data.id GROUP BY make
after:
SELECT car_names.Make, MIN(cars_data.Year)  FROM car_names  JOIN cars_data ON car_names.MakeId = cars_data.Id  GROUP BY car_names.Make

index is 102
before:
SELECT car_makers.maker , cars_data.year FROM car_makers JOIN car_names ON car_makers.id = car_names.makeid JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year  =  (SELECT min(year) FROM cars_data)
after:
SELECT car_makers.Maker, cars_data.Year FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = (SELECT MIN(Year) FROM cars_data)

index is 103
before:
SELECT DISTINCT model FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year > 1980
after:
SELECT DISTINCT car_names.Model  FROM car_names  JOIN cars_data ON car_names.MakeId = cars_data.Id  WHERE cars_data.Year > 1980

index is 104
before:
SELECT DISTINCT model FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model WHERE cars_data.year > 1980
after:
SELECT DISTINCT model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Year > 1980

index is 105
before:
SELECT continents.continent ,  COUNT(car_makers.maker) FROM continents JOIN countries ON continents.contid  =  countries.continentid JOIN car_makers ON car_makers.country  =  countries.countryid GROUP BY continents.continent
after:
SELECT continents.Continent, COUNT(DISTINCT car_makers.Id) AS MakerCount FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON car_makers.Country = countries.CountryId GROUP BY continents.ContId, continents.Continent

index is 106
before:
SELECT continent , COUNT(DISTINCT car_makers.id) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON car_makers.Country = countries.CountryId GROUP BY continent
after:
SELECT continents.Continent, COUNT(DISTINCT car_makers.Id) AS MakerCount FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON car_makers.Country = countries.CountryId GROUP BY continents.Continent

index is 107
before:
SELECT countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countryname ORDER BY count(car_makers.maker) DESC LIMIT 1
after:
SELECT countries.CountryName  FROM countries  JOIN car_makers ON countries.CountryId = car_makers.Country  GROUP BY countries.CountryName  ORDER BY COUNT(car_makers.Id) DESC  LIMIT 1

index is 108
before:
SELECT countryname FROM countries GROUP BY countryname ORDER BY count(car_makers.maker) DESC LIMIT 1
after:
SELECT countries.CountryName  FROM countries  JOIN car_makers ON countries.CountryId = car_makers.Country  GROUP BY countries.CountryName  ORDER BY COUNT(car_makers.Maker) DESC  LIMIT 1

index is 109
before:
SELECT COUNT(*) , car_makers.fullname FROM car_makers JOIN model_list ON car_makers.id  =  model_list.maker GROUP BY car_makers.fullname
after:
SELECT COUNT(model_list.ModelId) AS ModelCount, car_makers.FullName  FROM car_makers  JOIN model_list ON car_makers.Id = model_list.Maker  GROUP BY car_makers.FullName

index is 110
before:
SELECT COUNT(T3.model) ,  T1.id ,  T1.fullname FROM car_makers AS T1 JOIN model_list AS T2 ON T1.id  =  T2.maker JOIN car_names AS T3 ON T2.model  =  T3.model GROUP BY T1.id, T1.fullname
after:
SELECT COUNT(T3.model) AS model_count, T1.id, T1.fullname FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker JOIN car_names AS T3 ON T2.Model = T3.Model GROUP BY T1.id, T1.fullname

index is 111
before:
SELECT cars_data.accelerate FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id JOIN model_list ON car_names.makeid = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id WHERE car_names.make = 'amc hornet' AND car_names.model = 'amc hornet sportabout (sw)' AND car_makers.maker = 'amc'
after:
SELECT cars_data.Accelerate FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id JOIN model_list ON car_names.Model = model_list.ModelId JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_names.Make = 'amc hornet' AND car_names.Model = 'amc hornet sportabout (sw)' AND car_makers.Maker = 'amc'

index is 112
before:
SELECT accelerate FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.make = 'amc hornet' AND car_names.model = 'amc hornet sportabout (sw)'
after:
SELECT cars_data.Accelerate  FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE car_makers.FullName = 'amc'  AND car_names.Model = 'amc hornet sportabout (sw)'

index is 113
before:
SELECT count(DISTINCT maker) FROM car_makers WHERE country = (SELECT countryid FROM countries WHERE countryname = 'france')
after:
SELECT count(DISTINCT Maker) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'france')

index is 114
before:
SELECT COUNT(DISTINCT maker) FROM car_makers WHERE country = (SELECT countryid FROM countries WHERE countryname = 'France')
after:
SELECT COUNT(DISTINCT Maker)  FROM car_makers  WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'France')

index is 115
before:
SELECT count(DISTINCT model_list.modelid) FROM countries JOIN car_makers ON countries.countryid = car_makers.country JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.makeid WHERE countries.countryname = 'usa'
after:
SELECT count(DISTINCT car_names.ModelId)  FROM countries  JOIN car_makers ON countries.CountryId = car_makers.Country  JOIN model_list ON car_makers.Id = model_list.Maker  JOIN car_names ON model_list.ModelId = car_names.MakeId  WHERE countries.CountryName = 'usa'

index is 116
before:
SELECT count(*) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'United States'
after:
SELECT count(DISTINCT model_list.ModelId) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States'

index is 117
before:
SELECT avg(mpg) FROM cars_data WHERE cylinders  =  4
after:
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4

index is 118
before:
SELECT avg(MPG) FROM cars_data WHERE Cylinders = 4
after:
SELECT avg(MPG) FROM cars_data WHERE Cylinders = 4

index is 119
before:
SELECT min(weight) FROM cars_data WHERE cylinders  =  8 AND year  =  1974
after:
SELECT min(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974

index is 120
before:
SELECT min(weight) FROM cars_data WHERE cylinders  =  8 AND year  =  1974
after:
SELECT min(cars_data.Weight)  FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 8  AND cars_data.Year = 1974

index is 121
before:
SELECT maker ,  model FROM car_makers JOIN model_list ON car_makers.id  =  model_list.maker JOIN car_names ON model_list.modelid  =  car_names.makeid
after:
SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.ModelId = car_names.MakeId

index is 122
before:
SELECT car_makers.maker , car_names.model FROM car_makers JOIN model_list ON car_makers.id  =  model_list.maker JOIN car_names ON model_list.modelid  =  car_names.makeid
after:
SELECT car_makers.Maker, car_names.Model  FROM car_makers  JOIN model_list ON car_makers.Id = model_list.Maker  JOIN car_names ON model_list.ModelId = car_names.MakeId

index is 123
before:
SELECT countryname ,  countryid FROM countries WHERE EXISTS (SELECT id FROM car_makers WHERE country  =  countryid)
after:
SELECT CountryName, CountryId FROM countries WHERE CountryId IN (SELECT Country FROM car_makers)

index is 124
before:
SELECT countryname ,  countryid FROM countries WHERE EXISTS (SELECT id FROM car_makers WHERE countries.countryid = car_makers.country)
after:
SELECT countryname, countryid FROM countries WHERE countryid IN (SELECT DISTINCT country FROM car_makers)

index is 125
before:
SELECT count(*) FROM cars_data WHERE horsepower  >  150
after:
SELECT count(*) FROM cars_data WHERE Horsepower > 150

index is 126
before:
SELECT count(*) FROM cars_data WHERE horsepower  >  150
after:
SELECT count(*) FROM cars_data WHERE Horsepower > 150

index is 127
before:
SELECT year , AVG(weight) FROM cars_data GROUP BY year
after:
SELECT year, AVG(Weight) AS AverageWeight FROM cars_data GROUP BY year

index is 128
before:
SELECT AVG(weight) ,  year FROM cars_data GROUP BY year
after:
SELECT AVG(Weight), Year FROM cars_data GROUP BY Year

index is 129
before:
SELECT countryname FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE continent = 'Europe' GROUP BY countryname HAVING count(DISTINCT car_makers.maker) >= 3
after:
SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(DISTINCT car_makers.Maker) >= 3

index is 130
before:
SELECT countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe' GROUP BY countryname HAVING count(DISTINCT car_makers.id) >= 3
after:
SELECT countryname  FROM countries  JOIN car_makers ON countries.CountryId = car_makers.Country  WHERE countries.Continent = 'Europe'  GROUP BY countries.CountryId, countries.CountryName  HAVING count(DISTINCT car_makers.Id) >= 3

index is 131
before:
SELECT max(horsepower) ,  make FROM cars_data JOIN car_names ON cars_data.id  =  car_names.makeid WHERE cylinders  =  3 GROUP BY make
after:
SELECT MAX(cars_data.Horsepower) AS MaxHorsepower, car_makers.Maker AS Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 3 GROUP BY car_makers.Maker

index is 132
before:
SELECT max(horsepower) , car_makers.Maker FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cylinders = 3 GROUP BY car_makers.Maker
after:
SELECT MAX(cars_data.Horsepower) AS MaxHorsepower, car_makers.Maker FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 3 GROUP BY car_makers.Maker

index is 133
before:
SELECT model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid ORDER BY mpg DESC LIMIT 1
after:
SELECT model_list.Model FROM cars_data JOIN model_list ON cars_data.Id = model_list.ModelId ORDER BY cars_data.MPG DESC LIMIT 1

index is 134
before:
SELECT model FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid ORDER BY mpg DESC LIMIT 1
after:
SELECT car_names.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId ORDER BY cars_data.MPG DESC LIMIT 1

index is 135
before:
SELECT AVG(horsepower) FROM cars_data WHERE year < 1980
after:
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980

index is 136
before:
SELECT avg(horsepower) FROM cars_data WHERE year  <  1980
after:
SELECT avg(Horsepower) FROM cars_data WHERE Year < 1980

index is 137
before:
WHERE car_names.Model = 'volvo'
after:
SELECT AVG(cars_data.Edispl) FROM model_list JOIN car_names ON model_list.ModelId = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_names.Model = 'volvo'

index is 138
before:
SELECT AVG(edispl) FROM cars_data WHERE Id IN (SELECT MakeId FROM car_names WHERE Model = 'volvo')
after:
SELECT AVG(Edispl) FROM cars_data WHERE Id IN (SELECT MakeId FROM car_names WHERE Model = 'volvo')

index is 139
before:
SELECT MAX(accelerate) , cylinders FROM cars_data GROUP BY cylinders
after:
SELECT MAX(Accelerate) AS MaxAccelerate, Cylinders FROM cars_data GROUP BY Cylinders

index is 140
before:
SELECT cylinders , MAX(accelerate) FROM cars_data GROUP BY cylinders
after:
SELECT cylinders, MAX(accelerate) FROM cars_data GROUP BY cylinders

index is 141
before:
SELECT model FROM model_list GROUP BY model ORDER BY count(*) DESC LIMIT 1
after:
SELECT model FROM model_list GROUP BY model ORDER BY COUNT(*) DESC LIMIT 1

index is 142
before:
SELECT model FROM model_list GROUP BY model ORDER BY count(DISTINCT modelid) DESC LIMIT 1
after:
SELECT model, COUNT(DISTINCT ModelId) AS version_count FROM model_list GROUP BY model ORDER BY version_count DESC LIMIT 1

index is 143
before:
SELECT count(*) FROM cars_data WHERE cylinders  >  4
after:
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4

index is 144
before:
SELECT count(id) FROM cars_data WHERE cylinders  >  4
after:
SELECT COUNT(Id) FROM cars_data WHERE Cylinders > 4

index is 145
before:
SELECT count(*) FROM cars_data WHERE year  =  1980
after:
SELECT count(*) FROM cars_data WHERE Year = 1980

index is 146
before:
SELECT count(*) FROM cars_data WHERE year = 1980
after:
SELECT count(*) FROM cars_data WHERE Year = 1980

index is 147
before:
SELECT COUNT(DISTINCT modelid) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE car_makers.fullname = 'American Motor Company'
after:
SELECT COUNT(DISTINCT model_list.ModelId)  FROM car_makers  JOIN model_list ON car_makers.Id = model_list.Maker  WHERE car_makers.FullName = 'American Motor Company'

index is 148
before:
SELECT count(model) FROM model_list WHERE maker = (SELECT id FROM car_makers WHERE fullname = 'American Motor Company')
after:
SELECT COUNT(DISTINCT model) FROM model_list WHERE maker = (SELECT Id FROM car_makers WHERE FullName = 'American Motor Company')

index is 149
before:
SELECT fullname ,  id FROM car_makers JOIN model_list ON car_makers.id  =  model_list.maker GROUP BY id ,  fullname HAVING count(model_list.modelid)  >  3
after:
SELECT fullname, id  FROM car_makers  JOIN model_list ON car_makers.Id = model_list.Maker  GROUP BY fullname, id  HAVING COUNT(model_list.ModelId) > 3

index is 150
before:
SELECT maker , id FROM car_makers GROUP BY maker, id HAVING count(*)  >  3
after:
SELECT car_makers.Maker, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker, car_makers.Id HAVING COUNT(*) > 3

index is 151
before:
SELECT DISTINCT T2.model FROM model_list AS T2 JOIN car_names AS T1 ON T2.model  =  T1.model JOIN car_makers AS T3 ON T1.makeid  =  T3.id JOIN cars_data AS T4 ON T1.makeid  =  T4.id WHERE T3.fullname  =  'General Motors' OR T4.weight  >  3500
after:
SELECT DISTINCT T2.Model  FROM model_list AS T2  JOIN car_names AS T1 ON T2.Model = T1.Model  JOIN car_makers AS T3 ON T1.MakeId = T3.Id  JOIN cars_data AS T4 ON T1.MakeId = T4.Id  WHERE T3.FullName = 'General Motors' OR T4.Weight > 3500

index is 152
before:
SELECT model FROM model_list JOIN car_makers ON model_list.maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.ModelId JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500 GROUP BY model
after:
SELECT model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.ModelId = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500 GROUP BY model

index is 153
before:
SELECT DISTINCT year FROM cars_data WHERE weight >= 3000 AND weight <= 4000
after:
SELECT cars_data.Year  FROM cars_data  WHERE cars_data.Weight >= 3000 AND cars_data.Weight <= 4000

index is 154
before:
SELECT DISTINCT year FROM cars_data WHERE (weight  <  4000 AND weight  >  3000)
after:
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 OR Weight > 3000

index is 155
before:
SELECT horsepower FROM cars_data WHERE accelerate  =  (SELECT max(accelerate) FROM cars_data)
after:
SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.Accelerate = (     SELECT MAX(Accelerate)     FROM cars_data )

index is 156
before:
SELECT horsepower FROM cars_data WHERE accelerate  =  (SELECT max(accelerate) FROM cars_data)
after:
SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.Accelerate = (     SELECT MAX(cars_data.Accelerate) FROM cars_data )

index is 157
before:
SELECT cylinders FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE accelerate  =  (SELECT min(accelerate) FROM cars_data WHERE car_names.model = 'volvo')
after:
SELECT cylinders FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  WHERE car_names.model = 'volvo'  AND accelerate = (SELECT MIN(accelerate) FROM cars_data WHERE car_names.model = 'volvo')

index is 158
before:
SELECT cylinders FROM cars_data WHERE id IN (SELECT MIN(id) FROM cars_data WHERE id IN (SELECT MakeId FROM car_names WHERE Model IN (SELECT model FROM model_list WHERE maker = 'volvo')))
after:
SELECT cylinders  FROM cars_data  WHERE id IN (   SELECT MIN(id)    FROM cars_data    WHERE id IN (     SELECT MakeId      FROM car_names      WHERE Model = 'volvo'   ) )  ORDER BY Accelerate  LIMIT 1

index is 159
before:
SELECT count(*) FROM cars_data WHERE accelerate > (SELECT max(horsepower) FROM cars_data)
after:
SELECT count(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)

index is 160
before:
SELECT count(*) FROM cars_data WHERE accelerate  >  (SELECT max(horsepower) FROM cars_data)
after:
SELECT count(*) FROM cars_data WHERE Accelerate > (SELECT max(Horsepower) FROM cars_data)

index is 161
before:
SELECT count(DISTINCT T1.countryid) FROM countries AS T1 JOIN car_makers AS T2 ON T1.countryid  =  T2.country GROUP BY T1.countryid HAVING count(DISTINCT T2.id) > 2
after:
SELECT count(DISTINCT T1.CountryId)  FROM countries AS T1  JOIN car_makers AS T2 ON T1.CountryId = T2.Country  GROUP BY T1.CountryId  HAVING count(DISTINCT T2.Id) > 2

index is 162
before:
SELECT count(DISTINCT T1.countryid) FROM countries AS T1 JOIN car_makers AS T2 ON T1.countryid = T2.country GROUP BY T2.country HAVING count(DISTINCT T2.maker) > 2
after:
SELECT COUNT(DISTINCT T1.CountryId) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING COUNT(DISTINCT T2.Maker) > 2

index is 163
before:
SELECT count(*) FROM cars_data WHERE cylinders  >  6
after:
SELECT count(*) FROM cars_data WHERE Cylinders > 6

index is 164
before:
SELECT count(*) FROM cars_data WHERE cylinders  >  6
after:
SELECT count(*) FROM cars_data WHERE Cylinders > 6

index is 165
before:
SELECT model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1
after:
SELECT model_list.Model FROM cars_data JOIN model_list ON cars_data.Id = model_list.ModelId WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1

index is 166
before:
SELECT model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cylinders = 4 AND horsepower = (SELECT max(horsepower) FROM cars_data WHERE cylinders = 4)
after:
SELECT model_list.Model FROM cars_data JOIN model_list ON cars_data.Id = model_list.ModelId WHERE cars_data.Cylinders = 4 GROUP BY model_list.Model HAVING cars_data.Horsepower = MAX(cars_data.Horsepower)

index is 167
before:
SELECT car_names.makeid , car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.horsepower  >  (SELECT min(horsepower) FROM cars_data) AND cars_data.cylinders <= 3
after:
SELECT car_names.makeid, car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data)   AND cars_data.cylinders <= 3

index is 168
before:
SELECT car_names.makeid ,  car_names.make FROM car_names JOIN cars_data ON car_names.makeid  =  cars_data.id WHERE cars_data.horsepower  <>  (SELECT min(horsepower) FROM cars_data) AND cars_data.cylinders  <  4
after:
SELECT car_names.MakeId, car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND cars_data.Cylinders < 4;

index is 169
before:
SELECT max(MPG) FROM cars_data WHERE Cylinders  =  8 OR Year < 1980
after:
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 AND Year < 1980

index is 170
before:
SELECT max(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
after:
SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980

index is 171
before:
SELECT model FROM cars_data JOIN model_list ON cars_data.id  =  model_list.modelid WHERE weight  <  3500 AND maker  !=  'Ford Motor Company'
after:
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Weight < 3500 AND car_makers.Maker != 'Ford Motor Company'

index is 172
before:
SELECT DISTINCT T3.model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.id  =  T2.makeid JOIN model_list AS T3 ON T2.model  =  T3.model WHERE T1.weight  <  3500 AND T3.maker  <>  'ford'
after:
SELECT DISTINCT T3.Model  FROM cars_data AS T1  JOIN car_names AS T2 ON T1.Id = T2.MakeId  JOIN model_list AS T3 ON T2.Model = T3.Model  JOIN car_makers AS T4 ON T3.Maker = T4.Id  WHERE T1.Weight < 3500 AND T4.Maker <> 'Ford'

index is 173
before:
SELECT countryname FROM countries WHERE countryname NOT IN (SELECT country FROM car_makers)
after:
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers)

index is 174
before:
SELECT countryname FROM countries WHERE countryid NOT IN (SELECT country FROM car_makers)
after:
SELECT countryname FROM countries WHERE countryid NOT IN (SELECT country FROM car_makers)

index is 175
before:
SELECT id , maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY id , maker HAVING count(DISTINCT model_list.model) >= 2 AND count(DISTINCT car_makers.id) > 3
after:
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.Model) >= 2 AND COUNT(DISTINCT car_makers.Id) > 3

index is 176
before:
SELECT car_makers.id ,  car_makers.maker FROM car_makers JOIN model_list ON car_makers.id  =  model_list.maker JOIN car_names ON model_list.modelid  =  car_names.makeid JOIN cars_data ON car_names.model  =  cars_data.id GROUP BY car_makers.id ,  car_makers.maker HAVING count(DISTINCT model_list.model)  >  2 AND count(*)  >  3
after:
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.ModelId = car_names.MakeId JOIN cars_data ON car_names.Model = cars_data.Id GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.Model) > 1 AND COUNT(*) > 3

index is 177
before:
SELECT countries.countryid ,  countries.countryname FROM countries JOIN car_makers ON car_makers.country  =  countries.countryid JOIN model_list ON car_makers.id  =  model_list.maker JOIN car_names ON model_list.model  =  car_names.model WHERE (COUNT(DISTINCT car_makers.id)  >  3 OR car_names.make  =  'fiat') GROUP BY countries.countryid ,  countries.countryname
after:
SELECT countries.countryid, countries.countryname  FROM countries  JOIN car_makers ON car_makers.country = countries.countryid  JOIN model_list ON car_makers.id = model_list.maker  JOIN car_names ON model_list.model = car_names.model  GROUP BY countries.countryid, countries.countryname  HAVING COUNT(DISTINCT car_makers.id) > 3 OR car_names.make = 'fiat'

index is 178
before:
SELECT countryid ,  countryname FROM countries WHERE (SELECT count(id) FROM car_makers WHERE car_makers.country = countries.countryid)  >  3 OR (SELECT count(model) FROM car_names WHERE car_names.make = 'fiat')  >  0 GROUP BY countryid ,  countryname
after:
SELECT countryid, countryname  FROM countries  WHERE countryid IN (SELECT country                      FROM car_makers                      GROUP BY country                      HAVING COUNT(*) > 3)    OR countryid IN (SELECT country                      FROM car_makers                      JOIN model_list ON car_makers.id = model_list.maker                      JOIN car_names ON model_list.modelid = car_names.makeid                      WHERE car_names.model = 'fiat')

index is 179
before:
SELECT country FROM airlines WHERE airline = "JetBlue Airways"
after:
SELECT country FROM airlines WHERE Airline = "JetBlue Airways"

index is 180
before:
SELECT country FROM airlines WHERE airline = 'JetBlue Airways'
after:
SELECT Country FROM airlines WHERE Airline = 'JetBlue Airways'

index is 181
before:
SELECT abbreviation FROM airlines WHERE Airline = "JetBlue Airways"
after:
SELECT Abbreviation FROM airlines WHERE Airline = "JetBlue Airways"

index is 182
before:
SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways'
after:
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue Airways'

index is 183
before:
SELECT airline , abbreviation FROM airlines WHERE country = "USA"
after:
SELECT Airline, Abbreviation FROM airlines WHERE Country = "USA"

index is 184
before:
SELECT airline , abbreviation FROM airlines WHERE country = 'USA'
after:
SELECT Airline, Abbreviation  FROM airlines  WHERE Country = 'USA'

index is 185
before:
SELECT airportcode ,  airportname FROM airports WHERE city = 'Anthony'
after:
SELECT airportcode, airportname  FROM airports  WHERE city = 'Anthony'

index is 186
before:
SELECT airportcode ,  airportname FROM airports WHERE city  =  'Anthony'
after:
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'

index is 187
before:
SELECT COUNT(DISTINCT airline) FROM airlines
after:
SELECT COUNT(DISTINCT uid) FROM airlines

index is 188
before:
SELECT count(*) FROM airlines
after:
SELECT count(*) FROM airlines

index is 189
before:
SELECT count(*) FROM airports
after:
SELECT COUNT(*) FROM airports

index is 190
before:
SELECT count(*) FROM airports
after:
SELECT count(*) FROM airports

index is 191
before:
SELECT count(*) FROM flights
after:
SELECT count(*) FROM flights

index is 192
before:
SELECT count(*) FROM flights
after:
SELECT COUNT(*) FROM flights

index is 193
before:
SELECT airline FROM airlines WHERE abbreviation = 'UAL'
after:
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL'

index is 194
before:
SELECT airline FROM airlines WHERE abbreviation = 'UAL'
after:
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL'

index is 195
before:
SELECT count(*) FROM airlines WHERE country = 'USA'
after:
SELECT COUNT(*) FROM airlines WHERE Country = 'USA'

index is 196
before:
SELECT COUNT(airline) FROM airlines WHERE country = 'USA'
after:
SELECT COUNT(*) FROM airlines WHERE Country = 'USA'

index is 197
before:
SELECT city ,  country FROM airports WHERE airportname = 'Alton'
after:
SELECT City, Country FROM airports WHERE AirportName = 'Alton';

index is 198
before:
SELECT city ,  country FROM airports WHERE airportname  =  'Alton' AND airportcode  =  (SELECT sourceairport FROM flights WHERE destairport  =  airportcode)
after:
SELECT city, country  FROM airports  WHERE airportname = 'Alton' AND airportcode = (SELECT destairport FROM flights WHERE sourceairport = airportcode)

index is 199
before:
SELECT airportname FROM airports WHERE airportcode = 'AKO'
after:
SELECT AirportName  FROM airports  WHERE AirportCode = 'AKO'

index is 200
before:
SELECT airportname FROM airports WHERE airportcode = 'AKO'
after:
SELECT AirportName FROM airports WHERE AirportCode = 'AKO'

index is 201
before:
SELECT airportname FROM airports WHERE city = 'Aberdeen'
after:
SELECT AirportName FROM airports WHERE City = 'Aberdeen'

index is 202
before:
SELECT airportname FROM airports WHERE city = 'Aberdeen'
after:
SELECT AirportName FROM airports WHERE City = 'Aberdeen'

index is 203
before:
SELECT count(*) FROM flights WHERE sourceairport = 'APG'
after:
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG'

index is 204
before:
SELECT count(*) FROM flights WHERE SourceAirport = 'APG'
after:
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG'

index is 205
before:
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO'
after:
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO'

index is 206
before:
SELECT count(*) FROM flights WHERE DestAirport = 'ATO'
after:
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO'

index is 207
before:
SELECT count(*) FROM airports JOIN flights ON airports.airportcode = flights.sourceairport WHERE airports.city = 'Aberdeen'
after:
SELECT COUNT(*) FROM airports  JOIN flights ON airports.AirportCode = flights.SourceAirport  WHERE airports.City = 'Aberdeen'

index is 208
before:
SELECT count(*) FROM flights WHERE sourceairport = 'Aberdeen'
after:
SELECT COUNT(*)  FROM flights  WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE AirportName = 'Aberdeen')

index is 209
before:
SELECT count(*) FROM airports WHERE city = "Aberdeen"
after:
SELECT count(*)  FROM flights  JOIN airports ON flights.DestAirport = airports.AirportCode  WHERE airports.City = "Aberdeen"

index is 210
before:
SELECT count(*) FROM flights WHERE DestAirport = 'Aberdeen'
after:
SELECT count(*) FROM flights WHERE DestAirport = 'Aberdeen'

index is 211
before:
SELECT count(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley'
after:
SELECT count(*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN airports AS dest ON flights.destairport = dest.airportcode WHERE airports.city = 'Aberdeen' AND dest.city = 'Ashley'

index is 212
before:
SELECT count(flightno) FROM flights WHERE sourceairport = (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND destairport = (SELECT airportcode FROM airports WHERE city = 'Ashley')
after:
SELECT count(FlightNo)  FROM flights  WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen')  AND DestAirport = (SELECT AirportCode FROM airports WHERE City = 'Ashley')

index is 213
before:
SELECT count(*) FROM flights WHERE airline = 'JetBlue Airways'
after:
SELECT count(*) FROM flights WHERE Airline = 'JetBlue Airways'

index is 214
before:
SELECT count(*) FROM airlines WHERE Airline = 'JetBlue Airways'
after:
SELECT count(*) FROM flights WHERE Airline = 'JetBlue Airways'

index is 215
before:
SELECT count(*) FROM flights WHERE airline = 'United Airlines' AND destairport = 'ASY'
after:
SELECT count(*) FROM flights  JOIN airlines ON flights.airline = airlines.Airline  JOIN airports ON flights.destairport = airports.AirportCode  WHERE airlines.Airline = 'United Airlines' AND airports.AirportCode = 'ASY'

index is 216
before:
SELECT count(*) FROM flights WHERE airline = 'United Airlines' AND destAirport = 'ASY'
after:
SELECT count(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'ASY'

index is 217
before:
SELECT count(*) FROM flights WHERE airline  =  'United Airlines' AND (sourceairport  =  'AHD' OR destairport  =  'AHD')
after:
SELECT count(*)  FROM flights  WHERE Airline = 'United Airlines' AND (SourceAirport = 'AHD' OR DestAirport = 'AHD')

index is 218
before:
SELECT count(*) FROM flights WHERE sourceairport = 'AHD' AND airline = 'United Airlines'
after:
SELECT count(*) FROM flights WHERE SourceAirport = 'AHD' AND Airline = 'United Airlines'

index is 219
before:
SELECT count(*) FROM flights WHERE destairport  =  (SELECT airportcode FROM airports WHERE city  =  'Aberdeen') AND airline  =  (SELECT uid FROM airlines WHERE airline  =  'United Airlines')
after:
SELECT COUNT(*)  FROM flights  JOIN airports ON flights.destairport = airports.airportcode  JOIN airlines ON flights.airline = airlines.uid  WHERE airports.city = 'Aberdeen'  AND airlines.airline = 'United Airlines'

index is 220
before:
SELECT count(*) FROM flights JOIN airports ON flights.destairport = airports.airportcode JOIN airlines ON flights.airline = airlines.uid WHERE airports.city = 'Aberdeen' AND airlines.airline = 'United Airlines'
after:
SELECT count(*) FROM flights  JOIN airports ON flights.destairport = airports.airportcode  JOIN airlines ON flights.airline = airlines.uid  WHERE airports.city = 'Aberdeen' AND airlines.abbreviation = 'UA'

index is 221
before:
SELECT city FROM airports GROUP BY city ORDER BY count(*) DESC LIMIT 1
after:
SELECT airports.City FROM airports JOIN flights ON flights.DestAirport = airports.AirportCode GROUP BY airports.City ORDER BY COUNT(*) DESC LIMIT 1

index is 222
before:
SELECT city FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY airports.city ORDER BY count(flights.destairport) DESC LIMIT 1
after:
SELECT airports.City FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode GROUP BY airports.City ORDER BY COUNT(flights.DestAirport) DESC LIMIT 1

index is 223
before:
SELECT city FROM airports GROUP BY city ORDER BY count(*) DESC LIMIT 1
after:
SELECT airports.City FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY airports.City ORDER BY COUNT(*) DESC LIMIT 1

index is 224
before:
SELECT city FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY city ORDER BY count(flights.sourceairport) DESC LIMIT 1
after:
SELECT airports.City AS city FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY airports.City ORDER BY COUNT(flights.SourceAirport) DESC LIMIT 1

index is 225
before:
SELECT airportcode FROM airports GROUP BY airportcode ORDER BY count(DestAirport) DESC LIMIT 1
after:
SELECT AirportCode FROM airports GROUP BY AirportCode ORDER BY COUNT(*) DESC LIMIT 1

index is 226
before:
SELECT airportcode FROM flights GROUP BY destairport ORDER BY count(destairport) DESC LIMIT 1
after:
SELECT airports.AirportCode FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode GROUP BY airports.AirportCode ORDER BY COUNT(flights.DestAirport) DESC LIMIT 1

index is 227
before:
SELECT airportcode FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY airports.airportcode ORDER BY count(flights.flightno) LIMIT 1
after:
SELECT airports.AirportCode  FROM flights  JOIN airports ON flights.DestAirport = airports.AirportCode  GROUP BY airports.AirportCode  ORDER BY COUNT(flights.FlightNo) ASC  LIMIT 1

index is 228
before:
SELECT airportcode FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY airports.airportcode ORDER BY count(*) ASC LIMIT 1
after:
SELECT airports.AirportCode  FROM airports  JOIN flights ON flights.DestAirport = airports.AirportCode  GROUP BY airports.AirportCode  ORDER BY COUNT(*) ASC  LIMIT 1

index is 229
before:
SELECT airline FROM flights GROUP BY airline ORDER BY count(*) DESC LIMIT 1
after:
SELECT airline, COUNT(*) AS flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1

index is 230
before:
SELECT airline FROM flights JOIN airlines ON flights.airline = airlines.abbreviation GROUP BY airlines.airline ORDER BY count(*) DESC LIMIT 1
after:
SELECT airlines.Airline FROM flights JOIN airlines ON flights.Airline = airlines.Abbreviation GROUP BY airlines.Airline ORDER BY COUNT(*) DESC LIMIT 1

index is 231
before:
SELECT abbreviation ,  country FROM airlines WHERE airline IN (SELECT airline FROM flights GROUP BY airline HAVING COUNT(*) = (SELECT MIN(COUNT(*)) FROM flights GROUP BY airline))
after:
SELECT abbreviation, country  FROM airlines  WHERE uid IN (   SELECT airline    FROM flights    GROUP BY airline    HAVING COUNT(*) = (     SELECT MIN(COUNT(*))      FROM flights      GROUP BY airline   ) )

index is 232
before:
SELECT airlines.abbreviation , airlines.country FROM flights JOIN airlines ON flights.airline  =  airlines.uid GROUP BY airlines.abbreviation , airlines.country HAVING count(*)  =  (SELECT min(count(*)) FROM flights GROUP BY airline)
after:
SELECT airlines.abbreviation, airlines.country FROM flights JOIN airlines ON flights.airline = airlines.uid GROUP BY airlines.abbreviation, airlines.country HAVING count(*) = (     SELECT COUNT(*)     FROM flights     GROUP BY airline     ORDER BY COUNT(*) ASC     LIMIT 1 )

index is 233
before:
SELECT DISTINCT airline FROM airlines WHERE EXISTS (SELECT 1 FROM flights WHERE sourceairport = 'AHD' AND airline = uid)
after:
SELECT DISTINCT Airline  FROM airlines  WHERE EXISTS (     SELECT 1      FROM flights      WHERE SourceAirport = 'AHD'      AND Airline = airlines.uid )

index is 234
before:
SELECT airline FROM airlines WHERE EXISTS (SELECT * FROM flights WHERE sourceairport = 'AHD' AND airline = airlines.airline)
after:
SELECT airlines.Airline FROM airlines WHERE EXISTS (   SELECT *   FROM flights   WHERE flights.SourceAirport = 'AHD' AND flights.Airline = airlines.Airline )

index is 235
before:
SELECT DISTINCT airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.destairport = 'AHD'
after:
SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.DestAirport = 'AHD'

index is 236
before:
SELECT airline FROM airlines WHERE EXISTS (SELECT * FROM flights WHERE destairport = 'AHD' AND airlines.uid = flights.airline)
after:
SELECT airline FROM airlines  WHERE EXISTS (SELECT * FROM flights                JOIN airports ON flights.DestAirport = airports.AirportCode                WHERE airports.AirportCode = 'AHD' AND airlines.uid = flights.Airline)

index is 237
before:
SELECT airline FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE flights.sourceairport IN ('APG', 'CVO') AND flights.destairport IN ('APG', 'CVO') GROUP BY airline HAVING COUNT(DISTINCT flights.sourceairport) = 2
after:
SELECT airlines.Airline FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE flights.SourceAirport IN ('APG', 'CVO') AND flights.DestAirport IN ('APG', 'CVO') GROUP BY airlines.Airline HAVING COUNT(DISTINCT flights.SourceAirport) = 2

index is 238
before:
SELECT airline FROM airlines WHERE uid IN (SELECT airline FROM flights WHERE sourceairport IN ('APG', 'CVO') AND destairport IN ('APG', 'CVO')) GROUP BY airline HAVING count(DISTINCT sourceairport, destairport) = 2
after:
SELECT airline  FROM airlines  WHERE uid IN (     SELECT airline      FROM flights      WHERE sourceairport IN ('APG', 'CVO')      AND destairport IN ('APG', 'CVO') )  GROUP BY airline  HAVING count(DISTINCT sourceairport) = 2

index is 239
before:
SELECT airline FROM airlines WHERE uid IN (SELECT airline FROM flights WHERE sourceairport = 'CVO') AND uid NOT IN (SELECT airline FROM flights WHERE sourceairport = 'APG')
after:
SELECT Airline FROM airlines WHERE uid IN (SELECT Airline FROM flights WHERE SourceAirport = 'CVO') AND uid NOT IN (SELECT Airline FROM flights WHERE SourceAirport = 'APG')

index is 240
before:
SELECT DISTINCT airline FROM airlines WHERE airportcode = 'CVO' AND airline NOT IN (SELECT DISTINCT airline FROM flights WHERE airportcode = 'APG')
after:
SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'CVO' AND airlines.Airline NOT IN (   SELECT DISTINCT airlines.Airline   FROM airlines   JOIN flights ON airlines.uid = flights.Airline   JOIN airports ON flights.SourceAirport = airports.AirportCode   WHERE airports.AirportCode = 'APG' ) GROUP BY airlines.Airline

index is 241
before:
SELECT airline FROM airlines JOIN flights ON airlines.uid = flights.airline GROUP BY airlines.airline HAVING count(flights.flightno) >= 10
after:
SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline GROUP BY airlines.Airline HAVING count(flights.FlightNo) >= 10

index is 242
before:
SELECT airline FROM flights JOIN airlines ON flights.airline = airlines.airline GROUP BY airlines.airline HAVING count(flightno) >= 10
after:
SELECT airlines.Airline  FROM flights  JOIN airlines ON flights.Airline = airlines.Airline  GROUP BY airlines.Airline  HAVING COUNT(flights.FlightNo) >= 10

index is 243
before:
SELECT airline FROM flights JOIN airlines ON flights.airline = airlines.airline GROUP BY airlines.airline HAVING count(flights.flightno)  <  200
after:
SELECT airlines.Airline FROM flights JOIN airlines ON flights.Airline = airlines.Abbreviation GROUP BY airlines.Airline HAVING COUNT(flights.FlightNo) < 200

index is 244
before:
SELECT airline FROM airlines JOIN flights ON airlines.uid = flights.airline GROUP BY airline HAVING count(*) < 200
after:
SELECT airlines.Airline  FROM airlines  JOIN flights ON airlines.uid = flights.Airline  GROUP BY airlines.Airline  HAVING COUNT(*) < 200

index is 245
before:
SELECT flightno FROM flights WHERE airline = "United Airlines"
after:
SELECT flights.FlightNo FROM flights JOIN airlines ON flights.Airline = airlines.Abbreviation WHERE airlines.Airline = "United Airlines"

index is 246
before:
SELECT flightno FROM flights WHERE airline = 'United Airlines'
after:
SELECT flightno FROM flights WHERE Airline = 'United Airlines'

index is 247
before:
SELECT flightno FROM flights WHERE sourceairport = 'APG'
after:
SELECT flights.FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'APG'

index is 248
before:
SELECT flightno FROM flights WHERE sourceairport = 'APG'
after:
SELECT flights.FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'APG'

index is 249
before:
SELECT flightno FROM flights WHERE destairport = "APG"
after:
SELECT flights.FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportCode = "APG"

index is 250
before:
SELECT flightno FROM flights WHERE destairport = 'APG'
after:
SELECT flights.FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportName = 'APG'

index is 251
before:
SELECT flightno FROM flights WHERE sourceairport  =  (SELECT airportcode FROM airports WHERE city  =  "Aberdeen")
after:
SELECT flightno FROM flights  JOIN airports ON flights.sourceairport = airports.airportcode  WHERE airports.city = "Aberdeen"

index is 252
before:
SELECT flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'
after:
SELECT flightno  FROM flights  JOIN airports ON flights.SourceAirport = airports.AirportCode  WHERE airports.City = 'Aberdeen'

index is 253
before:
SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
after:
SELECT flights.flightno  FROM flights  JOIN airports ON flights.destairport = airports.airportcode  WHERE airports.city = 'Aberdeen'

index is 254
before:
SELECT flightno FROM flights WHERE destairport = 'Aberdeen'
after:
SELECT flights.FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'

index is 255
before:
SELECT COUNT(DISTINCT flightno) FROM flights WHERE destairport = 'Aberdeen' OR destairport = 'Abilene'
after:
SELECT COUNT(DISTINCT FlightNo)  FROM flights  JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen' OR airports.City = 'Abilene'

index is 256
before:
SELECT count(*) FROM flights WHERE destairport IN ('Aberdeen', 'Abilene')
after:
SELECT COUNT(*)  FROM flights  WHERE destairport IN (SELECT AirportCode FROM airports WHERE AirportName IN ('Aberdeen', 'Abilene'))

index is 257
before:
SELECT airportname FROM airports WHERE airportcode NOT IN (SELECT sourceairport FROM flights UNION SELECT destairport FROM flights)
after:
SELECT AirportName FROM airports WHERE AirportCode NOT IN (   SELECT SourceAirport FROM flights   UNION   SELECT DestAirport FROM flights )

index is 258
before:
SELECT airportname FROM airports WHERE airportcode NOT IN (SELECT sourceairport FROM flights) OR airportcode NOT IN (SELECT destairport FROM flights)
after:
SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights)

index is 259
before:
SELECT count(*) FROM employee
after:
SELECT count(*) FROM employee

index is 260
before:
SELECT count(*) FROM employee
after:
SELECT COUNT(*) FROM employee

index is 261
before:
SELECT name FROM employee ORDER BY age ASC
after:
SELECT employee.Name FROM employee ORDER BY employee.Age ASC

index is 262
before:
SELECT name FROM employee ORDER BY age ASC
after:
SELECT employee.Name  FROM employee  ORDER BY employee.Age ASC

index is 263
before:
SELECT city ,  COUNT(employee_id) FROM employee GROUP BY city
after:
SELECT city, COUNT(employee_id) AS employee_count FROM employee GROUP BY city

index is 264
before:
SELECT city ,  COUNT(employee_id) FROM employee GROUP BY city
after:
SELECT city, COUNT(Employee_ID)  FROM employee  GROUP BY city

index is 265
before:
SELECT city FROM employee GROUP BY city HAVING count(DISTINCT employee_id)  >  1 AND age < 30
after:
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(DISTINCT employee_id) > 1

index is 266
before:
SELECT city FROM employee GROUP BY city HAVING count(*)  >  1 AND age < 30
after:
SELECT employee.city  FROM employee  WHERE age < 30  GROUP BY employee.city  HAVING count(employee.Employee_ID) > 1

index is 267
before:
SELECT count(shop_id), location FROM shop GROUP BY location
after:
SELECT COUNT(Shop_ID), Location FROM shop GROUP BY Location

index is 268
before:
SELECT count(DISTINCT shop_id), location FROM shop GROUP BY location
after:
SELECT COUNT(DISTINCT shop_id) AS num_shops, location FROM shop GROUP BY location

index is 269
before:
SELECT manager_name ,  district FROM shop WHERE number_products  =  (SELECT max(number_products) FROM shop)
after:
SELECT manager_name, district FROM shop WHERE number_products = (     SELECT max(number_products)      FROM shop )

index is 270
before:
SELECT manager_name ,  district FROM shop WHERE number_products  =  (SELECT max(number_products) FROM shop)
after:
SELECT manager_name, district FROM shop WHERE number_products = (   SELECT MAX(number_products)   FROM shop )

index is 271
before:
SELECT MIN(number_products) , MAX(number_products) FROM shop
after:
SELECT MIN(Number_products), MAX(Number_products) FROM shop

index is 272
before:
SELECT MIN(number_products) , MAX(number_products) FROM shop
after:
SELECT MIN(Number_products), MAX(Number_products) FROM shop

index is 273
before:
SELECT name ,  location ,  district FROM shop ORDER BY number_products DESC
after:
SELECT shop.name, shop.location, shop.district FROM shop ORDER BY shop.number_products DESC

index is 274
before:
SELECT name , location , district FROM shop ORDER BY number_products DESC
after:
SELECT name, location, district FROM shop ORDER BY number_products DESC

index is 275
before:
SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
after:
SELECT name FROM shop WHERE number_products > (     SELECT AVG(number_products)     FROM shop )

index is 276
before:
SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
after:
SELECT shop.Name FROM shop WHERE shop.Number_products > (SELECT AVG(Number_products) FROM shop)

index is 277
before:
SELECT name FROM employee ORDER BY (SELECT COUNT(*) FROM evaluation WHERE evaluation.employee_id = employee.employee_id) DESC LIMIT 1
after:
SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY employee.employee_id ORDER BY COUNT(*) DESC LIMIT 1

index is 278
before:
SELECT name FROM employee GROUP BY name ORDER BY count(employee_id) DESC LIMIT 1
after:
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID GROUP BY employee.Name ORDER BY COUNT(evaluation.Employee_ID) DESC LIMIT 1

index is 279
before:
SELECT name FROM employee ORDER BY bonus DESC LIMIT 1
after:
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1

index is 280
before:
SELECT name FROM employee ORDER BY bonus DESC LIMIT 1
after:
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1

index is 281
before:
SELECT name FROM employee WHERE employee_id NOT IN (SELECT employee_id FROM evaluation)
after:
SELECT name  FROM employee  WHERE employee_id NOT IN (SELECT employee_id FROM evaluation)

index is 282
before:
SELECT name FROM employee WHERE employee_id NOT IN (SELECT employee_id FROM evaluation)
after:
SELECT name  FROM employee  WHERE employee_id NOT IN (SELECT employee_id FROM evaluation)

index is 283
before:
SELECT name FROM shop ORDER BY (SELECT count(*) FROM hiring WHERE hiring.shop_id  =  shop.shop_id) DESC LIMIT 1
after:
SELECT shop.name FROM shop JOIN hiring ON hiring.shop_id = shop.shop_id GROUP BY shop.name ORDER BY COUNT(hiring.employee_id) DESC LIMIT 1

index is 284
before:
SELECT name FROM shop GROUP BY name ORDER BY count(*) DESC LIMIT 1
after:
SELECT shop.Name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Name ORDER BY COUNT(hiring.Employee_ID) DESC LIMIT 1

index is 285
before:
SELECT name FROM shop WHERE NOT EXISTS (SELECT * FROM hiring WHERE shop.shop_id  =  hiring.shop_id)
after:
SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)

index is 286
before:
SELECT name FROM shop WHERE NOT EXISTS (SELECT * FROM hiring WHERE shop.Shop_ID  =  hiring.Shop_ID)
after:
SELECT shop.Name FROM shop LEFT JOIN hiring ON shop.Shop_ID = hiring.Shop_ID WHERE hiring.Shop_ID IS NULL

index is 287
before:
SELECT COUNT(DISTINCT employee.Employee_ID), shop.Name FROM employee JOIN hiring ON employee.Employee_ID = hiring.Employee_ID JOIN shop ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Name
after:
SELECT COUNT(DISTINCT employee.Employee_ID) AS hired_employees, shop.Name FROM employee JOIN hiring ON employee.Employee_ID = hiring.Employee_ID JOIN shop ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Name

index is 288
before:
SELECT COUNT(employee.employee_id) , shop.name FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id JOIN employee ON hiring.employee_id = employee.employee_id GROUP BY shop.name
after:
SELECT COUNT(employee.employee_id) AS num_employees, shop.name FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id JOIN employee ON hiring.employee_id = employee.employee_id GROUP BY shop.shop_id, shop.name

index is 289
before:
SELECT sum(bonus) FROM evaluation
after:
SELECT SUM(Bonus) AS Total_Bonus FROM evaluation

index is 290
before:
SELECT sum(bonus) FROM evaluation
after:
SELECT SUM(Bonus) FROM evaluation

index is 291
before:
SELECT * FROM hiring
after:
SELECT * FROM hiring

index is 292
before:
SELECT * FROM hiring
after:
SELECT hiring.* FROM hiring

index is 293
before:
SELECT district FROM shop WHERE number_products  <  3000 AND number_products  >  10000 GROUP BY district
after:
SELECT shop.district FROM shop WHERE (shop.number_products < 3000 OR shop.number_products > 10000) GROUP BY shop.district

index is 294
before:
SELECT district FROM shop WHERE number_products  <  3000 AND number_products  >  10000 GROUP BY district
after:
SELECT DISTINCT district FROM shop WHERE number_products < 3000 OR number_products > 10000

index is 295
before:
SELECT count(DISTINCT location) FROM shop
after:
SELECT count(DISTINCT Location) FROM shop

index is 296
before:
SELECT COUNT(DISTINCT location) FROM shop
after:
SELECT COUNT(DISTINCT Location) FROM shop

index is 297
before:
SELECT count(*) FROM documents
after:
SELECT COUNT(*) FROM Documents

index is 298
before:
SELECT count(*) FROM documents
after:
SELECT count(*) FROM Documents

index is 299
before:
SELECT document_id ,  document_name ,  document_description FROM documents
after:
SELECT document_id, document_name, document_description  FROM documents

index is 300
before:
SELECT document_id , document_name , document_description FROM documents
after:
SELECT document_id, document_name, document_description FROM documents

index is 301
before:
SELECT document_name ,  template_id FROM documents WHERE document_description LIKE '%w%'
after:
SELECT document_name, template_id FROM documents WHERE document_description LIKE '%w%';

index is 302
before:
SELECT document_name , template_id FROM Documents WHERE document_description LIKE '%w%'
after:
SELECT document_name, template_id FROM Documents WHERE document_description LIKE '%w%';

index is 303
before:
SELECT document_id , template_id , document_description FROM documents WHERE document_name = "Robbin CV"
after:
SELECT documents.document_id, documents.template_id, documents.document_description FROM documents WHERE documents.document_name = "Robbin CV"

index is 304
before:
SELECT document_id, template_id, document_description FROM documents WHERE document_name = 'Robbin CV'
after:
SELECT document_id, template_id, document_description  FROM documents  WHERE document_name = 'Robbin CV'

index is 305
before:
SELECT COUNT(DISTINCT template_id) FROM templates JOIN documents ON templates.template_id = documents.template_id
after:
SELECT COUNT(DISTINCT templates.Template_ID) FROM templates JOIN documents ON templates.Template_ID = documents.Template_ID

index is 306
before:
SELECT count(DISTINCT template_id) FROM Templates
after:
SELECT COUNT(DISTINCT Template_ID) FROM Documents

index is 307
before:
SELECT count(DISTINCT document_id) FROM documents WHERE template_id = 'PPT'
after:
SELECT count(DISTINCT Document_ID) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'PPT'

index is 308
before:
SELECT count(*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT'
after:
SELECT COUNT(DISTINCT documents.Document_ID)  FROM documents  JOIN templates ON documents.Template_ID = templates.Template_ID  JOIN ref_template_types ON templates.Template_Type_Code = ref_template_types.Template_Type_Code  WHERE ref_template_types.Template_Type_Description = 'PPT'

index is 309
before:
SELECT template_id , COUNT(template_id) FROM documents GROUP BY template_id
after:
SELECT Templates.Template_ID, COUNT(Documents.Template_ID) FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID

index is 310
before:
SELECT template_id ,  COUNT(*) FROM documents GROUP BY template_id
after:
SELECT Templates.Template_ID, COUNT(Documents.Document_ID)  FROM Documents  JOIN Templates ON Documents.Template_ID = Templates.Template_ID  GROUP BY Templates.Template_ID

index is 311
before:
SELECT template_id , template_type_code FROM documents GROUP BY template_id ORDER BY count(template_id) DESC LIMIT 1
after:
SELECT Templates.Template_ID, Templates.Template_Type_Code FROM Templates JOIN Documents ON Documents.Template_ID = Templates.Template_ID GROUP BY Templates.Template_ID, Templates.Template_Type_Code ORDER BY COUNT(Documents.Document_ID) DESC LIMIT 1

index is 312
before:
SELECT template_id ,  template_type_code FROM templates WHERE template_id  =  (SELECT template_id FROM documents GROUP BY template_id ORDER BY count(template_id) DESC LIMIT 1)
after:
SELECT Templates.Template_ID, Templates.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID, Templates.Template_Type_Code ORDER BY COUNT(Documents.Document_ID) DESC LIMIT 1

index is 313
before:
SELECT template_id FROM templates GROUP BY template_id HAVING count(*) > 1
after:
SELECT Templates.Template_ID  FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID HAVING COUNT(DISTINCT Documents.Document_ID) > 1

index is 314
before:
SELECT template_id FROM templates GROUP BY template_id HAVING COUNT(*) > 1
after:
SELECT Templates.Template_ID FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID HAVING COUNT(DISTINCT Documents.Document_ID) > 1

index is 315
before:
SELECT template_id FROM templates WHERE template_id NOT IN (SELECT template_id FROM documents)
after:
SELECT templates.template_id  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id WHERE documents.document_id IS NULL

index is 316
before:
SELECT template_id FROM templates WHERE template_id NOT IN (SELECT template_id FROM documents)
after:
SELECT Templates.Template_ID  FROM Templates  LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Template_ID IS NULL

index is 317
before:
SELECT count(*) FROM templates
after:
SELECT COUNT(*) FROM Templates

index is 318
before:
SELECT count(*) FROM templates
after:
SELECT COUNT(*) FROM Templates

index is 319
before:
SELECT template_id ,  version_number ,  template_type_code FROM templates
after:
SELECT templates.template_id, templates.version_number, templates.template_type_code FROM templates

index is 320
before:
SELECT template_id ,  version_number ,  template_type_code FROM templates
after:
SELECT templates.template_id, templates.version_number, templates.template_type_code FROM templates

index is 321
before:
SELECT DISTINCT template_type_code FROM templates
after:
SELECT DISTINCT Template_Type_Code FROM Templates

index is 322
before:
SELECT DISTINCT template_type_code FROM ref_template_types
after:
SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types

index is 323
before:
SELECT template_id FROM templates WHERE template_type_code  =  'PP' OR template_type_code  =  'PPT'
after:
SELECT templates.template_id FROM templates WHERE templates.template_type_code = 'PP' OR templates.template_type_code = 'PPT'

index is 324
before:
SELECT template_id FROM templates WHERE template_type_code IN ('PP', 'PPT')
after:
SELECT templates.template_id  FROM templates  WHERE templates.template_type_code IN ('PP', 'PPT')

index is 325
before:
SELECT count(template_id) FROM templates WHERE template_type_code = 'CV'
after:
SELECT COUNT(Template_ID) FROM Templates WHERE Template_Type_Code = 'CV'

index is 326
before:
SELECT count(template_id) FROM templates WHERE template_type_code = 'CV'
after:
SELECT COUNT(Template_ID) FROM Templates WHERE Template_Type_Code = 'CV'

index is 327
before:
SELECT version_number , template_type_code FROM templates WHERE version_number > 5
after:
SELECT Templates.Version_Number, Templates.Template_Type_Code  FROM Templates  WHERE Templates.Version_Number > 5

index is 328
before:
SELECT version_number , template_type_code FROM templates WHERE version_number > 5
after:
SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 5

index is 329
before:
SELECT template_type_code ,  COUNT(template_id) FROM ref_template_types JOIN templates ON ref_template_types.template_type_code  =  templates.template_type_code GROUP BY template_type_code
after:
SELECT template_type_code, COUNT(template_id)  FROM ref_template_types  JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  GROUP BY template_type_code

index is 330
before:
SELECT template_type_code , COUNT(template_id) FROM ref_template_types JOIN templates ON templates.template_type_code  =  ref_template_types.template_type_code GROUP BY ref_template_types.template_type_code
after:
SELECT ref_template_types.template_type_code, COUNT(templates.template_id)  FROM ref_template_types  JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  GROUP BY ref_template_types.template_type_code

index is 331
before:
SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
after:
SELECT template_type_code, COUNT(*) AS template_count FROM templates GROUP BY template_type_code ORDER BY template_count DESC LIMIT 1

index is 332
before:
SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
after:
SELECT Ref_Template_Types.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1

index is 333
before:
SELECT template_type_code FROM ref_template_types GROUP BY template_type_code HAVING count(*) < 3
after:
SELECT template_type_code FROM Ref_Template_Types GROUP BY template_type_code HAVING COUNT(Template_ID) < 3

index is 334
before:
SELECT template_type_code FROM templates GROUP BY template_type_code HAVING count(template_id)  <  3
after:
SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT(template_id) < 3

index is 335
before:
SELECT MIN(version_number) ,  template_type_code FROM templates
after:
SELECT MIN(Version_Number) AS Smallest_Version_Number, Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY Smallest_Version_Number ASC LIMIT 1

index is 336
before:
SELECT version_number ,  template_type_code FROM templates ORDER BY version_number LIMIT 1
after:
SELECT Templates.Version_Number, Templates.Template_Type_Code  FROM Templates  ORDER BY Templates.Version_Number ASC  LIMIT 1

index is 337
before:
SELECT template_type_code FROM templates JOIN documents ON templates.template_id = documents.template_id WHERE documents.document_name = "Data base"
after:
SELECT Ref_Template_Types.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = "Data base"

index is 338
before:
SELECT template_type_code FROM templates WHERE template_id = (SELECT template_id FROM documents WHERE document_name = 'Data base')
after:
SELECT template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  WHERE documents.document_name = 'Data base'

index is 339
before:
SELECT document_name FROM templates JOIN documents ON templates.template_id = documents.template_id WHERE templates.template_type_code = 'BK'
after:
SELECT documents.document_name  FROM templates  JOIN documents ON templates.template_id = documents.template_id  WHERE templates.template_type_code = 'BK'

index is 340
before:
SELECT document_name FROM documents WHERE template_id = (SELECT template_id FROM templates WHERE template_type_code = 'BK')
after:
SELECT documents.document_name FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'BK'

index is 341
before:
SELECT T1.template_type_code , count(T3.document_id) FROM ref_template_types AS T1 JOIN templates AS T2 ON T1.template_type_code = T2.template_type_code JOIN documents AS T3 ON T2.template_id = T3.template_id GROUP BY T1.template_type_code
after:
SELECT T1.template_type_code, COUNT(T3.document_id) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID GROUP BY T1.template_type_code

index is 342
before:
SELECT template_type_code ,  COUNT(*) FROM ref_template_types JOIN documents ON ref_template_types.template_type_code  =  documents.template_id GROUP BY ref_template_types.template_type_code
after:
SELECT ref_template_types.template_type_code, COUNT(DISTINCT documents.document_id) AS document_count FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id GROUP BY ref_template_types.template_type_code

index is 343
before:
SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY count(document_id) DESC LIMIT 1
after:
SELECT template_type_code, COUNT(document_id) AS document_count FROM templates GROUP BY template_type_code ORDER BY document_count DESC LIMIT 1

index is 344
before:
SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
after:
SELECT Ref_Template_Types.Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code GROUP BY Ref_Template_Types.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1

index is 345
before:
SELECT template_type_code FROM ref_template_types WHERE template_type_code NOT IN (SELECT template_id FROM documents)
after:
SELECT template_type_code  FROM ref_template_types  WHERE template_type_code NOT IN (SELECT DISTINCT template_type_code FROM templates)

index is 346
before:
SELECT template_type_code FROM ref_template_types WHERE template_type_code NOT IN (SELECT Template_ID FROM Documents)
after:
SELECT ref_template_types.template_type_code  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code WHERE templates.template_type_code IS NULL

index is 347
before:
SELECT template_type_code ,  template_type_description FROM ref_template_types
after:
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types

index is 348
before:
SELECT template_type_code ,  template_type_description FROM ref_template_types
after:
SELECT template_type_code, template_type_description FROM ref_template_types

index is 349
before:
SELECT template_type_description FROM ref_template_types WHERE template_type_code = "AD"
after:
SELECT template_type_description FROM Ref_Template_Types WHERE Template_Type_Code = "AD"

index is 350
before:
SELECT template_type_description FROM ref_template_types WHERE template_type_code  =  'AD'
after:
SELECT template_type_description  FROM Ref_Template_Types  WHERE Template_Type_Code = 'AD'

index is 351
before:
SELECT template_type_code FROM ref_template_types WHERE template_type_description = "Book"
after:
SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = "Book"

index is 352
before:
SELECT template_type_code FROM ref_template_types WHERE template_type_description = "Book"
after:
SELECT template_type_code  FROM ref_template_types  WHERE template_type_description = "Book"

index is 353
before:
SELECT DISTINCT template_type_description FROM ref_template_types
after:
SELECT DISTINCT ref_template_types.template_type_description FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id

index is 354
before:
SELECT DISTINCT template_details FROM templates
after:
SELECT DISTINCT templates.Template_Details FROM templates JOIN documents ON templates.Template_ID = documents.Template_ID JOIN paragraphs ON documents.Document_ID = paragraphs.Document_ID

index is 355
before:
SELECT template_id FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE ref_template_types.template_type_description = "Presentation"
after:
SELECT templates.template_id  FROM templates  JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = "Presentation"

index is 356
before:
SELECT template_id FROM templates WHERE template_type_code = (SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Presentation')
after:
SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation'

index is 357
before:
SELECT count(paragraph_id) FROM paragraphs
after:
SELECT COUNT(paragraph_id) AS total_paragraphs FROM paragraphs

index is 358
before:
SELECT COUNT(*) FROM paragraphs
after:
SELECT COUNT(Paragraph_ID) FROM Paragraphs

index is 359
before:
SELECT count(*) FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id WHERE documents.document_name = 'Summer Show'
after:
SELECT count(paragraphs.Paragraph_ID) FROM paragraphs JOIN documents ON paragraphs.Document_ID = documents.Document_ID WHERE documents.Document_Name = 'Summer Show'

index is 360
before:
SELECT count(paragraph_id) FROM paragraphs WHERE document_id IN (SELECT document_id FROM documents WHERE document_name = 'Summer Show')
after:
SELECT COUNT(Paragraph_ID)  FROM Paragraphs WHERE Document_ID = (   SELECT Document_ID    FROM Documents    WHERE Document_Name = 'Summer Show' )

index is 361
before:
SELECT * FROM paragraphs WHERE paragraph_text  =  'Korea'
after:
SELECT Paragraphs.*  FROM Paragraphs  WHERE Paragraphs.Paragraph_Text = 'Korea'

index is 362
before:
SELECT * FROM paragraphs WHERE paragraph_text LIKE '%Korea%'
after:
SELECT Paragraph_ID, Document_ID, Paragraph_Text, Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'

index is 363
before:
SELECT paragraph_id ,  paragraph_text FROM paragraphs WHERE document_id  =  (SELECT document_id FROM documents WHERE document_name  =  'Welcome to NY')
after:
SELECT paragraph_id, paragraph_text  FROM Paragraphs  WHERE document_id = (   SELECT document_id    FROM Documents    WHERE document_name = 'Welcome to NY' )

index is 364
before:
SELECT paragraph_id , paragraph_text FROM paragraphs JOIN documents ON paragraphs.document_id  =  documents.document_id WHERE documents.document_name  =  'Welcome to NY'
after:
SELECT paragraph_id, paragraph_text FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id WHERE documents.document_name = 'Welcome to NY'

index is 365
before:
SELECT paragraph_text FROM paragraphs WHERE document_id = (SELECT document_id FROM documents WHERE document_name = "Customer reviews")
after:
SELECT Paragraph_Text  FROM Paragraphs  WHERE Document_ID = (   SELECT Document_ID    FROM Documents    WHERE Document_Name = "Customer reviews" )

index is 366
before:
SELECT paragraph_text FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id WHERE documents.document_name = 'Customer reviews'
after:
SELECT paragraph_text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = 'Customer reviews'

index is 367
before:
SELECT document_id ,  COUNT(paragraph_id) FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY documents.document_id
after:
SELECT documents.document_id, COUNT(paragraphs.paragraph_id) FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY documents.document_id

index is 368
before:
SELECT document_id ,  COUNT(paragraph_id) FROM paragraphs GROUP BY document_id ORDER BY document_id
after:
SELECT Documents.Document_ID, COUNT(Paragraphs.Paragraph_ID) FROM Documents INNER JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID ORDER BY Documents.Document_ID

index is 369
before:
SELECT document_id ,  document_name ,  COUNT(paragraph_id) FROM documents JOIN paragraphs ON documents.document_id  =  paragraphs.document_id GROUP BY documents.document_id ,  documents.document_name
after:
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name

index is 370
before:
SELECT documents.document_id ,  documents.document_name ,  count(paragraphs.paragraph_id) FROM documents JOIN paragraphs ON documents.document_id  =  paragraphs.document_id GROUP BY documents.document_id, documents.document_name
after:
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS num_paragraphs FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name

index is 371
before:
SELECT document_id FROM paragraphs GROUP BY document_id HAVING count(*) > 1
after:
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(*) > 1

index is 372
before:
SELECT document_id FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id HAVING count(paragraph_id) >= 2
after:
SELECT documents.document_id FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  HAVING COUNT(paragraphs.paragraph_id) >= 2

index is 373
before:
SELECT document_id ,  document_name FROM documents JOIN paragraphs ON documents.document_id  =  paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY count(*) DESC LIMIT 1
after:
SELECT documents.document_id, documents.document_name  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY COUNT(paragraphs.paragraph_id) DESC  LIMIT 1

index is 374
before:
SELECT document_id ,  document_name FROM documents ORDER BY (SELECT count(*) FROM paragraphs WHERE paragraphs.document_id  =  documents.document_id) DESC LIMIT 1
after:
SELECT document_id, document_name  FROM documents  ORDER BY (SELECT COUNT(*) FROM paragraphs WHERE paragraphs.document_id = documents.document_id) DESC  LIMIT 1

index is 375
before:
SELECT document_id FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY count(paragraphs.paragraph_id) ASC LIMIT 1
after:
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY COUNT(paragraphs.paragraph_id) ASC  LIMIT 1

index is 376
before:
SELECT document_id FROM documents GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
after:
SELECT documents.document_id FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY COUNT(paragraphs.paragraph_id) ASC LIMIT 1

index is 377
before:
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(DISTINCT paragraph_id) >= 1 AND COUNT(DISTINCT paragraph_id) <= 2
after:
SELECT Documents.Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID HAVING COUNT(DISTINCT Paragraphs.Paragraph_ID) >= 1 AND COUNT(DISTINCT Paragraphs.Paragraph_ID) <= 2

index is 378
before:
SELECT document_id FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id HAVING count(paragraph_id) >= 1 AND count(paragraph_id) <= 2
after:
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  HAVING count(paragraphs.paragraph_id) >= 1 AND count(paragraphs.paragraph_id) <= 2

index is 379
before:
SELECT document_id FROM paragraphs WHERE paragraph_text IN ('Brazil', 'Ireland')
after:
SELECT document_id  FROM paragraphs  WHERE paragraph_text IN ('Brazil', 'Ireland')

index is 380
before:
SELECT DISTINCT document_id FROM paragraphs WHERE paragraph_text = 'Brazil' AND document_id IN (SELECT document_id FROM paragraphs WHERE paragraph_text = 'Ireland')
after:
SELECT DISTINCT document_id  FROM paragraphs  WHERE paragraph_text IN ('Brazil', 'Ireland')

index is 381
before:
SELECT count(teacher_id) FROM teacher
after:
SELECT COUNT(Teacher_ID) FROM teacher

index is 382
before:
SELECT count(Teacher_ID) FROM teacher
after:
SELECT count(*) FROM teacher

index is 383
before:
SELECT name FROM teacher ORDER BY age ASC
after:
SELECT teacher.Name FROM teacher ORDER BY teacher.Age ASC

index is 384
before:
SELECT name FROM teacher ORDER BY age ASC
after:
SELECT teacher.Name FROM teacher ORDER BY teacher.Age ASC

index is 385
before:
SELECT age ,  hometown FROM teacher
after:
SELECT Age, Hometown FROM teacher

index is 386
before:
SELECT age, hometown FROM teacher
after:
SELECT teacher.Age, teacher.Hometown FROM teacher

index is 387
before:
SELECT name FROM teacher WHERE hometown != 'Little Lever Urban District'
after:
SELECT name FROM teacher WHERE hometown != 'Little Lever Urban District'

index is 388
before:
SELECT name FROM teacher WHERE hometown != 'Little Lever Urban District'
after:
SELECT name  FROM teacher  WHERE hometown <> 'Little Lever Urban District'

index is 389
before:
SELECT name FROM teacher WHERE age = 32 OR age = 33
after:
SELECT teacher.Name FROM teacher WHERE teacher.Age IN (32, 33)

index is 390
before:
SELECT name FROM teacher WHERE age  =  32 OR age  =  33
after:
SELECT teacher.Name  FROM teacher  WHERE teacher.Age IN (32, 33)

index is 391
before:
SELECT hometown FROM teacher ORDER BY age LIMIT 1
after:
SELECT teacher.Hometown  FROM teacher ORDER BY teacher.Age ASC  LIMIT 1

index is 392
before:
SELECT hometown FROM teacher ORDER BY age ASC LIMIT 1
after:
SELECT teacher.Hometown FROM teacher ORDER BY teacher.Age ASC LIMIT 1

index is 393
before:
SELECT DISTINCT hometown , count(*) FROM teacher GROUP BY hometown
after:
SELECT hometown, COUNT(*)  FROM teacher  GROUP BY hometown

index is 394
before:
SELECT hometown ,  count(DISTINCT teacher_id) FROM teacher GROUP BY hometown
after:
SELECT hometown, COUNT(DISTINCT Teacher_ID)  FROM teacher  GROUP BY hometown

index is 395
before:
SELECT hometown FROM teacher GROUP BY hometown ORDER BY count(*) DESC LIMIT 1
after:
SELECT teacher.Hometown  FROM teacher  GROUP BY teacher.Hometown  ORDER BY COUNT(*) DESC  LIMIT 1

index is 396
before:
SELECT hometown FROM teacher GROUP BY hometown ORDER BY count(*) DESC LIMIT 1
after:
SELECT teacher.hometown FROM teacher GROUP BY teacher.hometown ORDER BY COUNT(*) DESC LIMIT 1

index is 397
before:
SELECT hometown FROM teacher GROUP BY hometown HAVING count(DISTINCT teacher_id) > 1
after:
SELECT hometown FROM teacher GROUP BY hometown HAVING COUNT(DISTINCT Teacher_ID) > 1

index is 398
before:
SELECT hometown FROM teacher GROUP BY hometown HAVING count(DISTINCT teacher_id) >= 2
after:
SELECT hometown FROM teacher GROUP BY hometown HAVING COUNT(DISTINCT teacher_id) >= 2

index is 399
before:
SELECT teacher.name , course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id
after:
SELECT teacher.Name, course.Course FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID

index is 400
before:
SELECT teacher.name , course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id
after:
SELECT teacher.Name, course.Course FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID

index is 401
before:
SELECT name , course FROM teacher JOIN course_arrange ON teacher.teacher_id  =  course_arrange.teacher_id JOIN course ON course_arrange.course_id  =  course.course_id ORDER BY name ASC
after:
SELECT teacher.Name, course.Course FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID ORDER BY teacher.Name ASC

index is 402
before:
SELECT teacher.name , course.course FROM teacher JOIN course_arrange ON teacher.teacher_id  =  course_arrange.teacher_id JOIN course ON course.course_id  =  course_arrange.course_id ORDER BY teacher.name ASC
after:
SELECT teacher.Name, course.Course FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course.Course_ID = course_arrange.Course_ID ORDER BY teacher.Name ASC

index is 403
before:
SELECT name FROM teacher WHERE teacher_id IN (SELECT teacher_id FROM course_arrange WHERE course_id IN (SELECT course_id FROM course WHERE course = 'Math'))
after:
SELECT name FROM teacher WHERE teacher_id IN (   SELECT teacher_id   FROM course_arrange   WHERE course_id IN (     SELECT course_id     FROM course     WHERE course = 'Math'   ) )

index is 404
before:
SELECT name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'Math'
after:
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'Math'

index is 405
before:
SELECT name ,  COUNT(*) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY name
after:
SELECT name, COUNT(*) AS course_count FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY name

index is 406
before:
SELECT name ,  COUNT(*) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY name
after:
SELECT T1.name, COUNT(*) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.name

index is 407
before:
SELECT name FROM teacher GROUP BY name HAVING count(*)  >  1
after:
SELECT name  FROM teacher  JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY teacher.Teacher_ID, teacher.Name HAVING COUNT(DISTINCT course_arrange.Course_ID) >= 2

index is 408
before:
SELECT name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY name HAVING count(*) >= 2
after:
SELECT name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY teacher.Teacher_ID, teacher.Name HAVING count(DISTINCT course_arrange.Course_ID) >= 2

index is 409
before:
SELECT name FROM teacher WHERE teacher_id NOT IN (SELECT teacher_id FROM course_arrange)
after:
SELECT name FROM teacher WHERE teacher_id NOT IN (SELECT DISTINCT teacher_id FROM course_arrange)

index is 410
before:
SELECT name FROM teacher WHERE teacher_id NOT IN (SELECT teacher_id FROM course_arrange)
after:
SELECT teacher.Name FROM teacher WHERE teacher.Teacher_ID NOT IN (SELECT course_arrange.Teacher_ID FROM course_arrange)

index is 411
before:
SELECT count(*) FROM visitor WHERE age < 30
after:
SELECT count(*) FROM visitor WHERE Age < 30

index is 412
before:
SELECT name FROM visitor WHERE level_of_membership  >  4 ORDER BY level_of_membership DESC
after:
SELECT visitor.Name FROM visitor WHERE visitor.Level_of_membership > 4 ORDER BY visitor.Level_of_membership DESC

index is 413
before:
SELECT avg(age) FROM visitor WHERE level_of_membership <= 4
after:
SELECT avg(Age) FROM visitor WHERE Level_of_membership <= 4

index is 414
before:
SELECT name , level_of_membership FROM visitor WHERE level_of_membership  >  4 ORDER BY age ASC
after:
SELECT visitor.Name, visitor.Level_of_membership FROM visitor WHERE visitor.Level_of_membership > 4 ORDER BY visitor.Age ASC

index is 415
before:
SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1
after:
SELECT museum_id, name FROM museum ORDER BY num_of_staff DESC LIMIT 1

index is 416
before:
SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2009
after:
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < 2009

index is 417
before:
SELECT open_year , num_of_staff FROM museum WHERE name = 'Plaza Museum'
after:
SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'

index is 418
before:
SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)
after:
SELECT name  FROM museum  WHERE num_of_staff > (SELECT MIN(num_of_staff) FROM museum WHERE open_year > 2010)

index is 419
before:
SELECT id , name , age FROM visitor GROUP BY id , name , age HAVING count(*)  >  1
after:
SELECT visitor.ID, visitor.Name, visitor.Age  FROM visitor  JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID, visitor.Name, visitor.Age HAVING COUNT(DISTINCT visit.Museum_ID) > 1

index is 420
before:
SELECT id, name, level_of_membership FROM visitor WHERE id IN (SELECT visitor_id FROM visit GROUP BY visitor_id HAVING sum(total_spent) = (SELECT max(total_spent) FROM visit))
after:
SELECT visitor.ID, visitor.Name, visitor.Level_of_membership FROM visitor WHERE visitor.ID IN (     SELECT visit.visitor_ID     FROM visit     GROUP BY visit.visitor_ID     HAVING SUM(visit.Total_spent) = (         SELECT MAX(total_spent)         FROM visit     ) )

index is 421
before:
SELECT museum_id ,  name FROM museum GROUP BY museum_id , name ORDER BY count(*) DESC LIMIT 1
after:
SELECT

index is 422
before:
SELECT name FROM museum WHERE NOT EXISTS (SELECT * FROM visit WHERE museum.Museum_ID = visit.Museum_ID)
after:
SELECT name  FROM museum  WHERE Museum_ID NOT IN (SELECT Museum_ID FROM visit)

index is 423
before:
SELECT name ,  age FROM visitor ORDER BY num_of_ticket DESC LIMIT 1
after:
SELECT visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.Name, visitor.Age ORDER BY visit.Num_of_Ticket DESC LIMIT 1

index is 424
before:
SELECT avg(num_of_ticket) , max(num_of_ticket) FROM visit
after:
SELECT avg(Num_of_Ticket), max(Num_of_Ticket) FROM visit

index is 425
before:
SELECT sum(total_spent) FROM visit WHERE visitor_ID IN (SELECT ID FROM visitor WHERE Level_of_membership = 1)
after:
SELECT SUM(visit.Total_spent)  FROM visit  INNER JOIN visitor ON visit.visitor_ID = visitor.ID  WHERE visitor.Level_of_membership = 1

index is 426
before:
SELECT DISTINCT T1.name FROM visitor AS T1 WHERE T1.id IN (SELECT T2.visitor_ID FROM visit AS T2 WHERE T2.Museum_ID IN (SELECT T3.Museum_ID FROM museum AS T3 WHERE T3.Open_Year < 2009)) AND T1.id IN (SELECT T4.visitor_ID FROM visit AS T4 WHERE T4.Museum_ID IN (SELECT T5.Museum_ID FROM museum AS T5 WHERE T5.Open_Year > 2011))
after:
SELECT DISTINCT T1.Name  FROM visitor AS T1  WHERE T1.ID IN (     SELECT T2.visitor_ID      FROM visit AS T2      JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID      WHERE T3.Open_Year < 2009 )  AND T1.ID IN (     SELECT T4.visitor_ID      FROM visit AS T4      JOIN museum AS T5 ON T4.Museum_ID = T5.Museum_ID      WHERE T5.Open_Year > 2011 )

index is 427
before:
SELECT count(DISTINCT visitor_id) FROM visit WHERE museum_id NOT IN (SELECT museum_id FROM museum WHERE open_year > 2010)
after:
SELECT COUNT(DISTINCT visitor_ID) FROM visit LEFT JOIN museum ON visit.Museum_ID = museum.Museum_ID WHERE museum.Open_Year <= 2010 AND museum.Museum_ID IS NULL

index is 428
before:
SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008
after:
SELECT COUNT(*) FROM museum WHERE Open_Year > 2013 OR Open_Year < 2008

index is 429
before:
SELECT count(*) FROM players
after:
SELECT count(player_id) FROM players

index is 430
before:
SELECT count(*) FROM players
after:
SELECT count(player_id) FROM players

index is 431
before:
SELECT count(*) FROM matches
after:
SELECT count(*) FROM matches

index is 432
before:
SELECT count(*) FROM matches
after:
SELECT COUNT(*) FROM matches

index is 433
before:
SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
after:
SELECT first_name, birth_date FROM players WHERE country_code = 'USA'

index is 434
before:
SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
after:
SELECT first_name, birth_date  FROM players  WHERE country_code = 'USA'

index is 435
before:
SELECT avg(loser_age) , avg(winner_age) FROM matches
after:
SELECT avg(loser_age), avg(winner_age) FROM matches

index is 436
before:
SELECT avg(loser_age) , avg(winner_age) FROM matches
after:
SELECT avg(loser_age) AS average_loser_age, avg(winner_age) AS average_winner_age FROM matches

index is 437
before:
SELECT avg(winner_rank) FROM matches
after:
SELECT avg(winner_rank) FROM matches

index is 438
before:
SELECT AVG(winner_rank) FROM matches
after:
SELECT AVG(winner_rank) FROM matches

index is 439
before:
SELECT MAX(loser_rank) FROM matches
after:
SELECT MAX(loser_rank) AS highest_rank FROM matches

index is 440
before:
SELECT max(loser_rank) FROM matches
after:
SELECT max(loser_rank) AS best_rank_of_losers FROM matches

index is 441
before:
SELECT count(DISTINCT country_code) FROM players
after:
SELECT COUNT(DISTINCT country_code) FROM players

index is 442
before:
SELECT count(DISTINCT country_code) FROM players
after:
SELECT COUNT(DISTINCT country_code) FROM players

index is 443
before:
SELECT count(DISTINCT loser_name) FROM matches
after:
SELECT COUNT(DISTINCT loser_name) AS distinct_loser_count FROM matches

index is 444
before:
SELECT count(DISTINCT loser_name) FROM matches
after:
SELECT count(DISTINCT loser_name) FROM matches

index is 445
before:
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(match_num)  >  10
after:
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10

index is 446
before:
SELECT DISTINCT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10
after:
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10

index is 447
before:
SELECT DISTINCT winner_name FROM matches WHERE year = 2013 AND winner_name IN (SELECT winner_name FROM matches WHERE year = 2016)
after:
SELECT DISTINCT winner_name  FROM matches  WHERE winner_id IN (     SELECT winner_id      FROM matches      WHERE year = 2013 )  AND winner_id IN (     SELECT winner_id      FROM matches      WHERE year = 2016 )

index is 448
before:
SELECT DISTINCT T1.first_name ,  T1.last_name FROM players AS T1 WHERE (SELECT count(*) FROM matches AS T2 WHERE T2.year  =  2013 AND T2.winner_id  =  T1.player_id) > 0 AND (SELECT count(*) FROM matches AS T3 WHERE T3.year  =  2016 AND T3.winner_id  =  T1.player_id) > 0
after:
SELECT T1.first_name, T1.last_name FROM players AS T1 WHERE T1.player_id IN (   SELECT T2.winner_id   FROM matches AS T2   WHERE T2.year = 2013 ) AND T1.player_id IN (   SELECT T3.winner_id   FROM matches AS T3   WHERE T3.year = 2016 )

index is 449
before:
SELECT count(*) FROM matches WHERE year = 2013 OR year = 2016
after:
SELECT count(*) FROM matches WHERE year = 2013 OR year = 2016

index is 450
before:
SELECT count(*) FROM matches WHERE year  =  2013 OR year  =  2016
after:
SELECT count(*) FROM matches WHERE year = 2013 OR year = 2016

index is 451
before:
SELECT country_code ,  first_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'Australian Open' AND matches.tourney_name = 'WTA Championships'
after:
SELECT players.country_code, players.first_name  FROM players  JOIN matches ON players.player_id = matches.winner_id  WHERE matches.tourney_name IN ('Australian Open', 'WTA Championships')

index is 452
before:
SELECT first_name ,  country_code FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE tourney_name = 'Australian Open') AND player_id IN (SELECT winner_id FROM matches WHERE tourney_name = 'WTA Championships')
after:
SELECT players.first_name, players.country_code FROM players INNER JOIN matches AS m1 ON players.player_id = m1.winner_id INNER JOIN matches AS m2 ON players.player_id = m2.winner_id WHERE m1.tourney_name = 'Australian Open' AND m2.tourney_name = 'WTA Championships'

index is 453
before:
SELECT first_name ,  country_code FROM players WHERE birth_date  =  (SELECT min(birth_date) FROM players)
after:
SELECT players.first_name, players.country_code FROM players WHERE players.birth_date = (SELECT MIN(players.birth_date) FROM players)

index is 454
before:
SELECT first_name , country_code FROM players ORDER BY birth_date LIMIT 1
after:
SELECT players.first_name, players.country_code  FROM players  ORDER BY players.birth_date  LIMIT 1

index is 455
before:
SELECT first_name ,  last_name FROM players ORDER BY birth_date
after:
SELECT first_name, last_name FROM players ORDER BY birth_date

index is 456
before:
SELECT first_name , last_name FROM players ORDER BY birth_date
after:
SELECT first_name || ' ' || last_name AS full_name FROM players ORDER BY birth_date

index is 457
before:
SELECT first_name , last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
after:
SELECT players.first_name, players.last_name  FROM players  WHERE players.hand = 'L'  ORDER BY players.birth_date

index is 458
before:
SELECT first_name , last_name FROM players WHERE hand = 'left' ORDER BY birth_date
after:
SELECT first_name, last_name FROM players WHERE hand = 'left' ORDER BY birth_date

index is 459
before:
SELECT first_name ,  country_code FROM players WHERE player_id  =  (SELECT player_id FROM rankings WHERE tours  =  (SELECT max(tours) FROM rankings))
after:
SELECT players.first_name, players.country_code  FROM players  WHERE player_id = (   SELECT player_id    FROM rankings    WHERE tours = (     SELECT max(tours)      FROM rankings   ) )

index is 460
before:
SELECT first_name ,  country_code FROM players ORDER BY tours DESC LIMIT 1
after:
SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT(rankings.tours) DESC LIMIT 1

index is 461
before:
SELECT year FROM matches GROUP BY year ORDER BY count(match_num) DESC LIMIT 1
after:
SELECT matches.year FROM matches  GROUP BY matches.year  ORDER BY COUNT(matches.match_num) DESC  LIMIT 1

index is 462
before:
SELECT year FROM matches GROUP BY year ORDER BY count(*) DESC LIMIT 1
after:
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1

index is 463
before:
SELECT winner_name , winner_rank_points FROM matches GROUP BY winner_name , winner_rank_points ORDER BY count(*) DESC LIMIT 1
after:
SELECT winner_name, SUM(winner_rank_points) AS total_rank_points FROM matches JOIN players ON matches.winner_id = players.player_id GROUP BY winner_name ORDER BY COUNT(*) DESC LIMIT 1

index is 464
before:
SELECT winner_name ,  max(winner_rank_points) FROM matches GROUP BY winner_name ORDER BY max(winner_rank_points) DESC LIMIT 1
after:
SELECT winner_name, max(winner_rank_points)  FROM matches  GROUP BY winner_name  ORDER BY max(winner_rank_points) DESC  LIMIT 1

index is 465
before:
SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' AND winner_rank_points  =  (SELECT max(winner_rank_points) FROM matches WHERE tourney_name  =  'Australian Open')
after:
SELECT matches.winner_name FROM matches WHERE tourney_name = 'Australian Open' AND winner_rank_points = (   SELECT MAX(winner_rank_points)   FROM matches   WHERE tourney_name = 'Australian Open' )

index is 466
before:
SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
after:
SELECT matches.winner_name FROM matches JOIN players ON matches.winner_id = players.player_id WHERE matches.tourney_name = 'Australian Open' ORDER BY matches.winner_rank_points DESC LIMIT 1

index is 467
before:
SELECT winner_name ,  loser_name FROM matches WHERE minutes  =  (SELECT max(minutes) FROM matches)
after:
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)

index is 468
before:
SELECT winner_name ,  loser_name FROM matches WHERE minutes  =  (SELECT max(minutes) FROM matches)
after:
SELECT matches.winner_name, matches.loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)

index is 469
before:
SELECT avg(ranking) ,  first_name FROM players JOIN rankings ON players.player_id  =  rankings.player_id GROUP BY first_name
after:
SELECT avg(rankings.ranking) AS average_ranking, players.first_name FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name

index is 470
before:
SELECT first_name ,  AVG (ranking) FROM players JOIN rankings ON players.player_id  =  rankings.player_id GROUP BY first_name
after:
SELECT players.first_name, AVG(rankings.ranking)  FROM players  JOIN rankings ON players.player_id = rankings.player_id  GROUP BY players.first_name

index is 471
before:
SELECT T1.first_name , sum(T2.ranking_points) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
after:
SELECT T1.first_name, SUM(T2.ranking_points) AS total_ranking_points FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name

index is 472
before:
SELECT first_name ,  SUM(ranking_points) FROM players JOIN rankings ON players.player_id  =  rankings.player_id GROUP BY first_name
after:
SELECT players.first_name, SUM(rankings.ranking_points)  FROM players  JOIN rankings ON players.player_id = rankings.player_id  GROUP BY players.first_name

index is 473
before:
SELECT country_code , count(*) FROM players GROUP BY country_code
after:
SELECT country_code, COUNT(*) FROM players GROUP BY country_code

index is 474
before:
SELECT country_code ,  count(*) FROM players GROUP BY country_code
after:
SELECT country_code, COUNT(*)  FROM players  GROUP BY country_code

index is 475
before:
SELECT country_code FROM players GROUP BY country_code ORDER BY count(player_id) DESC LIMIT 1
after:
SELECT country_code, COUNT(player_id) AS player_count FROM players GROUP BY country_code ORDER BY player_count DESC LIMIT 1

index is 476
before:
SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
after:
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code ORDER BY player_count DESC LIMIT 1

index is 477
before:
SELECT DISTINCT country_code FROM players GROUP BY country_code HAVING count(player_id) > 50
after:
SELECT DISTINCT country_code  FROM players  GROUP BY country_code  HAVING COUNT(player_id) > 50

index is 478
before:
SELECT DISTINCT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
after:
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50

index is 479
before:
SELECT ranking_date , sum(tours) FROM rankings GROUP BY ranking_date
after:
SELECT ranking_date, sum(tours)  FROM rankings  GROUP BY ranking_date

index is 480
before:
SELECT ranking_date ,  SUM(tours) FROM rankings GROUP BY ranking_date
after:
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date

index is 481
before:
SELECT year , count(*) FROM matches GROUP BY year
after:
SELECT year, COUNT(*)  FROM matches  GROUP BY year

index is 482
before:
SELECT year ,  COUNT(*) FROM matches GROUP BY year
after:
SELECT year, COUNT(*)  FROM matches  GROUP BY year

index is 483
before:
SELECT winner_name , winner_rank FROM matches ORDER BY winner_age ASC LIMIT 3
after:
SELECT players.first_name, players.last_name, rankings.ranking FROM matches JOIN players ON matches.winner_id = players.player_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY players.birth_date DESC LIMIT 3

index is 484
before:
SELECT winner_name ,  winner_rank FROM matches ORDER BY winner_age ASC LIMIT 3
after:
SELECT players.first_name, players.last_name, matches.winner_rank FROM matches JOIN players ON matches.winner_id = players.player_id ORDER BY matches.winner_age ASC LIMIT 3

index is 485
before:
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L'
after:
SELECT COUNT(DISTINCT winner_id) FROM matches  JOIN players ON matches.winner_id = players.player_id WHERE tourney_name = 'WTA Championships' AND players.hand = 'L'

index is 486
before:
SELECT count(player_id) FROM players JOIN matches ON players.player_id = matches.winner_id WHERE players.hand = 'L' AND matches.tourney_name = 'WTA Championships'
after:
SELECT COUNT(DISTINCT players.player_id)  FROM players  JOIN matches ON players.player_id = matches.winner_id  WHERE players.hand = 'L'  AND matches.tourney_name = 'WTA Championships'

index is 487
before:
SELECT first_name , country_code , birth_date FROM players WHERE player_id = (SELECT player_id FROM rankings WHERE ranking_points = (SELECT max(ranking_points) FROM rankings))
after:
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (     SELECT MAX(ranking_points)     FROM rankings ) LIMIT 1;

index is 488
before:
SELECT first_name ,  country_code ,  birth_date FROM players ORDER BY ranking_points DESC LIMIT 1
after:
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id ORDER BY rankings.ranking_points DESC LIMIT 1

index is 489
before:
SELECT hand ,  COUNT(player_id) FROM players GROUP BY hand
after:
SELECT hand, COUNT(*)  FROM players  GROUP BY hand

index is 490
before:
SELECT hand ,  COUNT(*) FROM players GROUP BY hand
after:
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand

index is 491
before:
SELECT count(*) FROM ship WHERE disposition_of_ship = 'Captured'
after:
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured'

index is 492
before:
SELECT name , tonnage FROM ship ORDER BY name DESC
after:
SELECT name, tonnage FROM ship ORDER BY name DESC, tonnage DESC

index is 493
before:

after:
SELECT battle.name, battle.date, battle.result FROM battle

index is 494
before:
SELECT MAX(killed) ,  MIN(killed) ,  battle.name FROM battle JOIN death ON battle.id  =  death.caused_by_ship_id GROUP BY battle.name
after:
SELECT MAX(death.killed), MIN(death.killed), battle.name  FROM battle  JOIN death ON battle.id = death.caused_by_ship_id  GROUP BY battle.name

index is 495
before:
SELECT AVG(injured) FROM death
after:
SELECT AVG(injured) FROM death

index is 496
before:
SELECT killed , injured FROM death JOIN ship ON death.caused_by_ship_id  =  ship.id WHERE ship.tonnage  =  't'
after:
SELECT death.killed, death.injured FROM death JOIN ship ON death.caused_by_ship_id = ship.id WHERE ship.tonnage = 't'

index is 497
before:
SELECT name , result FROM battle WHERE bulgarian_commander  !=  'Boril'
after:
SELECT name, result FROM battle WHERE bulgarian_commander != 'Boril'

index is 498
before:
SELECT DISTINCT battle.id ,  battle.name FROM battle JOIN ship ON battle.id  =  ship.lost_in_battle WHERE ship.ship_type  =  'Brig'
after:
SELECT battle.id, battle.name  FROM battle  JOIN ship ON battle.id = ship.lost_in_battle  WHERE ship.ship_type = 'Brig'

index is 499
before:
SELECT id, name FROM battle JOIN death ON battle.id = death.caused_by_ship_id GROUP BY id, name HAVING sum(killed) > 10
after:
SELECT id, name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id GROUP BY battle.id, battle.name HAVING sum(death.killed) > 10

index is 500
before:
SELECT id , name FROM ship GROUP BY id, name ORDER BY sum(injured) DESC LIMIT 1
after:
SELECT ship.id, ship.name FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY SUM(death.injured) DESC LIMIT 1

index is 501
before:
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'
after:
SELECT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'

index is 502
before:
SELECT count(DISTINCT result) FROM battle
after:
SELECT count(DISTINCT result) AS result_count FROM battle

index is 503
before:
SELECT count(*) FROM battle WHERE result = 'victory' AND id NOT IN (SELECT lost_in_battle FROM ship WHERE tonnage = '225')
after:
SELECT count(*)  FROM battle  WHERE result = 'victory'  AND id NOT IN (SELECT lost_in_battle FROM ship WHERE tonnage = '225')

index is 504
before:
SELECT name , date FROM battle WHERE id IN (SELECT lost_in_battle FROM ship WHERE name IN ('HMS Atalanta', 'Lettice'))
after:
SELECT name, date FROM battle WHERE id IN (   SELECT lost_in_battle   FROM ship   WHERE name IN ('HMS Atalanta', 'Lettice') )

index is 505
before:
SELECT name ,  result ,  bulgarian_commander FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')
after:
SELECT name, result, bulgarian_commander FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel')

index is 506
before:
SELECT note FROM death WHERE note LIKE '%East%'
after:
SELECT note FROM death WHERE note LIKE '%East%'

index is 507
before:
SELECT line_1, line_2 FROM addresses
after:
SELECT addresses.line_1, addresses.line_2 FROM addresses

index is 508
before:
SELECT line_1 ,  line_2 FROM addresses
after:
SELECT line_1, line_2  FROM Addresses

index is 509
before:
SELECT count(*) FROM courses
after:
SELECT count(*) FROM Courses

index is 510
before:
SELECT count(*) FROM courses
after:
SELECT count(*) FROM Courses

index is 511
before:
SELECT course_description FROM courses WHERE course_name = 'math'
after:
SELECT course_description FROM Courses WHERE course_name = 'math'

index is 512
before:
SELECT course_description FROM courses WHERE course_name = 'math'
after:
SELECT Courses.course_description FROM Courses WHERE Courses.course_name = 'math'

index is 513
before:
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
after:
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'

index is 514
before:
SELECT zip_postcode FROM addresses WHERE city  =  'Port Chelsea'
after:
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'

index is 515
before:
SELECT department_name ,  department_id FROM department GROUP BY department_id ORDER BY count(*) DESC LIMIT 1
after:
SELECT Departments.department_name, Departments.department_id FROM Departments JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id GROUP BY Departments.department_id ORDER BY COUNT(Degree_Programs.degree_program_id) DESC LIMIT 1

index is 516
before:
SELECT department_name ,  department_id FROM departments GROUP BY department_name ORDER BY count(*) DESC LIMIT 1
after:
SELECT departments.department_name, departments.department_id FROM departments JOIN degree_programs ON departments.department_id = degree_programs.department_id GROUP BY departments.department_id ORDER BY COUNT(degree_programs.degree_program_id) DESC LIMIT 1

index is 517
before:
SELECT count(DISTINCT department.department_id) FROM department JOIN degree_programs ON department.department_id = degree_programs.department_id
after:
SELECT COUNT(DISTINCT departments.department_id) FROM departments JOIN degree_programs ON departments.department_id = degree_programs.department_id

index is 518
before:
SELECT COUNT(DISTINCT department_id) FROM degree_programs
after:
SELECT COUNT(DISTINCT department_id) FROM Departments

index is 519
before:
SELECT COUNT(DISTINCT degree_summary_name) FROM degree_programs
after:
SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs

index is 520
before:
SELECT count(DISTINCT degree_program_id) FROM degree_programs
after:
SELECT count(DISTINCT degree_program_id) FROM Degree_Programs

index is 521
before:
SELECT count(DISTINCT degree_program_id) FROM degree_programs WHERE department_id  =  (SELECT department_id FROM departments WHERE department_name = 'engineering')
after:
SELECT count(DISTINCT degree_program_id)  FROM Degree_Programs  WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'engineering')

index is 522
before:
SELECT count(degree_program_id) FROM degree_programs JOIN departments ON degree_programs.department_id = departments.department_id WHERE departments.department_name = 'engineering'
after:
SELECT COUNT(Degree_Programs.degree_program_id)  FROM Degree_Programs  JOIN Departments ON Degree_Programs.department_id = Departments.department_id  WHERE Departments.department_name = 'engineering'

index is 523
before:
SELECT section_name ,  section_description FROM section
after:
SELECT Sections.section_name, Sections.section_description  FROM Sections

index is 524
before:
SELECT section_name , section_description FROM sections
after:
SELECT section_name, section_description  FROM Sections

index is 525
before:
SELECT course_name ,  course_id FROM courses GROUP BY course_name HAVING count(*)  <=  2
after:
SELECT Courses.course_name, Courses.course_id  FROM Courses  JOIN Sections ON Courses.course_id = Sections.course_id GROUP BY Courses.course_name, Courses.course_id  HAVING COUNT(Sections.section_id) <= 2

index is 526
before:
SELECT course_name ,  course_id FROM courses JOIN sections ON courses.course_id  =  sections.course_id GROUP BY course_name ,  course_id HAVING count(section_id) < 2
after:
SELECT courses.course_name, courses.course_id  FROM courses  LEFT JOIN sections ON courses.course_id = sections.course_id  GROUP BY courses.course_name, courses.course_id  HAVING COUNT(sections.section_id) < 2

index is 527
before:
SELECT section_name FROM sections ORDER BY section_name DESC
after:
SELECT sections.section_name  FROM sections  ORDER BY sections.section_name DESC

index is 528
before:
SELECT section_name FROM sections ORDER BY section_name DESC
after:
SELECT section_name  FROM Sections  ORDER BY section_name DESC

index is 529
before:
SELECT semester_name, semester_id FROM semesters JOIN student_enrolment ON semesters.semester_id = student_enrolment.semester_id GROUP BY semester_name, semester_id ORDER BY count(student_enrolment.student_enrolment_id) DESC LIMIT 1
after:
SELECT semester_name, semester_id  FROM semesters  JOIN student_enrolment ON semesters.semester_id = student_enrolment.semester_id  GROUP BY semester_id  ORDER BY COUNT(student_enrolment.student_enrolment_id) DESC  LIMIT 1

index is 530
before:
SELECT semester_name ,  semester_id FROM semesters GROUP BY semester_name , semester_id ORDER BY COUNT(student_id) DESC LIMIT 1
after:
SELECT semesters.semester_name, semesters.semester_id  FROM semesters  INNER JOIN student_enrolment ON semesters.semester_id = student_enrolment.semester_id  GROUP BY semesters.semester_id  ORDER BY COUNT(student_enrolment.student_id) DESC  LIMIT 1

index is 531
before:
SELECT department_description FROM departments WHERE department_name LIKE '%computer%'
after:
SELECT department_description FROM departments WHERE department_name LIKE '%computer%'

index is 532
before:
SELECT department_description FROM department WHERE department_name LIKE '%computer%'
after:
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'

index is 533
before:
SELECT first_name ,  middle_name ,  last_name ,  student_id FROM students GROUP BY first_name ,  middle_name ,  last_name ,  student_id HAVING count(DISTINCT student_enrolment.degree_program_id)  >  2
after:
SELECT first_name, middle_name, last_name, student_id  FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id GROUP BY first_name, middle_name, last_name, student_id HAVING COUNT(DISTINCT Student_Enrolment.degree_program_id) > 2

index is 534
before:
SELECT first_name ,  middle_name ,  last_name ,  student_id FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment GROUP BY student_id HAVING count(DISTINCT degree_program_id) = 2 AND count(DISTINCT semester_id) = 1)
after:
SELECT first_name, middle_name, last_name, student_id  FROM Students  WHERE student_id IN (   SELECT student_id    FROM Student_Enrolment    GROUP BY student_id    HAVING COUNT(DISTINCT degree_program_id) = 2    AND COUNT(DISTINCT semester_id) = 1 )

index is 535
before:
SELECT first_name ,  middle_name ,  last_name FROM students JOIN student_enrolment ON students.student_id  =  student_enrolment.student_id JOIN degree_programs ON student_enrolment.degree_program_id  =  degree_programs.degree_program_id WHERE degree_summary_name  =  'Bachelor'
after:
SELECT students.first_name, students.middle_name, students.last_name FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id WHERE degree_summary_name = 'Bachelor'

index is 536
before:
SELECT first_name , middle_name , last_name FROM students JOIN student_enrolment ON students.student_id  =  student_enrolment.student_id JOIN degree_programs ON student_enrolment.degree_program_id  =  degree_programs.degree_program_id WHERE degree_programs.degree_summary_name  =  'Bachelors'
after:
SELECT first_name, middle_name, last_name  FROM Students  JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id  JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id  WHERE Degree_Programs.degree_summary_name = 'Bachelors'

index is 537
before:
SELECT degree_summary_name FROM degree_programs JOIN student_enrolment ON student_enrolment.degree_program_id = degree_programs.degree_program_id GROUP BY degree_summary_name ORDER BY count(*) DESC LIMIT 1
after:
SELECT degree_summary_name FROM Degree_Programs JOIN Student_Enrolment ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id GROUP BY degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1

index is 538
before:
SELECT degree_summary_name FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name ORDER BY COUNT(student_id) DESC LIMIT 1
after:
SELECT degree_summary_name FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id GROUP BY degree_summary_name ORDER BY COUNT(Student_Enrolment.student_id) DESC LIMIT 1

index is 539
before:
LIMIT 1
after:
SELECT degree_programs.degree_program_id, degree_summary_name FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_programs.degree_program_id, degree_summary_name ORDER BY COUNT(student_enrolment.student_id) DESC LIMIT 1

index is 540
before:
SELECT degree_program_id ,  degree_summary_description FROM degree_programs GROUP BY degree_program_id ,  degree_summary_description ORDER BY count(student_id) DESC LIMIT 1
after:
SELECT degree_program_id, degree_summary_description FROM Degree_Programs JOIN Student_Enrolment ON Degree_Programs.degree_program_id = Student_Enrolment.degree_program_id GROUP BY Degree_Programs.degree_program_id, Degree_Programs.degree_summary_description ORDER BY COUNT(Student_Enrolment.student_id) DESC LIMIT 1

index is 541
before:
SELECT T1.id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(T2.student_id) FROM students AS T1 JOIN student_enrolment AS T2 ON T1.id  =  T2.student_id GROUP BY T1.id ORDER BY count(T2.student_id) DESC LIMIT 1
after:
SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_id) AS enrollment_count FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id, T1.first_name, T1.middle_name, T1.last_name ORDER BY enrollment_count DESC LIMIT 1

index is 542
before:
SELECT first_name, middle_name, last_name, student_id, count(student_enrolment_id) FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id GROUP BY students.student_id ORDER BY count(student_enrolment_id) DESC LIMIT 1
after:
SELECT Students.first_name, Students.middle_name, Students.last_name, Students.student_id, COUNT(Student_Enrolment.student_enrolment_id)  FROM Students  JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id  GROUP BY Students.student_id  ORDER BY COUNT(Student_Enrolment.student_enrolment_id) DESC  LIMIT 1

index is 543
before:
SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)
after:
SELECT semesters.semester_name FROM semesters LEFT JOIN student_enrolment ON semesters.semester_id = student_enrolment.semester_id WHERE student_enrolment.semester_id IS NULL

index is 544
before:
SELECT semester_name FROM semesters WHERE NOT EXISTS (SELECT semester_id FROM student_enrolment WHERE semesters.semester_id = student_enrolment.semester_id)
after:
SELECT semester_name  FROM Semesters  WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)

index is 545
before:
SELECT DISTINCT course_name FROM courses WHERE EXISTS (SELECT * FROM student_enrolment_courses)
after:
SELECT

index is 546
before:
SELECT DISTINCT course_name FROM courses WHERE EXISTS (SELECT * FROM student_enrolment_courses)
after:
SELECT course_name FROM Courses WHERE course_id IN (   SELECT DISTINCT course_id   FROM Student_Enrolment_Courses )

index is 547
before:
SELECT course_name FROM student_enrolment_courses INNER JOIN courses ON student_enrolment_courses.course_id = courses.course_id GROUP BY course_name ORDER BY COUNT(*) DESC LIMIT 1
after:
SELECT courses.course_name  FROM student_enrolment_courses  INNER JOIN courses ON student_enrolment_courses.course_id = courses.course_id  GROUP BY courses.course_name  ORDER BY COUNT(*) DESC  LIMIT 1

index is 548
before:
SELECT course_name FROM courses JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id GROUP BY course_name ORDER BY count(*) DESC LIMIT 1
after:
SELECT courses.course_name FROM courses JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id GROUP BY courses.course_name ORDER BY COUNT(*) DESC LIMIT 1

index is 549
before:
SELECT last_name FROM students JOIN addresses ON students.current_address_id  =  addresses.address_id WHERE state_province_county  =  'North Carolina' AND students.student_id NOT IN (SELECT student_id FROM student_enrolment)
after:
SELECT students.last_name  FROM students  JOIN addresses ON students.current_address_id = addresses.address_id  WHERE addresses.state_province_county = 'North Carolina'  AND students.student_id NOT IN (SELECT student_id FROM student_enrolment)

index is 550
before:
)
after:
SELECT students.last_name FROM students JOIN addresses ON students.permanent_address_id = addresses.address_id LEFT JOIN student_enrolment ON students.student_id = student_enrolment.student_id WHERE addresses.state_province_county = 'North Carolina' AND student_enrolment.student_id IS NULL

index is 551
before:
SELECT transcript_date ,  transcript_id FROM transcripts JOIN transcript_contents ON transcripts.transcript_id  =  transcript_contents.transcript_id GROUP BY transcript_id HAVING count(student_course_id) >= 2
after:
SELECT transcript_date, transcript_id FROM Transcripts JOIN Transcript_Contents ON Transcripts.transcript_id = Transcript_Contents.transcript_id GROUP BY transcript_date, transcript_id HAVING COUNT(Transcript_Contents.student_course_id) >= 2

index is 552
before:
SELECT transcript_date ,  transcript_id FROM transcripts GROUP BY transcript_date ,  transcript_id HAVING count(*)  >=  2
after:
SELECT transcript_date, transcript_id FROM Transcripts JOIN Transcript_Contents ON Transcripts.transcript_id = Transcript_Contents.transcript_id JOIN Student_Enrolment_Courses ON Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id GROUP BY transcript_date, transcript_id HAVING COUNT(DISTINCT Student_Enrolment_Courses.course_id) >= 2

index is 553
before:
SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
after:
SELECT cell_mobile_number  FROM Students  WHERE first_name = 'Timmothy' AND last_name = 'Ward'

index is 554
before:
SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
after:
SELECT cell_mobile_number  FROM Students  WHERE first_name = 'Timmothy' AND last_name = 'Ward'

index is 555
before:
SELECT first_name ,  middle_name ,  last_name FROM students ORDER BY date_first_registered LIMIT 1
after:
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered LIMIT 1

index is 556
before:
SELECT first_name ,  middle_name ,  last_name FROM students ORDER BY date_first_registered LIMIT 1
after:
SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.date_first_registered LIMIT 1

index is 557
before:
SELECT first_name ,  middle_name ,  last_name FROM students ORDER BY date_first_registered LIMIT 1
after:
SELECT students.first_name, students.middle_name, students.last_name FROM students ORDER BY students.date_first_registered LIMIT 1

index is 558
before:
SELECT first_name , middle_name , last_name FROM students ORDER BY date_first_registered LIMIT 1
after:
SELECT Students.first_name, Students.middle_name, Students.last_name  FROM Students ORDER BY Students.date_first_registered ASC LIMIT 1

index is 559
before:
SELECT first_name FROM students JOIN addresses ON students.permanent_address_id  !=  addresses.address_id AND students.current_address_id  =  addresses.address_id
after:
SELECT first_name FROM students JOIN addresses ON students.permanent_address_id != addresses.address_id WHERE students.current_address_id = addresses.address_id

index is 560
before:
SELECT first_name FROM students WHERE permanent_address_id != current_address_id
after:
SELECT Students.first_name FROM Students JOIN Addresses AS perm ON Students.permanent_address_id = perm.address_id JOIN Addresses AS curr ON Students.current_address_id = curr.address_id WHERE perm.address_id != curr.address_id;

index is 561
before:
SELECT address_id , line_1 , line_2 , line_3 FROM addresses WHERE address_id IN (SELECT current_address_id FROM students) GROUP BY address_id , line_1 , line_2 , line_3 ORDER BY count(*) DESC LIMIT 1
after:
SELECT addresses.address_id, addresses.line_1, addresses.line_2, addresses.line_3  FROM addresses  JOIN students ON addresses.address_id = students.current_address_id  GROUP BY addresses.address_id, addresses.line_1, addresses.line_2, addresses.line_3  ORDER BY COUNT(*) DESC  LIMIT 1

index is 562
before:
SELECT address_id , line_1 , line_2 FROM addresses WHERE address_id  =  (SELECT current_address_id FROM students GROUP BY current_address_id ORDER BY count(*) DESC LIMIT 1)
after:
SELECT addresses.address_id, addresses.line_1, addresses.line_2  FROM addresses  JOIN students ON addresses.address_id = students.current_address_id GROUP BY addresses.address_id, addresses.line_1, addresses.line_2 ORDER BY COUNT(*) DESC  LIMIT 1

index is 563
before:
SELECT AVG(transcript_date) FROM transcripts
after:
SELECT AVG(transcript_date) FROM Transcripts

index is 564
before:
SELECT avg(transcript_date) FROM transcripts
after:
SELECT avg(transcript_date) FROM Transcripts

index is 565
before:
SELECT transcript_date ,  other_details FROM transcripts ORDER BY transcript_date LIMIT 1
after:
SELECT transcript_date, other_details FROM Transcripts ORDER BY transcript_date LIMIT 1

index is 566
before:
SELECT MIN(transcript_date), other_details FROM transcripts
after:
SELECT MIN(transcript_date), other_details FROM Transcripts GROUP BY other_details

index is 567
before:
SELECT count(transcript_id) FROM transcripts
after:
SELECT count(transcript_id) FROM Transcripts

index is 568
before:
SELECT count(*) FROM transcripts
after:
SELECT count(*) FROM Transcripts

index is 569
before:
SELECT MAX(transcript_date) FROM transcripts
after:
SELECT MAX(transcript_date) AS last_transcript_release_date FROM Transcripts

index is 570
before:
SELECT MAX(transcript_date) FROM transcripts
after:
SELECT MAX(transcript_date) FROM Transcripts

index is 571
before:
SELECT MAX(count(*)), student_course_id FROM transcript_contents GROUP BY student_course_id
after:
SELECT MAX(enrollment_count) AS max_enrollment_count, student_course_id FROM (   SELECT COUNT(*) AS enrollment_count, student_course_id   FROM Transcript_Contents   GROUP BY student_course_id ) AS subquery ORDER BY max_enrollment_count DESC LIMIT 1

index is 572
before:
SELECT MAX(count(T1.course_id)) , T2.student_enrolment_id FROM student_enrolment_courses AS T1 JOIN Student_Enrolment AS T2 ON T1.student_enrolment_id  =  T2.student_enrolment_id GROUP BY T1.course_id
after:
SELECT MAX(T1.course_count) AS max_course_count, T2.student_enrolment_id FROM (     SELECT COUNT(*) AS course_count, student_enrolment_id, course_id     FROM Student_Enrolment_Courses     GROUP BY student_enrolment_id, course_id ) AS T1 JOIN Student_Enrolment AS T2 ON T1.student_enrolment_id = T2.student_enrolment_id GROUP BY T2.student_enrolment_id ORDER BY max_course_count DESC LIMIT 1

index is 573
before:
SELECT transcript_date , transcript_id FROM transcripts ORDER BY count(*) LIMIT 1
after:
SELECT transcripts.transcript_date, transcripts.transcript_id FROM transcripts JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id JOIN student_enrolment_courses ON transcript_contents.student_course_id = student_enrolment_courses.student_course_id GROUP BY transcripts.transcript_date, transcripts.transcript_id ORDER BY COUNT(*) ASC LIMIT 1;

index is 574
before:
SELECT transcript_date ,  transcript_id FROM transcripts AS T1 JOIN transcript_contents AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
after:
SELECT T1.transcript_date, T1.transcript_id  FROM Transcripts AS T1  JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id  GROUP BY T1.transcript_id  ORDER BY COUNT(*) ASC  LIMIT 1

index is 575
before:
SELECT semester_name FROM semesters WHERE (SELECT count(DISTINCT degree_program_id) FROM student_enrolment WHERE semester_id = semesters.semester_id AND (degree_program_id = 'Bachelor' OR degree_program_id = 'Master')) > 1
after:
SELECT semester_name  FROM Semesters  WHERE semester_id IN (   SELECT semester_id    FROM Student_Enrolment    WHERE degree_program_id IN ('Bachelor', 'Master')   GROUP BY semester_id    HAVING COUNT(DISTINCT degree_program_id) > 1 )

index is 576
before:
SELECT semester_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE degree_summary_name = 'Masters') AND semester_id IN (SELECT semester_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE degree_summary_name = 'Bachelors')) GROUP BY semester_id HAVING COUNT(DISTINCT degree_program_id) > 1
after:
SELECT semester_id FROM student_enrolment WHERE degree_program_id IN (   SELECT degree_program_id   FROM degree_programs   WHERE degree_summary_name = 'Masters' ) AND semester_id IN (   SELECT semester_id   FROM student_enrolment   WHERE degree_program_id IN (     SELECT degree_program_id     FROM degree_programs     WHERE degree_summary_name = 'Bachelors'   ) ) GROUP BY semester_id HAVING COUNT(DISTINCT degree_program_id) > 1;

index is 577
before:
SELECT count(DISTINCT current_address_id) FROM students
after:
SELECT count(DISTINCT Students.current_address_id) FROM Students

index is 578
before:
SELECT DISTINCT line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details FROM addresses WHERE address_id IN (SELECT DISTINCT current_address_id FROM students) OR address_id IN (SELECT DISTINCT permanent_address_id FROM students)
after:
SELECT line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details  FROM Addresses  WHERE address_id IN (SELECT current_address_id FROM Students) OR address_id IN (SELECT permanent_address_id FROM Students)

index is 579
before:
SELECT * FROM students ORDER BY first_name DESC
after:
SELECT * FROM Students ORDER BY last_name DESC

index is 580
before:
SELECT * FROM students ORDER BY last_name DESC
after:
SELECT Students.first_name, Students.middle_name, Students.last_name, Students.cell_mobile_number, Students.email_address, Students.ssn, Students.date_first_registered, Students.date_left, Students.other_student_details  FROM Students  ORDER BY Students.last_name DESC

index is 581
before:
SELECT * FROM sections WHERE section_id = 'h'
after:
SELECT section_id, course_id, section_name, section_description, other_details FROM sections WHERE section_id = 'h'

index is 582
before:
SELECT section_description FROM section WHERE section_name  =  'h'
after:
SELECT Sections.section_description FROM Sections WHERE Sections.section_name = 'h'

index is 583
before:
SELECT first_name FROM students JOIN addresses ON students.permanent_address_id = addresses.address_id WHERE addresses.country = 'Haiti' OR students.cell_mobile_number = '09700166582'
after:
SELECT students.first_name FROM students JOIN addresses ON students.permanent_address_id = addresses.address_id WHERE addresses.country = 'Haiti' OR students.cell_mobile_number = '09700166582'

index is 584
before:
SELECT first_name FROM students WHERE cell_mobile_number = '09700166582' OR permanent_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti')
after:
SELECT first_name  FROM Students  WHERE cell_mobile_number = '09700166582'     OR permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti')

index is 585
before:
SELECT title FROM cartoon ORDER BY title
after:
SELECT cartoon.title FROM cartoon ORDER BY cartoon.title

index is 586
before:
SELECT title FROM Cartoon ORDER BY title
after:
SELECT title FROM Cartoon ORDER BY title ASC

index is 587
before:
SELECT title FROM cartoon WHERE directed_by = "Ben Jones"
after:
SELECT cartoon.title FROM cartoon JOIN TV_Channel ON cartoon.Channel = TV_Channel.id WHERE cartoon.directed_by = "Ben Jones"

index is 588
before:
SELECT title FROM cartoon WHERE directed_by = "Ben Jones"
after:
SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones"

index is 589
before:
SELECT count(title) FROM cartoon WHERE written_by = 'Joseph Kuhr'
after:
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'

index is 590
before:
SELECT count(*) FROM cartoon WHERE written_by = 'Joseph Kuhr'
after:
SELECT count(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'

index is 591
before:
SELECT title ,  directed_by FROM cartoon ORDER BY original_air_date
after:
SELECT cartoon.title, cartoon.directed_by FROM cartoon JOIN TV_Channel ON cartoon.channel = TV_Channel.id ORDER BY cartoon.original_air_date;

index is 592
before:
SELECT title , directed_by FROM Cartoon ORDER BY original_air_date
after:
SELECT title, directed_by  FROM Cartoon  ORDER BY Original_air_date

index is 593
before:
SELECT title FROM Cartoon WHERE directed_by = 'Ben Jones' OR directed_by = 'Brandon Vietti'
after:
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'

index is 594
before:
SELECT title FROM cartoon WHERE directed_by IN ('Ben Jones', 'Brandon Vietti')
after:
SELECT title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti')

index is 595
before:
SELECT country ,  count(*) FROM tv_channel GROUP BY country ORDER BY count(*) DESC LIMIT 1
after:
SELECT TV_Channel.Country, COUNT(*) AS num_channels FROM TV_Channel GROUP BY TV_Channel.Country ORDER BY num_channels DESC LIMIT 1

index is 596
before:
SELECT country ,  count(*) FROM tv_channel GROUP BY country ORDER BY count(*) DESC LIMIT 1
after:
SELECT TV_Channel.Country, COUNT(*) AS channel_count FROM TV_Channel GROUP BY TV_Channel.Country ORDER BY channel_count DESC LIMIT 1

index is 597
before:
SELECT COUNT(DISTINCT series_name) , COUNT(DISTINCT content) FROM TV_Channel
after:
SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel

index is 598
before:
SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel
after:
SELECT count(DISTINCT series_name), count(DISTINCT Content) FROM TV_Channel

index is 599
before:
SELECT content FROM tv_channel WHERE series_name = "Sky Radio"
after:
SELECT content FROM TV_Channel WHERE series_name = "Sky Radio"

index is 600
before:
SELECT content FROM tv_channel WHERE series_name = 'Sky Radio'
after:
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'

index is 601
before:
SELECT package_option FROM tv_channel WHERE series_name = "Sky Radio"
after:
SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio"

index is 602
before:
SELECT package_option FROM tv_channel WHERE series_name = 'Sky Radio'
after:
SELECT Package_Option FROM TV_Channel  JOIN TV_series ON TV_series.Channel = TV_Channel.id  WHERE TV_Channel.series_name = 'Sky Radio'

index is 603
before:
SELECT COUNT(DISTINCT id) FROM TV_Channel WHERE Language = 'English'
after:
SELECT COUNT(DISTINCT id) FROM TV_Channel WHERE Language = 'English'

index is 604
before:
SELECT count(*) FROM TV_Channel WHERE Language = 'English'
after:
SELECT count(*) FROM TV_Channel WHERE Language = 'English'

index is 605
before:
SELECT language , count(*) FROM tv_channel GROUP BY language ORDER BY count(*) ASC
after:
SELECT TV_Channel.Language, COUNT(*) AS num_of_channels FROM TV_Channel GROUP BY TV_Channel.Language ORDER BY num_of_channels ASC;

index is 606
before:
SELECT language ,  COUNT(*) FROM tv_channel GROUP BY language ORDER BY COUNT(*) ASC LIMIT 1
after:
SELECT tv_channel.language, COUNT(*) AS channel_count FROM tv_channel GROUP BY tv_channel.language ORDER BY channel_count ASC LIMIT 1

index is 607
before:
SELECT language , count(*) FROM tv_channel GROUP BY language
after:
SELECT TV_Channel.Language, COUNT(*) AS Channel_Count FROM TV_Channel GROUP BY TV_Channel.Language

index is 608
before:
SELECT language , COUNT(*) FROM tv_channel GROUP BY language
after:
SELECT TV_Channel.Language, COUNT(*) FROM TV_Channel GROUP BY TV_Channel.Language

index is 609
before:
SELECT series_name FROM TV_Channel WHERE Cartoon.title = "The Rise of the Blue Beetle!"
after:
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Title = "The Rise of the Blue Beetle!";

index is 610
before:
SELECT series_name FROM tv_channel WHERE id = (SELECT channel FROM cartoon WHERE title = "The Rise of the Blue Beetle")
after:
SELECT series_name  FROM TV_Channel  JOIN Cartoon ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Title = "The Rise of the Blue Beetle"

index is 611
before:
SELECT title FROM cartoon JOIN tv_channel ON cartoon.channel = tv_channel.id WHERE tv_channel.series_name = "Sky Radio"
after:
SELECT cartoon.Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio"

index is 612
before:
SELECT title FROM cartoon WHERE channel = (SELECT id FROM tv_channel WHERE series_name = "Sky Radio")
after:
SELECT Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio"

index is 613
before:
SELECT episode FROM tv_series ORDER BY rating
after:
SELECT TV_series.Episode FROM TV_series ORDER BY TV_series.Rating

index is 614
before:
SELECT title FROM cartoon ORDER BY rating
after:
SELECT TV_series.Episode  FROM TV_series  JOIN Cartoon ON TV_series.id = Cartoon.id  ORDER BY TV_series.Rating

index is 615
before:
SELECT episode , rating FROM tv_series ORDER BY rating DESC LIMIT 3
after:
SELECT tv_series.Episode, tv_series.Rating  FROM tv_series  ORDER BY tv_series.Rating DESC  LIMIT 3

index is 616
before:
SELECT episode , rating FROM tv_series ORDER BY rating DESC LIMIT 3
after:
SELECT TV_series.Episode, TV_series.Rating FROM TV_series ORDER BY TV_series.Rating DESC LIMIT 3

index is 617
before:
SELECT min(share) , max(share) FROM tv_series
after:
SELECT MIN(Share), MAX(Share) FROM TV_series

index is 618
before:
SELECT max(share) , min(share) FROM TV_series
after:
SELECT MAX(Share), MIN(Share) FROM TV_series

index is 619
before:
SELECT air_date FROM tv_series WHERE episode = "A Love of a Lifetime"
after:
SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime"

index is 620
before:
SELECT air_date FROM tv_series WHERE episode = "A Love of a Lifetime"
after:
SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime"

index is 621
before:
SELECT weekly_rank FROM tv_series WHERE episode = "A Love of a Lifetime"
after:
SELECT weekly_rank FROM TV_series WHERE Episode = "A Love of a Lifetime"

index is 622
before:
SELECT weekly_rank FROM tv_series WHERE episode = "A Love of a Lifetime"
after:
SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime"

index is 623
before:
SELECT series_name FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel WHERE tv_series.episode = 'A Love of a Lifetime'
after:
SELECT TV_Channel.series_name  FROM TV_Channel  JOIN TV_series ON TV_Channel.id = TV_series.Channel  WHERE TV_series.Episode = 'A Love of a Lifetime'

index is 624
before:
SELECT title FROM cartoon WHERE episode = "A Love of a Lifetime"
after:
SELECT title FROM cartoon JOIN tv_series ON cartoon.channel = tv_series.channel WHERE tv_series.episode = "A Love of a Lifetime"

index is 625
before:
SELECT episode FROM tv_series WHERE channel  =  (SELECT id FROM tv_channel WHERE series_name  =  "Sky Radio")
after:
SELECT Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio"

index is 626
before:
SELECT episode FROM tv_series WHERE id  =  (SELECT id FROM tv_channel WHERE series_name = "Sky Radio")
after:
SELECT Episode FROM TV_series WHERE Channel = (SELECT id FROM TV_Channel WHERE series_name = "Sky Radio")

index is 627
before:
SELECT directed_by , count(*) FROM cartoon GROUP BY directed_by
after:
SELECT directed_by, COUNT(*) AS cartoon_count FROM Cartoon GROUP BY directed_by

index is 628
before:
SELECT directed_by ,  COUNT(*) FROM cartoon GROUP BY directed_by
after:
SELECT directed_by, COUNT(*)  FROM Cartoon  GROUP BY directed_by

index is 629
before:
SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date DESC LIMIT 1
after:
SELECT cartoon.production_code, tv_channel.series_name  FROM cartoon  JOIN tv_channel ON cartoon.channel = tv_channel.id  ORDER BY cartoon.original_air_date DESC  LIMIT 1

index is 630
before:
SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date DESC LIMIT 1
after:
SELECT cartoon.production_code, tv_channel.series_name FROM cartoon JOIN tv_channel ON cartoon.channel = tv_channel.id ORDER BY cartoon.original_air_date DESC LIMIT 1

index is 631
before:
SELECT package_option , series_name FROM tv_channel WHERE hight_definition_tv  =  True
after:
SELECT package_option, series_name FROM TV_Channel WHERE High_definition_TV = 1

index is 632
before:
SELECT package_option, series_name FROM tv_channel WHERE hight_definition_tv = true
after:
SELECT package_option, series_name FROM TV_Channel WHERE High_definition_TV = true

index is 633
before:
SELECT DISTINCT country FROM tv_channel WHERE id IN (SELECT channel FROM cartoon WHERE written_by = 'Todd Casey')
after:
SELECT TV_Channel.Country FROM TV_Channel WHERE TV_Channel.id IN (     SELECT Cartoon.Channel     FROM Cartoon     WHERE Cartoon.Written_by = 'Todd Casey' )

index is 634
before:
SELECT DISTINCT country FROM tv_channel WHERE id IN (SELECT channel FROM cartoon WHERE written_by = 'Todd Casey')
after:
SELECT country FROM TV_Channel WHERE id IN (   SELECT Channel   FROM Cartoon   WHERE Written_by = 'Todd Casey' )

index is 635
before:
SELECT DISTINCT country FROM tv_channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE written_by = 'Todd Casey')
after:
SELECT DISTINCT Country  FROM TV_Channel  WHERE id NOT IN (   SELECT Channel    FROM Cartoon    WHERE Written_by = 'Todd Casey' )

index is 636
before:
SELECT DISTINCT country FROM tv_channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE written_by = 'Todd Casey')
after:
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey')

index is 637
before:
SELECT series_name ,  country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by  =  'Ben Jones' AND Cartoon.Directed_by  =  'Michael Chang' GROUP BY series_name ,  country
after:
SELECT series_name, country  FROM TV_Channel  JOIN Cartoon ON TV_Channel.id = Cartoon.Channel  WHERE Cartoon.Directed_by = 'Ben Jones' OR Cartoon.Directed_by = 'Michael Chang'  GROUP BY series_name, country

index is 638
before:
SELECT series_name ,  country FROM TV_Channel WHERE id IN (SELECT channel FROM Cartoon WHERE Directed_by = 'Ben Jones' AND Directed_by = 'Michael Chang')
after:
SELECT series_name, country FROM TV_Channel WHERE id IN (     SELECT Channel     FROM Cartoon     WHERE Directed_by = 'Ben Jones'         OR Directed_by = 'Michael Chang' )

index is 639
before:
SELECT pixel_aspect_ratio_PAR ,  Country FROM TV_Channel WHERE Language  <>  'English'
after:
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'

index is 640
before:
SELECT pixel_aspect_ratio_PAR , country FROM TV_Channel WHERE Language != 'English'
after:
SELECT TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country  FROM TV_Channel  WHERE TV_Channel.Language != 'English'

index is 641
before:
SELECT id FROM tv_channel GROUP BY id HAVING count(*)  >  2
after:
SELECT TV_Channel.id FROM TV_Channel GROUP BY Country HAVING count(*) > 2

index is 642
before:
SELECT id FROM TV_Channel GROUP BY id HAVING count(*)  >  2
after:
SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.id HAVING COUNT(*) > 2

index is 643
before:
SELECT id FROM tv_channel WHERE NOT EXISTS (SELECT * FROM cartoon WHERE directed_by = 'Ben Jones' AND channel = tv_channel.id)
after:
SELECT id FROM TV_Channel WHERE id NOT IN (   SELECT channel   FROM Cartoon   WHERE Directed_by = 'Ben Jones' )

index is 644
before:
SELECT id FROM tv_channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones')
after:
SELECT tv_channel.id FROM tv_channel LEFT JOIN cartoon ON cartoon.channel = tv_channel.id AND cartoon.directed_by = 'Ben Jones' WHERE cartoon.id IS NULL

index is 645
before:
SELECT package_option FROM tv_channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones')
after:
SELECT package_option FROM TV_Channel WHERE id NOT IN (   SELECT Channel   FROM Cartoon   WHERE Directed_by = 'Ben Jones' )

index is 646
before:
SELECT package_option FROM tv_channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones')
after:
SELECT package_option  FROM tv_channel  WHERE id NOT IN (   SELECT channel    FROM cartoon    WHERE directed_by = 'Ben Jones' )

index is 647
before:
SELECT count(Poker_Player_ID) FROM poker_player
after:
SELECT COUNT(DISTINCT Poker_Player_ID) FROM poker_player

index is 648
before:
SELECT count(poker_player_id) FROM poker_player
after:
SELECT COUNT(*) FROM poker_player

index is 649
before:
SELECT earnings FROM poker_player ORDER BY earnings DESC
after:
SELECT poker_player.Earnings FROM poker_player ORDER BY poker_player.Earnings DESC

index is 650
before:
SELECT earnings FROM poker_player ORDER BY earnings DESC
after:
SELECT poker_player.Earnings FROM poker_player ORDER BY poker_player.Earnings DESC

index is 651
before:
SELECT final_table_made , best_finish FROM poker_player
after:
SELECT final_table_made, best_finish  FROM poker_player

index is 652
before:
SELECT final_table_made ,  best_finish FROM poker_player
after:
SELECT poker_player.Final_Table_Made, poker_player.Best_Finish FROM poker_player

index is 653
before:
SELECT avg(earnings) FROM poker_player
after:
SELECT avg(Earnings) FROM poker_player

index is 654
before:
SELECT avg(earnings) FROM poker_player
after:
SELECT avg(Earnings) FROM poker_player

index is 655
before:
SELECT money_rank FROM poker_player ORDER BY earnings DESC LIMIT 1
after:
SELECT poker_player.money_rank  FROM poker_player  ORDER BY poker_player.earnings DESC  LIMIT 1

index is 656
before:
SELECT money_rank FROM poker_player WHERE earnings  =  (SELECT max(earnings) FROM poker_player)
after:
SELECT money_rank  FROM poker_player  WHERE earnings = (   SELECT MAX(earnings)    FROM poker_player )

index is 657
before:
SELECT max(final_table_made) FROM poker_player WHERE earnings  <  200000
after:
SELECT COUNT(*) AS max_final_tables FROM poker_player WHERE earnings < 200000 GROUP BY Poker_Player_ID ORDER BY max_final_tables DESC LIMIT 1

index is 658
before:
SELECT max(final_table_made) FROM poker_player WHERE earnings  <  200000
after:
SELECT max(final_table_made)  FROM poker_player  WHERE earnings < 200000

index is 659
before:
SELECT name FROM people
after:
SELECT name FROM people

index is 660
before:
SELECT name FROM people
after:
SELECT people.Name FROM people

index is 661
before:
SELECT name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.earnings  >  300000
after:
SELECT name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Earnings > 300000

index is 662
before:
SELECT name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE earnings  >  300000
after:
SELECT name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE poker_player.Earnings > 300000

index is 663
before:
SELECT name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY final_table_made ASC
after:
SELECT people.Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY poker_player.Final_Table_Made ASC

index is 664
before:
SELECT T1.name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made ASC
after:
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC

index is 665
before:
SELECT birth_date FROM poker_player JOIN people ON poker_player.people_id = people.people_id ORDER BY earnings LIMIT 1
after:
SELECT people.Birth_Date FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings ASC LIMIT 1

index is 666
before:
SELECT birth_date FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY Earnings LIMIT 1
after:
SELECT birth_date FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY poker_player.Earnings ASC LIMIT 1

index is 667
before:
SELECT money_rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY height DESC LIMIT 1
after:
SELECT poker_player.Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY people.Height DESC LIMIT 1

index is 668
before:
SELECT money_rank FROM poker_player WHERE People_ID  =  (SELECT People_ID FROM people ORDER BY height DESC LIMIT 1)
after:
SELECT Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height = (     SELECT MAX(Height)      FROM people )

index is 669
before:
SELECT AVG(earnings) FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE height > 200
after:
SELECT AVG(poker_player.Earnings) FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE people.Height > 200

index is 670
before:
SELECT AVG(earnings) FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID WHERE height > 200
after:
SELECT AVG(poker_player.Earnings)  FROM people  JOIN poker_player ON people.People_ID = poker_player.People_ID  WHERE people.Height > 200

index is 671
before:
SELECT name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY earnings DESC
after:
SELECT name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY poker_player.Earnings DESC

index is 672
before:
SELECT name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY earnings DESC
after:
SELECT name  FROM people  JOIN poker_player ON people.People_ID = poker_player.People_ID  ORDER BY poker_player.Earnings DESC

index is 673
before:
SELECT nationality ,  COUNT(*) FROM people GROUP BY nationality
after:
SELECT nationality, COUNT(*)  FROM people  GROUP BY nationality

index is 674
before:
SELECT nationality ,  COUNT(*) FROM people GROUP BY nationality
after:
SELECT nationality, COUNT(*)  FROM people  GROUP BY nationality

index is 675
before:
SELECT nationality FROM people GROUP BY nationality ORDER BY count(nationality) DESC LIMIT 1
after:
SELECT nationality, COUNT(*) AS count  FROM people  GROUP BY nationality  ORDER BY count DESC  LIMIT 1

index is 676
before:
SELECT nationality FROM people GROUP BY nationality ORDER BY count(*) DESC LIMIT 1
after:
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1

index is 677
before:
SELECT nationality FROM people GROUP BY nationality HAVING count(*) > 1
after:
SELECT Nationality FROM people GROUP BY nationality HAVING COUNT(DISTINCT People_ID) > 1

index is 678
before:
SELECT nationality FROM people GROUP BY nationality HAVING count(*) >= 2
after:
SELECT Nationality FROM people GROUP BY nationality HAVING count(*) >= 2

index is 679
before:
SELECT name ,  birth_date FROM people ORDER BY name ASC
after:
SELECT name, birth_date  FROM people  ORDER BY name ASC

index is 680
before:
SELECT name , birth_date FROM people ORDER BY name
after:
SELECT name, birth_date FROM people ORDER BY name ASC

index is 681
before:
SELECT name FROM people WHERE nationality != 'Russia'
after:
SELECT name FROM people WHERE Nationality != 'Russia'

index is 682
before:
SELECT name FROM people WHERE nationality <> 'Russia'
after:
SELECT name  FROM people  WHERE nationality <> 'Russia'

index is 683
before:
SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM poker_player)
after:
SELECT name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

index is 684
before:
SELECT name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
after:
SELECT name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

index is 685
before:
SELECT COUNT(DISTINCT nationality) FROM people
after:
SELECT COUNT(DISTINCT Nationality) FROM people

index is 686
before:
SELECT COUNT(DISTINCT nationality) FROM people
after:
SELECT COUNT(DISTINCT Nationality) FROM people

index is 687
before:
SELECT count(DISTINCT state) FROM area_code_state
after:
SELECT count(DISTINCT state) FROM AREA_CODE_STATE

index is 688
before:
SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC
after:
SELECT contestant_number, contestant_name  FROM CONTESTANTS  ORDER BY contestant_name DESC

index is 689
before:
SELECT vote_id, phone_number, state FROM votes
after:
SELECT vote_id, phone_number, state FROM VOTES

index is 690
before:
SELECT max(area_code) , min(area_code) FROM area_code_state
after:
SELECT max(area_code), min(area_code) FROM AREA_CODE_STATE;

index is 691
before:
SELECT max(created) FROM votes WHERE state = 'CA'
after:
SELECT max(created) AS last_date_created FROM VOTES WHERE state = 'CA'

index is 692
before:
SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
after:
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway'

index is 693
before:
SELECT DISTINCT state ,  created FROM votes
after:
SELECT DISTINCT state, created FROM VOTES

index is 694
before:
SELECT contestant_number ,  contestant_name FROM contestants GROUP BY contestant_number , contestant_name HAVING count(*)  >=  2
after:
SELECT contestant_number, contestant_name  FROM contestants  JOIN votes ON contestants.contestant_number = votes.contestant_number  GROUP BY contestants.contestant_number, contestants.contestant_name  HAVING count(votes.vote_id) >= 2

index is 695
before:
SELECT contestant_number , contestant_name FROM contestants WHERE vote_id  =  (SELECT min(vote_id) FROM votes) GROUP BY contestant_number, contestant_name
after:
SELECT contestant_number, contestant_name FROM contestants WHERE contestant_number IN (     SELECT contestant_number     FROM votes     GROUP BY contestant_number     HAVING COUNT(vote_id) = (         SELECT COUNT(vote_id)         FROM votes         GROUP BY contestant_number         ORDER BY COUNT(vote_id) ASC         LIMIT 1     ) )

index is 696
before:
SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'
after:
SELECT COUNT(*) FROM VOTES WHERE state = 'NY' OR state = 'CA'

index is 697
before:
SELECT count(*) FROM contestants WHERE contestant_number NOT IN (SELECT contestant_number FROM votes)
after:
SELECT count(*) FROM contestants WHERE contestant_number NOT IN (SELECT contestant_number FROM votes)

index is 698
before:
SELECT area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state = T2.state GROUP BY area_code ORDER BY count(*) DESC LIMIT 1
after:
SELECT area_code  FROM area_code_state AS T1  JOIN votes AS T2 ON T1.state = T2.state  GROUP BY T1.area_code  ORDER BY COUNT(*) DESC  LIMIT 1

index is 699
before:
SELECT created , state , phone_number FROM votes WHERE contestant_number = (SELECT contestant_number FROM contestants WHERE contestant_name = 'Tabatha Gehling')
after:
SELECT created, state, phone_number  FROM VOTES  WHERE contestant_number = (     SELECT contestant_number      FROM CONTESTANTS      WHERE contestant_name = 'Tabatha Gehling' )

index is 700
before:
SELECT area_code FROM area_code_state WHERE (SELECT count(*) FROM votes WHERE contestant_number IN (SELECT contestant_number FROM contestants WHERE contestant_name = 'Tabatha Gehling' OR contestant_name = 'Kelly Clauss') AND state = area_code_state.state) >= 2
after:
SELECT area_code FROM area_code_state WHERE state IN (   SELECT state   FROM votes   WHERE contestant_number IN (     SELECT contestant_number     FROM contestants     WHERE contestant_name IN ('Tabatha Gehling', 'Kelly Clauss')   )   GROUP BY state   HAVING COUNT(DISTINCT contestant_number) = 2 )

index is 701
before:
SELECT contestant_name FROM contestants WHERE contestant_name LIKE '%Al%'
after:
SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'

index is 702
before:
SELECT name FROM country WHERE indepyear > 1950
after:
SELECT country.Name FROM country WHERE country.IndepYear > 1950

index is 703
before:
SELECT name FROM country WHERE indepyear > 1950
after:
SELECT name FROM country WHERE IndepYear > 1950

index is 704
before:
SELECT count(DISTINCT code) FROM country WHERE governmentform  =  'Republic'
after:
SELECT count(DISTINCT Code) FROM country WHERE GovernmentForm = 'Republic'

index is 705
before:
SELECT count(DISTINCT code) FROM country WHERE governmentform = 'Republic'
after:
SELECT count(DISTINCT Code) FROM country WHERE GovernmentForm = 'Republic'

index is 706
before:
SELECT SUM(surfacearea) FROM country WHERE region = 'Caribbean'
after:
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean'

index is 707
before:
SELECT sum(surfacearea) FROM country WHERE continent = 'Caribbean'
after:
SELECT SUM(SurfaceArea)  FROM country  WHERE Continent = 'Caribbean'

index is 708
before:
SELECT continent FROM country WHERE name = 'Anguilla'
after:
SELECT continent FROM country WHERE name = 'Anguilla'

index is 709
before:
SELECT continent FROM country WHERE name = 'Anguilla'
after:
SELECT Continent FROM country WHERE Name = 'Anguilla'

index is 710
before:
SELECT region FROM country JOIN city ON country.code = city.countrycode WHERE city.name = 'Kabul'
after:
SELECT country.Region  FROM city  JOIN country ON country.Code = city.CountryCode  WHERE city.Name = 'Kabul'

index is 711
before:
SELECT region FROM country WHERE name = 'Kabul'
after:
SELECT Region FROM country WHERE Name = 'Kabul'

index is 712
before:
SELECT language FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE name = 'Aruba') AND percentage = (SELECT max(percentage) FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE name = 'Aruba'))
after:
SELECT language FROM countrylanguage WHERE countrycode = (   SELECT code   FROM country   WHERE name = 'Aruba' ) ORDER BY percentage DESC LIMIT 1

index is 713
before:
SELECT language FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE name = 'Aruba')
after:
SELECT language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')

index is 714
before:
SELECT population , lifeexpectancy FROM country WHERE name = 'Brazil'
after:
SELECT population, lifeexpectancy FROM country WHERE Name = 'Brazil'

index is 715
before:
SELECT population , lifeexpectancy FROM country WHERE name = 'Brazil'
after:
SELECT Population, LifeExpectancy FROM country WHERE name = 'Brazil'

index is 716
before:
SELECT region ,  population FROM country WHERE name  =  'Angola'
after:
SELECT region, population FROM country WHERE Name = 'Angola'

index is 717
before:
SELECT region , population FROM country WHERE name = 'Angola'
after:
SELECT Region, Population FROM country WHERE name = 'Angola'

index is 718
before:
SELECT avg(lifeexpectancy) FROM country WHERE region = 'Central Africa'
after:
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa'

index is 719
before:
SELECT avg(lifeexpectancy) FROM country WHERE region = 'Central Africa' AND continent = 'Africa'
after:
SELECT avg(LifeExpectancy) AS AverageLifeExpectancy FROM country WHERE Region = 'Central Africa'

index is 720
before:
SELECT name FROM country WHERE continent = 'Asia' AND lifeexpectancy = (SELECT MIN(lifeexpectancy) FROM country WHERE continent = 'Asia')
after:
SELECT name  FROM country  WHERE continent = 'Asia'  AND lifeexpectancy = (   SELECT MIN(lifeexpectancy)    FROM country    WHERE continent = 'Asia' ) ORDER BY lifeexpectancy ASC  LIMIT 1

index is 721
before:
SELECT name FROM country WHERE continent = 'Asia' AND lifeexpectancy = (SELECT min(lifeexpectancy) FROM country WHERE continent = 'Asia')
after:
SELECT name FROM country WHERE continent = 'Asia' AND lifeexpectancy = (SELECT min(lifeexpectancy) FROM country WHERE continent = 'Asia') ORDER BY lifeexpectancy ASC LIMIT 1

index is 722
before:
SELECT sum(population) , max(GNP) FROM country WHERE continent = 'Asia'
after:
SELECT sum(population) AS total_population, max(GNP) AS maximum_GNP FROM country WHERE continent = 'Asia'

index is 723
before:
SELECT SUM(population) ,  MAX(gnp) FROM country WHERE continent = 'Asia'
after:
SELECT SUM(population) AS TotalPopulation, MAX(GNP) AS LargestGNP FROM country WHERE continent = 'Asia'

index is 724
before:
SELECT avg(lifeexpectancy) FROM country WHERE governmentform = 'Republic' AND continent = 'Africa'
after:
SELECT avg(LifeExpectancy) FROM country WHERE GovernmentForm = 'Republic' AND Continent = 'Africa'

index is 725
before:
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic'
after:
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic'

index is 726
before:
SELECT sum(surfacearea) FROM country WHERE continent IN ('Asia', 'Europe')
after:
SELECT SUM(SurfaceArea) AS TotalSurfaceArea FROM country WHERE continent IN ('Asia', 'Europe')

index is 727
before:
SELECT sum(surfacearea) FROM country WHERE continent = 'Asia' OR continent = 'Europe'
after:
SELECT sum(SurfaceArea) as TotalSurfaceArea FROM country WHERE continent = 'Asia' OR continent = 'Europe'

index is 728
before:
SELECT sum(population) FROM city WHERE district = 'Gelderland'
after:
SELECT sum(population) FROM city WHERE district = 'Gelderland'

index is 729
before:
SELECT sum(population) FROM city WHERE district = 'Gelderland'
after:
SELECT SUM(population) FROM city WHERE district = 'Gelderland'

index is 730
before:
SELECT avg(GNP) , sum(population) FROM country WHERE governmentform  =  'US Territory'
after:
SELECT avg(GNP) , sum(population)  FROM country  WHERE governmentform  =  'US Territory'

index is 731
before:
SELECT avg(GNP) ,  sum(population) FROM country WHERE governmentform = 'US Territory'
after:
SELECT avg(GNP) AS Mean_GNP, sum(population) AS Total_Population FROM country WHERE governmentform = 'US Territory'

index is 732
before:
SELECT count(DISTINCT language) FROM countrylanguage
after:
SELECT count(DISTINCT Language) FROM countrylanguage

index is 733
before:
SELECT count(DISTINCT language) FROM countrylanguage
after:
SELECT count(DISTINCT Language) AS NumberOfLanguages FROM countrylanguage

index is 734
before:
SELECT count(DISTINCT governmentform) FROM country WHERE continent = 'Africa'
after:
SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'

index is 735
before:
SELECT count(DISTINCT governmentform) FROM country WHERE continent = 'Africa'
after:
SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'

index is 736
before:
SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode = 'ABW'
after:
SELECT COUNT(DISTINCT Language) AS TotalLanguages FROM countrylanguage WHERE CountryCode = 'ABW'

index is 737
before:
SELECT count(DISTINCT language) FROM countrylanguage WHERE countrycode = 'ABW'
after:
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW'

index is 738
before:
SELECT count(DISTINCT language) FROM countrylanguage WHERE countrycode = 'AFG' AND isofficial = 'T'
after:
SELECT count(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'

index is 739
before:
SELECT count(language) FROM countrylanguage WHERE isofficial = 'T' AND countrycode = (SELECT code FROM country WHERE name = 'Afghanistan')
after:
SELECT COUNT(DISTINCT language) FROM countrylanguage  WHERE IsOfficial = 'T'  AND CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan')

index is 740
before:
SELECT name FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code GROUP BY country.name ORDER BY count(language) DESC LIMIT 1
after:
SELECT country.Name  FROM countrylanguage  JOIN country ON countrylanguage.CountryCode = country.Code  GROUP BY country.Code  ORDER BY COUNT(countrylanguage.Language) DESC  LIMIT 1

index is 741
before:
SELECT name FROM country WHERE code IN (SELECT countrycode FROM countrylanguage GROUP BY countrycode HAVING COUNT(DISTINCT language) = (SELECT MAX(cnt) FROM (SELECT COUNT(DISTINCT language) AS cnt FROM countrylanguage GROUP BY countrycode)))
after:
SELECT name FROM country WHERE code IN (     SELECT countrycode     FROM countrylanguage     GROUP BY countrycode     HAVING COUNT(DISTINCT language) = (         SELECT MAX(cnt)         FROM (             SELECT COUNT(DISTINCT language) AS cnt             FROM countrylanguage             GROUP BY countrycode         )     ) )

index is 742
before:
SELECT continent FROM countrylanguage GROUP BY continent ORDER BY count(DISTINCT language) DESC LIMIT 1
after:
SELECT continent FROM countrylanguage GROUP BY continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1

index is 743
before:
SELECT continent FROM countrylanguage GROUP BY continent ORDER BY count(language) DESC LIMIT 1
after:
SELECT continent FROM countrylanguage GROUP BY continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1

index is 744
before:
SELECT COUNT(DISTINCT countrycode) FROM countrylanguage WHERE language = 'Dutch' OR language = 'English' GROUP BY countrycode
after:
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language IN ('Dutch', 'English')

index is 745
before:
SELECT count(DISTINCT T1.code) FROM countrylanguage AS T1 WHERE T1.language IN ('Dutch', 'English')
after:
SELECT count(DISTINCT T1.CountryCode) FROM countrylanguage AS T1 WHERE T1.Language IN ('Dutch', 'English')

index is 746
before:
SELECT DISTINCT name FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language IN ('English', 'French') GROUP BY countrycode HAVING COUNT(DISTINCT language) = 2)
after:
SELECT DISTINCT name  FROM country  WHERE code IN (     SELECT countrycode      FROM countrylanguage      WHERE language IN ('English', 'French')      GROUP BY countrycode      HAVING COUNT(DISTINCT language) = 2 )

index is 747
before:
SELECT name FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language = 'English') AND code IN (SELECT countrycode FROM countrylanguage WHERE language = 'French')
after:
SELECT name FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language = 'English') AND code IN (SELECT countrycode FROM countrylanguage WHERE language = 'French');

index is 748
before:
SELECT name FROM country WHERE (SELECT COUNT(*) FROM countrylanguage WHERE language = 'English' AND isOfficial = 'T' AND countrycode = country.Code) > 0 AND (SELECT COUNT(*) FROM countrylanguage WHERE language = 'French' AND isOfficial = 'T' AND countrycode = country.Code) > 0
after:
SELECT name  FROM country  WHERE country.Code IN (     SELECT countrycode      FROM countrylanguage      WHERE language = 'English' AND isOfficial = 'T' )  AND country.Code IN (     SELECT countrycode      FROM countrylanguage      WHERE language = 'French' AND isOfficial = 'T' )

index is 749
before:
SELECT country.name FROM countrylanguage cl1 JOIN countrylanguage cl2 ON cl1.countrycode = cl2.countrycode JOIN country ON cl1.countrycode = country.code WHERE cl1.language = 'English' AND cl1.isofficial = 'T' AND cl2.language = 'French' AND cl2.isofficial = 'T'
after:
SELECT country.Name FROM countrylanguage AS cl1 JOIN country ON cl1.CountryCode = country.Code WHERE cl1.Language = 'English' AND cl1.IsOfficial = 'T' INTERSECT SELECT country.Name FROM countrylanguage AS cl2 JOIN country ON cl2.CountryCode = country.Code WHERE cl2.Language = 'French' AND cl2.IsOfficial = 'T'

index is 750
before:
SELECT count(DISTINCT continent) FROM countrylanguage WHERE language = 'Chinese'
after:
SELECT COUNT(DISTINCT country.Continent) AS distinct_continents FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE countrylanguage.Language = 'Chinese'

index is 751
before:
SELECT count(DISTINCT continent) FROM countrylanguage WHERE language = 'Chinese'
after:
SELECT COUNT(DISTINCT Continent) FROM countrylanguage  JOIN country ON countrylanguage.CountryCode = country.Code WHERE countrylanguage.Language = 'Chinese'

index is 752
before:
SELECT DISTINCT region FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language IN ('English', 'Dutch'))
after:
SELECT region FROM country WHERE code IN (   SELECT countrycode    FROM countrylanguage    WHERE language IN ('English', 'Dutch') ) GROUP BY region

index is 753
before:
SELECT DISTINCT region FROM country WHERE country.code IN (SELECT countrycode FROM countrylanguage WHERE language = 'Dutch' OR language = 'English')
after:
SELECT region FROM country  WHERE country.Code IN  (SELECT CountryCode FROM countrylanguage  WHERE Language IN ('Dutch', 'English'))

index is 754
before:
SELECT DISTINCT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE (countrylanguage.language = 'English' OR countrylanguage.language = 'Dutch') AND countrylanguage.isofficial = 'T'
after:
SELECT country.name FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE (countrylanguage.language = 'English' OR countrylanguage.language = 'Dutch') AND countrylanguage.isofficial = 'T'

index is 755
before:
SELECT DISTINCT name FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language IN ('English', 'Dutch') AND isofficial = 'T')
after:
SELECT DISTINCT Name FROM country WHERE Code IN (     SELECT CountryCode     FROM countrylanguage     WHERE Language IN ('English', 'Dutch')         AND IsOfficial = 'T' )

index is 756
before:
SELECT language FROM countrylanguage WHERE percentage = (SELECT max(percentage) FROM countrylanguage WHERE language IN (SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia'))) AND countrycode IN (SELECT code FROM country WHERE continent = 'Asia') GROUP BY language
after:
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Continent = 'Asia' GROUP BY countrylanguage.Language HAVING MAX(countrylanguage.Percentage) = (   SELECT MAX(Percentage)   FROM countrylanguage   JOIN country ON countrylanguage.CountryCode = country.Code   WHERE country.Continent = 'Asia' )

index is 757
before:
SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1
after:
SELECT language FROM countrylanguage WHERE CountryCode IN (     SELECT Code     FROM country     WHERE Continent = 'Asia' ) GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1

index is 758
before:
SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE governmentform = 'Republic') GROUP BY language HAVING count(countrycode) = 1
after:
SELECT language  FROM countrylanguage  WHERE countrycode IN (     SELECT code      FROM country      WHERE governmentform = 'Republic' )  GROUP BY language  HAVING COUNT(DISTINCT countrycode) = 1

index is 759
before:
SELECT DISTINCT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE governmentform = 'Republic') GROUP BY language HAVING count(*) = 1
after:
SELECT language FROM countrylanguage WHERE countrycode IN (     SELECT code     FROM country     WHERE governmentform = 'Republic' ) GROUP BY language HAVING COUNT(*) = 1

index is 760
before:
SELECT name FROM city WHERE population  =  (SELECT max(population) FROM city) AND CountryCode IN (SELECT code FROM countrylanguage WHERE Language  =  'English')
after:
SELECT city.Name FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE city.Population = (   SELECT MAX(city.Population)   FROM city   JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode   WHERE countrylanguage.Language = 'English' )

index is 761
before:
SELECT name FROM city WHERE countrycode  =  (SELECT code FROM countrylanguage WHERE language  =  'English' AND isofficial  =  'T') AND population  =  (SELECT max(population) FROM city WHERE countrycode  =  (SELECT code FROM countrylanguage WHERE language  =  'English' AND isofficial  =  'T'))
after:
SELECT city.Name  FROM city  JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode  JOIN country ON city.CountryCode = country.Code  WHERE countrylanguage.Language = 'English'  AND countrylanguage.IsOfficial = 'T'  ORDER BY city.Population DESC  LIMIT 1

index is 762
before:
SELECT name , population , lifeexpectancy FROM country WHERE continent = 'Asia' AND surfacearea = (SELECT MAX(surfacearea) FROM country WHERE continent = 'Asia')
after:
SELECT country.name, country.population, country.lifeexpectancy FROM country WHERE country.continent = 'Asia' AND country.surfacearea = (     SELECT MAX(country.surfacearea)     FROM country     WHERE country.continent = 'Asia' )

index is 763
before:
SELECT name , population , lifeexpectancy FROM country WHERE continent = 'Asia' ORDER BY surfacearea DESC LIMIT 1
after:
SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.Continent = 'Asia' ORDER BY country.SurfaceArea DESC LIMIT 1

index is 764
before:
SELECT AVG(lifeexpectancy) FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English' AND isofficial = true)
after:
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 1)

index is 765
before:
SELECT avg(lifeexpectancy) FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English' AND isofficial = 'T')
after:
SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language != 'English' AND IsOfficial = 'T')

index is 766
before:
select sum ( _ ) from _ where _ not in ( select _ from _ where _ ) | select sum(country.population) from country where country.code not in (select countrylanguage.countrycode from countrylanguage where countrylanguage.language = 'English')
after:
SELECT SELECT SUM(country.Population) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English')

index is 767
before:
SELECT sum(population) FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
after:
SELECT sum(Population)  FROM country  WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')

index is 768
before:
SELECT language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.headofstate = 'Beatrix'
after:
SELECT countrylanguage.Language  FROM countrylanguage  JOIN country ON countrylanguage.CountryCode = country.Code  WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T'

index is 769
before:
SELECT language FROM countrylanguage WHERE isofficial = 'T' AND countrycode = (SELECT code FROM country WHERE headofstate = 'Beatrix')
after:
SELECT countrylanguage.Language  FROM countrylanguage  JOIN country ON countrylanguage.CountryCode = country.Code  WHERE countrylanguage.IsOfficial = 'T'  AND country.Name = (SELECT Name FROM country WHERE country.HeadOfState = 'Beatrix')

index is 770
before:
SELECT count(DISTINCT language) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T'
after:
SELECT COUNT(DISTINCT countrylanguage.Language) AS TotalUniqueLanguages FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T'

index is 771
before:
SELECT count(DISTINCT language) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE indepyear < 1930
after:
SELECT count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930

index is 772
before:
SELECT name FROM country WHERE surfacearea > ALL (SELECT surfacearea FROM country WHERE continent = 'Europe')
after:
SELECT name  FROM country  WHERE surfacearea > (SELECT MAX(surfacearea) FROM country WHERE continent = 'Europe')

index is 773
before:
SELECT DISTINCT name FROM country WHERE surfacearea > (SELECT max(surfacearea) FROM country WHERE continent = 'Europe')
after:
SELECT DISTINCT name FROM country WHERE surfacearea > (   SELECT MAX(surfacearea)   FROM country   WHERE continent = 'Europe' )

index is 774
before:
select _ from _ where @.@ < any ( select @.@ from @ where @.@ = _ ) and @.@ = _ | select country.name from country where country.continent = 'Africa' and country.population < any (select country.population from country where country.continent = 'Asia')
after:
SELECT country.Name  FROM country  WHERE country.Continent = 'Africa'  AND country.Population < ANY (     SELECT country.Population      FROM country      WHERE country.Continent = 'Asia' )

index is 775
before:
SELECT name FROM country WHERE continent = 'Africa' AND population < ANY (SELECT population FROM country WHERE continent = 'Asia')
after:
SELECT country.Name FROM country WHERE country.Continent = 'Africa' AND country.Population < (SELECT MIN(Population) FROM country WHERE country.Continent = 'Asia')

index is 776
before:
select _ from _ where @.@ > all ( select _ from _ where @.@ = _ ) and @.@ = _ or @.@ = _ | select country.name from country where country.continent = 'Asia' and country.population > all (select population from country where continent = 'Africa')
after:
SELECT country.name  FROM country WHERE country.continent = 'Asia'    AND country.population > ALL (SELECT population                                  FROM country                                  WHERE continent = 'Africa')

index is 777
before:
SELECT DISTINCT name FROM country WHERE continent = 'Asia' AND population > (SELECT MAX(population) FROM country WHERE continent = 'Africa')
after:
SELECT name FROM country WHERE continent = 'Asia'   AND population > (     SELECT MAX(population)     FROM country     WHERE continent = 'Africa'   )

index is 778
before:
SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
after:
SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English');

index is 779
before:
SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
after:
SELECT country.Code  FROM country  WHERE country.Code NOT IN (     SELECT countrylanguage.CountryCode      FROM countrylanguage      WHERE countrylanguage.Language = 'English' )

index is 780
before:
SELECT DISTINCT countrycode FROM countrylanguage WHERE language <> 'English'
after:
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'

index is 781
before:
SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
after:
SELECT country.Code  FROM country  LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE countrylanguage.Language <> 'English' OR countrylanguage.Language IS NULL;

index is 782
before:
SELECT code FROM countrylanguage WHERE language != 'English' AND code NOT IN (SELECT code FROM country WHERE governmentform = 'Republic')
after:
SELECT countrylanguage.CountryCode  FROM countrylanguage  WHERE Language != 'English'  AND CountryCode NOT IN (SELECT Code FROM country WHERE GovernmentForm != 'Republic')

index is 783
before:
SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English') AND governmentform != 'Republic'
after:
SELECT code FROM country WHERE code NOT IN (     SELECT countrycode FROM countrylanguage WHERE language = 'English' ) AND governmentform <> 'Republic'

index is 784
before:
SELECT DISTINCT city.name FROM city, country, countrylanguage WHERE city.CountryCode = country.Code AND country.Continent = 'Europe' AND countrylanguage.CountryCode = country.Code AND countrylanguage.Language <> 'English'
after:
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Europe' AND countrylanguage.Language <> 'English'

index is 785
before:
SELECT DISTINCT name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.continent = 'Europe' AND countrylanguage.language <> 'English'
after:
SELECT name  FROM city  JOIN country ON city.CountryCode = country.Code  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE country.Continent = 'Europe'  AND countrylanguage.Language <> 'English'

index is 786
before:
SELECT DISTINCT name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE country.continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T'
after:
SELECT DISTINCT city.Name  FROM city  JOIN country ON city.CountryCode = country.Code  JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode  WHERE country.Continent = 'Asia'  AND countrylanguage.Language = 'Chinese'  AND countrylanguage.IsOfficial = 'T'

index is 787
before:
SELECT DISTINCT city.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
after:
SELECT DISTINCT city.Name  FROM city  JOIN country ON city.CountryCode = country.Code  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE country.Continent = 'Asia'    AND countrylanguage.Language = 'Chinese'    AND countrylanguage.IsOfficial = 'T'

index is 788
before:
SELECT name , indepyear , surfacearea FROM country WHERE population  =  (SELECT min(population) FROM country)
after:
SELECT name, indepyear, surfacearea FROM country WHERE population = (   SELECT MIN(population)   FROM country )

index is 789
before:
SELECT name ,  indepyear ,  surfacearea FROM country WHERE population  =  (SELECT min(population) FROM country)
after:
SELECT name, indepyear, surfacearea FROM country WHERE population = (SELECT min(population) FROM country)

index is 790
before:
SELECT population , name , headofstate FROM country ORDER BY surfacearea DESC LIMIT 1
after:
SELECT population, name, headofstate FROM country WHERE surfacearea = (   SELECT MAX(surfacearea)   FROM country )

index is 791
before:
SELECT name, population, headofstate FROM country ORDER BY surfacearea DESC LIMIT 1
after:
SELECT country.Name, country.Population, country.HeadOfState FROM country ORDER BY country.SurfaceArea DESC LIMIT 1

index is 792
before:
SELECT country.name , COUNT(countrylanguage.language) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name HAVING COUNT(countrylanguage.language) >= 3
after:
SELECT country.Name, COUNT(countrylanguage.Language) AS LanguageCount  FROM country  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  GROUP BY country.Name  HAVING LanguageCount >= 3

index is 793
before:
SELECT country.name , count(countrylanguage.language) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name HAVING count(countrylanguage.language) > 2
after:
SELECT country.Name, COUNT(DISTINCT countrylanguage.Language) AS LanguageCount FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name HAVING LanguageCount > 2

index is 794
before:
SELECT district ,  count(id) FROM city GROUP BY district HAVING population  >  (SELECT avg(population) FROM city)
after:
SELECT district, COUNT(ID) FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district

index is 795
before:
SELECT count(*) , district FROM city WHERE population  >  (SELECT avg(population) FROM city) GROUP BY district
after:
SELECT COUNT(*) AS city_count, district FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district

index is 796
before:
SELECT governmentform ,  SUM (population) FROM country GROUP BY governmentform HAVING AVG (lifeexpectancy)  >  72
after:
SELECT governmentform, SUM(population)  FROM country  GROUP BY governmentform  HAVING AVG(lifeexpectancy) > 72

index is 797
before:
SELECT governmentform ,  SUM(population) FROM country WHERE lifeexpectancy  >  72 GROUP BY governmentform
after:
SELECT governmentform, SUM(population) AS total_population  FROM country  WHERE lifeexpectancy > 72  GROUP BY governmentform

index is 798
before:
SELECT avg(lifeexpectancy) ,  sum(population) ,  continent FROM country GROUP BY continent HAVING avg(lifeexpectancy)  <  72
after:
SELECT avg(lifeexpectancy) AS avg_life_expectancy, sum(population) AS total_population, continent FROM country GROUP BY continent HAVING avg(lifeexpectancy) < 72

index is 799
before:
SELECT continent ,  sum(population) ,  avg(lifeExpectancy) FROM country GROUP BY continent HAVING avg(lifeExpectancy)  <  72
after:
SELECT continent, SUM(population), AVG(lifeExpectancy) FROM country GROUP BY continent HAVING AVG(lifeExpectancy) < 72

index is 800
before:
SELECT name , surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5
after:
SELECT country.Name, country.SurfaceArea FROM country ORDER BY country.SurfaceArea DESC LIMIT 5

index is 801
before:
SELECT name , surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5
after:
SELECT name, surfacearea  FROM country  ORDER BY surfacearea DESC  LIMIT 5

index is 802
before:
SELECT name FROM country ORDER BY population DESC LIMIT 3
after:
SELECT country.Name FROM country ORDER BY country.Population DESC LIMIT 3

index is 803
before:
SELECT name FROM country ORDER BY population DESC LIMIT 3
after:
SELECT country.Name FROM country ORDER BY country.Population DESC LIMIT 3

index is 804
before:
SELECT name FROM country ORDER BY population ASC LIMIT 3
after:
SELECT name FROM country ORDER BY population ASC LIMIT 3

index is 805
before:
SELECT name FROM country ORDER BY population ASC LIMIT 3
after:
SELECT country.Name FROM country ORDER BY country.Population ASC LIMIT 3

index is 806
before:
SELECT count(*) FROM country WHERE continent = 'Asia'
after:
SELECT count(*) FROM country WHERE continent = 'Asia'

index is 807
before:
SELECT count(DISTINCT name) FROM country WHERE continent = 'Asia'
after:
SELECT COUNT(DISTINCT Name) FROM country WHERE Continent = 'Asia'

index is 808
before:
SELECT name FROM country WHERE continent = 'Europe' AND population = 80000
after:
SELECT name FROM country WHERE continent = 'Europe' AND population = 80000

index is 809
before:
SELECT name FROM country WHERE continent = 'Europe' AND population = 80000
after:
SELECT name  FROM country  WHERE continent = 'Europe'  AND population = 80000

index is 810
before:
SELECT sum(population) , avg(surfacearea) FROM country WHERE continent = 'North America' AND surfacearea > 3000
after:
SELECT sum(population) AS total_population, avg(surfacearea) AS average_area FROM country WHERE continent = 'North America' AND surfacearea > 3000

index is 811
before:
SELECT sum(population) , avg(surfacearea) FROM country WHERE continent = 'North America' AND surfacearea > 3000 GROUP BY continent
after:
SELECT sum(population) AS total_population, avg(surfacearea) AS average_surface_area FROM country WHERE continent = 'North America' AND surfacearea > 3000 GROUP BY continent

index is 812
before:
SELECT name FROM city WHERE population BETWEEN 160000 AND 900000
after:
SELECT city.Name FROM city WHERE city.Population BETWEEN 160000 AND 900000

index is 813
before:
SELECT name FROM city WHERE population BETWEEN 160000 AND 900000
after:
SELECT city.Name FROM city WHERE city.Population BETWEEN 160000 AND 900000

index is 814
before:
SELECT language FROM countrylanguage GROUP BY language ORDER BY count(*) DESC LIMIT 1
after:
SELECT countrylanguage.Language  FROM countrylanguage  GROUP BY countrylanguage.Language  ORDER BY COUNT(*) DESC  LIMIT 1

index is 815
before:
SELECT language FROM countrylanguage GROUP BY language ORDER BY count(countrycode) DESC LIMIT 1
after:
SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY COUNT(DISTINCT countrylanguage.CountryCode) DESC LIMIT 1

index is 816
before:
SELECT T2.name FROM (SELECT countrycode, MAX(percentage) AS max_percentage FROM countrylanguage GROUP BY countrycode) AS T1 JOIN countrylanguage AS T2 ON T1.countrycode  =  T2.countrycode AND T1.max_percentage  =  T2.percentage GROUP BY T2.countrycode
after:
SELECT T2.Language FROM (SELECT CountryCode, MAX(Percentage) AS max_percentage FROM countrylanguage GROUP BY CountryCode) AS T1  JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode AND T1.max_percentage = T2.Percentage  GROUP BY T2.CountryCode

index is 817
before:
SELECT countrycode ,  language FROM countrylanguage GROUP BY countrycode HAVING MAX(percentage)
after:
SELECT countrycode, language  FROM countrylanguage  WHERE percentage = (SELECT MAX(percentage) FROM countrylanguage) GROUP BY countrycode

index is 818
before:
SELECT count(DISTINCT countrycode) FROM countrylanguage WHERE language = 'Spanish' AND percentage = (SELECT max(percentage) FROM countrylanguage WHERE language = 'Spanish')
after:
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')

index is 819
before:
SELECT count(DISTINCT countrycode) FROM countrylanguage WHERE language = 'Spanish' AND isofficial = 'T' AND percentage > 50 GROUP BY language
after:
SELECT COUNT(DISTINCT CountryCode)  FROM countrylanguage  WHERE Language = 'Spanish'  AND IsOfficial = 'T'  AND Percentage > 50

index is 820
before:
SELECT countrycode FROM countrylanguage WHERE language  =  'Spanish' AND percentage  =  (SELECT max(percentage) FROM countrylanguage WHERE language  =  'Spanish')
after:
SELECT countrycode  FROM countrylanguage  WHERE language = 'Spanish'  GROUP BY countrycode  HAVING percentage = (SELECT MAX(percentage)                      FROM countrylanguage                      WHERE language = 'Spanish')

index is 821
before:
SELECT countrycode FROM countrylanguage WHERE language = 'Spanish' AND percentage > 50
after:
SELECT countrycode FROM countrylanguage WHERE language = 'Spanish' AND percentage > 50;

index is 822
before:
SELECT count(Conductor_ID) FROM conductor
after:
SELECT COUNT(Conductor_ID) FROM conductor

index is 823
before:
SELECT count(DISTINCT conductor_id) FROM conductor
after:
SELECT COUNT(DISTINCT Conductor_ID) FROM conductor

index is 824
before:
SELECT name FROM conductor ORDER BY age ASC
after:
SELECT name FROM conductor ORDER BY age ASC

index is 825
before:
SELECT name FROM conductor ORDER BY age
after:
SELECT name  FROM conductor  ORDER BY age

index is 826
before:
SELECT name FROM conductor WHERE nationality != 'USA'
after:
SELECT name FROM conductor WHERE nationality <> 'USA'

index is 827
before:
SELECT name FROM conductor WHERE nationality <> "USA"
after:
SELECT name FROM conductor WHERE Nationality <> "USA"

index is 828
before:
SELECT record_company FROM orchestra ORDER BY year_of_founded DESC
after:
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC

index is 829
before:
SELECT record_company FROM orchestra ORDER BY year_of_founded DESC
after:
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC

index is 830
before:
SELECT avg(attendance) FROM show
after:
SELECT avg(Attendance) FROM show

index is 831
before:
SELECT avg(attendance) FROM show
after:
SELECT AVG(Attendance) FROM show

index is 832
before:
SELECT max(share) , min(share) FROM performance WHERE type <> 'Live final'
after:
SELECT max(Share), min(Share) FROM performance WHERE Type <> 'Live final'

index is 833
before:
SELECT max(share) ,  min(share) FROM performance WHERE type <> "Live final"
after:
SELECT max(share), min(share) FROM performance WHERE type <> 'Live final'

index is 834
before:
SELECT count(DISTINCT nationality) FROM conductor
after:
SELECT count(DISTINCT Nationality) FROM conductor

index is 835
before:
SELECT count(DISTINCT nationality) FROM conductor
after:
SELECT COUNT(DISTINCT Nationality) FROM conductor

index is 836
before:

after:
SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work DESC;

index is 837
before:
SELECT name FROM conductor ORDER BY year_of_work DESC
after:
SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work DESC

index is 838
before:
SELECT name FROM conductor ORDER BY year_of_work DESC LIMIT 1
after:
SELECT name  FROM conductor  ORDER BY Year_of_Work DESC  LIMIT 1

index is 839
before:
SELECT name FROM conductor ORDER BY year_of_work DESC LIMIT 1
after:
SELECT c.name FROM conductor c ORDER BY c.year_of_work DESC LIMIT 1

index is 840
before:
SELECT conductor.name ,  orchestra.orchestra FROM conductor JOIN orchestra ON conductor.conductor_id  =  orchestra.conductor_id
after:
SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID

index is 841
before:
SELECT conductor.name , orchestra.orchestra FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id
after:
SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID

index is 842
before:
SELECT name FROM conductor GROUP BY name HAVING count(orchestra_id) > 1
after:
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name HAVING COUNT(DISTINCT orchestra.Orchestra_ID) > 1

index is 843
before:
SELECT name FROM conductor GROUP BY name HAVING count(*)  >  1
after:
SELECT name FROM conductor GROUP BY name HAVING COUNT(DISTINCT Orchestra_ID) > 1

index is 844
before:
SELECT name FROM conductor GROUP BY name ORDER BY count(orchestra_id) DESC LIMIT 1
after:
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Conductor_ID ORDER BY COUNT(orchestra.Orchestra_ID) DESC LIMIT 1

index is 845
before:
SELECT name FROM conductor GROUP BY name ORDER BY count(orchestra_id) DESC LIMIT 1
after:
SELECT conductor.Name FROM conductor JOIN orchestra ON orchestra.Conductor_ID = conductor.Conductor_ID GROUP BY conductor.Name ORDER BY COUNT(orchestra.Orchestra_ID) DESC LIMIT 1

index is 846
before:
SELECT name FROM conductor WHERE year_of_work > 2008
after:
SELECT name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded > 2008

index is 847
before:
SELECT name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Year_of_Founded > 2008)
after:
SELECT name FROM conductor WHERE Conductor_ID IN (   SELECT Conductor_ID   FROM orchestra   WHERE Year_of_Founded > 2008 )

index is 848
before:
SELECT record_company ,  COUNT(DISTINCT orchestra_id) FROM orchestra GROUP BY record_company
after:
SELECT record_company, COUNT(DISTINCT Orchestra_ID)  FROM orchestra  GROUP BY record_company

index is 849
before:
SELECT COUNT(DISTINCT orchestra_id) ,  record_company FROM orchestra GROUP BY record_company
after:
SELECT COUNT(DISTINCT Orchestra_ID) AS num_orchestras, Record_Company FROM orchestra GROUP BY Record_Company

index is 850
before:
SELECT major_record_format FROM orchestra GROUP BY major_record_format ORDER BY count(major_record_format) ASC
after:
SELECT major_record_format, COUNT(*) AS format_count FROM orchestra GROUP BY major_record_format ORDER BY format_count ASC

index is 851
before:
SELECT major_record_format, COUNT(major_record_format) FROM orchestra GROUP BY major_record_format ORDER BY COUNT(major_record_format) DESC
after:
SELECT major_record_format, COUNT(major_record_format)  FROM orchestra  GROUP BY major_record_format  ORDER BY COUNT(major_record_format) DESC

index is 852
before:
SELECT record_company FROM orchestra GROUP BY record_company ORDER BY COUNT(*) DESC LIMIT 1
after:
SELECT record_company, COUNT(*) AS num_orchestras FROM orchestra GROUP BY record_company ORDER BY num_orchestras DESC LIMIT 1

index is 853
before:
SELECT record_company FROM orchestra GROUP BY record_company ORDER BY count(orchestra_id) DESC LIMIT 1
after:
SELECT record_company, COUNT(orchestra_id) AS num_orchestras FROM orchestra GROUP BY record_company ORDER BY num_orchestras DESC LIMIT 1

index is 854
before:
SELECT orchestra FROM orchestra WHERE NOT EXISTS (SELECT orchestra_id FROM performance WHERE orchestra.orchestra_id = performance.orchestra_id)
after:
SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)

index is 855
before:
SELECT orchestra FROM orchestra WHERE NOT EXISTS (SELECT * FROM performance WHERE orchestra.orchestra_id = performance.orchestra_id)
after:
SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)

index is 856
before:
SELECT DISTINCT record_company FROM orchestra WHERE year_of_founded < 2003 AND year_of_founded > 2003
after:
SELECT SELECT DISTINCT Record_Company FROM orchestra WHERE year_of_founded < 2003 OR year_of_founded > 2003

index is 857
before:
SELECT record_company FROM orchestra WHERE year_of_founded  <  2003 AND year_of_founded  >  2003 GROUP BY record_company
after:
SELECT There is an issue with the given SQL query. The condition `year_of_founded < 2003 AND year_of_founded > 2003` will not retrieve any records because no year can be both less than 2003 and greater than 2003 at the same time. Additionally, the query is missing the table join condition to connect the `orchestra` table with the `conductor` table.  Here's the fixed SQLite SQL query:  ```sql SELECT DISTINCT o.record_company FROM orchestra o JOIN conductor c ON o.conductor_id = c.conductor_id WHERE o.year_of_founded < 2003 OR o.year_of_founded > 2003 GROUP BY o.record_company; ```  This query selects the distinct record companies from the `orchestra` table, considering only the orchestras that were founded either before 2003 or after 2003. The `JOIN` clause connects the `orchestra` table with the `conductor` table using the `conductor_id` foreign key. The `GROUP BY` clause is used to group the results by the `record_company` column.

index is 858
before:
SELECT count(DISTINCT orchestra_id) FROM orchestra WHERE major_record_format = "CD" OR major_record_format = "DVD"
after:
SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD'

index is 859
before:
SELECT COUNT(DISTINCT orchestra_id) FROM orchestra WHERE major_record_format IN ('CD', 'DVD')
after:
SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD')

index is 860
before:
SELECT DISTINCT year_of_founded FROM orchestra GROUP BY year_of_founded HAVING count(performance_id)  >  1
after:
SELECT year_of_founded FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY orchestra.year_of_founded HAVING count(DISTINCT performance.Performance_ID) > 1

index is 861
before:
SELECT year_of_founded FROM orchestra GROUP BY year_of_founded HAVING count(*)  >  1
after:
SELECT year_of_founded FROM orchestra  JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY orchestra.year_of_founded HAVING COUNT(DISTINCT performance.Performance_ID) > 1

index is 862
before:
SELECT count(id) FROM highschooler
after:
SELECT count(ID) FROM Highschooler

index is 863
before:
SELECT count(*) FROM highschooler
after:
SELECT COUNT(*) FROM Highschooler

index is 864
before:
SELECT name , grade FROM highschooler
after:
SELECT name, grade FROM Highschooler

index is 865
before:
SELECT name , grade FROM highschooler
after:
SELECT name, grade FROM Highschooler

index is 866
before:
SELECT grade FROM highschooler
after:
SELECT grade FROM Highschooler

index is 867
before:
SELECT grade FROM highschooler
after:
SELECT grade FROM Highschooler

index is 868
before:
SELECT grade FROM highschooler WHERE name = "Kyle"
after:
SELECT grade FROM Highschooler WHERE name = "Kyle"

index is 869
before:
SELECT grade FROM highschooler WHERE name = "Kyle"
after:
SELECT grade FROM Highschooler WHERE name = "Kyle"

index is 870
before:
SELECT name FROM highschooler WHERE grade = 10
after:
SELECT Highschooler.name FROM Highschooler WHERE Highschooler.grade = 10

index is 871
before:
SELECT name FROM highschooler WHERE grade  =  10
after:
SELECT Highschooler.name FROM Highschooler WHERE Highschooler.grade = 10

index is 872
before:
SELECT id FROM highschooler WHERE name  =  'Kyle'
after:
SELECT ID FROM Highschooler WHERE name = 'Kyle'

index is 873
before:
SELECT id FROM highschooler WHERE name = "Kyle"
after:
SELECT ID FROM Highschooler WHERE name = "Kyle"

index is 874
before:
SELECT count(*) FROM highschooler WHERE grade = 9 OR grade = 10
after:
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10)

index is 875
before:
SELECT count(*) FROM highschooler WHERE grade  =  9 OR grade  =  10
after:
SELECT count(*) FROM Highschooler WHERE grade IN (9, 10)

index is 876
before:
SELECT grade , count(*) FROM highschooler GROUP BY grade
after:
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade

index is 877
before:
SELECT grade , count(*) FROM highschooler GROUP BY grade
after:
SELECT grade, COUNT(*)  FROM Highschooler  GROUP BY grade

index is 878
before:
SELECT grade FROM highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
after:
SELECT grade, COUNT(*) AS count FROM Highschooler GROUP BY grade ORDER BY count DESC LIMIT 1

index is 879
before:
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
after:
SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1

index is 880
before:
SELECT grade FROM takes GROUP BY grade HAVING count(DISTINCT ID) >= 4
after:
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(DISTINCT ID) >= 4

index is 881
before:
SELECT DISTINCT grade FROM highschooler GROUP BY grade HAVING count(*)  >=  4
after:
SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4

index is 882
before:
SELECT student_id ,  COUNT(friend_id) FROM friend GROUP BY student_id
after:
SELECT student_id, COUNT(friend_id)  FROM Friend  GROUP BY student_id

index is 883
before:
SELECT T1.id ,  count(T2.friend_id) FROM highschooler AS T1 LEFT JOIN friend AS T2 ON T1.id  =  T2.student_id GROUP BY T1.id
after:
SELECT T1.ID, COUNT(T2.friend_id) AS friend_count  FROM Highschooler AS T1  LEFT JOIN Friend AS T2 ON T1.ID = T2.student_id  GROUP BY T1.ID

index is 884
before:
SELECT T1.name ,  count(T2.friend_id) FROM highschooler AS T1 JOIN friend AS T2 ON T1.id  =  T2.student_id GROUP BY T1.name
after:
SELECT T1.name, COUNT(T2.friend_id)  FROM Highschooler AS T1  JOIN Friend AS T2 ON T1.ID = T2.student_id  GROUP BY T1.name

index is 885
before:
SELECT highschooler.name ,  COUNT(friend_id) FROM highschooler JOIN friend ON highschooler.id  =  friend.student_id GROUP BY highschooler.name
after:
SELECT highschooler.name, COUNT(friend.friend_id) FROM highschooler JOIN friend ON highschooler.ID = friend.student_id GROUP BY highschooler.name

index is 886
before:
SELECT name FROM highschooler GROUP BY name ORDER BY count(*) DESC LIMIT 1
after:
SELECT Highschooler.name FROM highschooler JOIN friend ON friend.student_id = highschooler.ID GROUP BY highschooler.ID, highschooler.name ORDER BY COUNT(friend.friend_id) DESC LIMIT 1

index is 887
before:
SELECT T1.name FROM highschooler AS T1 JOIN friend AS T2 ON T1.id  =  T2.student_id GROUP BY T1.id ORDER BY count(T2.friend_id) DESC LIMIT 1
after:
SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY COUNT(T2.friend_id) DESC LIMIT 1

index is 888
before:
SELECT name FROM Highschooler GROUP BY name HAVING COUNT(*)  >=  3
after:
SELECT name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID, Highschooler.name HAVING COUNT(Friend.friend_id) >= 3

index is 889
before:
SELECT name FROM highschooler GROUP BY name HAVING count(*)  >=  3
after:
SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID, Highschooler.name HAVING COUNT(Friend.friend_id) >= 3

index is 890
before:
SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.friend_id WHERE Highschooler.name = 'Kyle'
after:
SELECT Highschooler.name  FROM Highschooler  JOIN Friend ON Highschooler.ID = Friend.friend_id  WHERE Friend.student_id = (     SELECT ID      FROM Highschooler      WHERE name = 'Kyle' )

index is 891
before:
SELECT T2.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T1.name = 'Kyle'
after:
SELECT T2.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id JOIN Highschooler AS T3 ON T2.friend_id = T3.ID WHERE T1.name = 'Kyle'

index is 892
before:
SELECT count(friend_id) FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id WHERE Highschooler.name = 'Kyle'
after:
SELECT count(*) FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.friend_id WHERE Highschooler.name = 'Kyle'

index is 893
before:
SELECT count(*) FROM highschooler WHERE name = 'Kyle'
after:
SELECT count(*) FROM Friend JOIN Highschooler ON Friend.friend_id = Highschooler.ID WHERE Highschooler.name = 'Kyle'

index is 894
before:
SELECT id FROM highschooler WHERE NOT EXISTS (SELECT * FROM friend WHERE highschooler.id = friend.student_id)
after:
SELECT Highschooler.ID FROM Highschooler WHERE NOT EXISTS (     SELECT *     FROM Friend     WHERE Highschooler.ID = Friend.student_id )

index is 895
before:
SELECT id FROM highschooler WHERE NOT EXISTS (SELECT student_id FROM friend WHERE friend.student_id  =  highschooler.id)
after:
SELECT Highschooler.ID  FROM Highschooler  WHERE Highschooler.ID NOT IN (SELECT friend.student_id FROM Friend)

index is 896
before:
SELECT name FROM Highschooler WHERE NOT EXISTS (SELECT * FROM Friend WHERE Friend.student_id = Highschooler.ID)
after:
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)

index is 897
before:
SELECT name FROM highschooler WHERE NOT EXISTS (SELECT * FROM friend WHERE friend.student_id = highschooler.id)
after:
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)

index is 898
before:
SELECT DISTINCT T1.id FROM highschooler AS T1 WHERE EXISTS ( SELECT * FROM friend AS T2 WHERE T2.student_id  =  T1.id ) AND EXISTS ( SELECT * FROM Likes AS T3 WHERE T3.student_id  =  T1.id )
after:
SELECT T1.ID  FROM Highschooler AS T1  WHERE EXISTS (     SELECT *      FROM Friend AS T2      WHERE T2.student_id = T1.ID )  AND EXISTS (     SELECT *      FROM Likes AS T3      WHERE T3.liked_id = T1.ID )

index is 899
before:
SELECT DISTINCT T1.student_id FROM friend AS T1 WHERE T1.student_id IN (SELECT DISTINCT T2.id FROM highschooler AS T2) AND T1.student_id IN (SELECT DISTINCT T3.student_id FROM likes AS T3)
after:
SELECT T1.student_id FROM Friend AS T1 WHERE T1.student_id IN (     SELECT DISTINCT T2.ID     FROM Highschooler AS T2 ) AND T1.student_id IN (     SELECT DISTINCT T3.student_id     FROM Likes AS T3 )

index is 900
before:
SELECT DISTINCT name FROM highschooler WHERE EXISTS (SELECT * FROM friend WHERE highschooler.id = friend.student_id) AND EXISTS (SELECT * FROM likes WHERE highschooler.id = likes.student_id)
after:
SELECT DISTINCT highschooler.name FROM highschooler WHERE EXISTS (   SELECT *   FROM friend   WHERE highschooler.ID = friend.student_id ) AND EXISTS (   SELECT *   FROM likes   WHERE highschooler.ID = likes.student_id )

index is 901
before:
SELECT name FROM highschooler WHERE EXISTS (SELECT * FROM friend WHERE highschooler.id = friend.student_id) AND EXISTS (SELECT * FROM likes WHERE highschooler.id = likes.student_id)
after:
SELECT Highschooler.name FROM Highschooler WHERE EXISTS (   SELECT *   FROM Friend   WHERE Highschooler.ID = Friend.student_id ) AND EXISTS (   SELECT *   FROM Likes   WHERE Highschooler.ID = Likes.student_id )

index is 902
before:
SELECT count(*) ,  student_id FROM likes GROUP BY student_id
after:
SELECT COUNT(*) AS like_count, student_id FROM Likes GROUP BY student_id

index is 903
before:
SELECT student_id, count(*) FROM likes GROUP BY student_id
after:
SELECT student_id, COUNT(*) AS likes_count FROM Likes GROUP BY student_id

index is 904
before:
SELECT T1.name ,  count(T2.*) FROM highschooler AS T1 JOIN likes AS T2 ON T1.id  =  T2.student_id GROUP BY T1.name
after:
SELECT T1.name, COUNT(T2.*)  FROM Highschooler AS T1  JOIN Likes AS T2 ON T1.ID = T2.student_id  GROUP BY T1.name

index is 905
before:
SELECT highschooler.name , count(likes.liked_id) FROM highschooler JOIN likes ON highschooler.id = likes.student_id GROUP BY highschooler.name
after:
SELECT highschooler.name, COUNT(likes.liked_id) FROM highschooler JOIN likes ON highschooler.ID = likes.student_id GROUP BY highschooler.name

index is 906
before:
SELECT name FROM highschooler ORDER BY id DESC LIMIT 1
after:
SELECT Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id GROUP BY Highschooler.ID ORDER BY COUNT(Likes.liked_id) DESC LIMIT 1

index is 907
before:
SELECT T2.name FROM highschooler AS T1 JOIN likes AS T2 ON T1.id  =  T2.student_id GROUP BY T2.student_id ORDER BY count(*) DESC LIMIT 1
after:
SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY COUNT(*) DESC LIMIT 1

index is 908
before:
SELECT DISTINCT T1.name FROM highschooler AS T1 JOIN likes AS T2 ON T1.id  =  T2.student_id GROUP BY T1.name HAVING COUNT(*)  >=  2
after:
SELECT T1.name  FROM Highschooler AS T1  JOIN Likes AS T2 ON T1.ID = T2.student_id  GROUP BY T1.name  HAVING COUNT(T2.liked_id) >= 2

index is 909
before:
SELECT name FROM highschooler JOIN likes ON highschooler.id = likes.student_id GROUP BY name HAVING COUNT(*) >= 2
after:
SELECT name FROM Highschooler  JOIN Likes ON Highschooler.ID = Likes.student_id  GROUP BY Highschooler.name  HAVING COUNT(Likes.liked_id) >= 2

index is 910
before:
SELECT DISTINCT name FROM highschooler JOIN friend ON highschooler.id = friend.student_id JOIN likes ON highschooler.id = likes.student_id WHERE grade > 5 AND COUNT(DISTINCT friend.friend_id) >= 2 GROUP BY name
after:
SELECT name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id JOIN Likes ON Highschooler.ID = Likes.student_id WHERE Highschooler.grade > 5 GROUP BY Highschooler.ID, Highschooler.name HAVING COUNT(DISTINCT Friend.friend_id) >= 2

index is 911
before:
SELECT name FROM highschooler WHERE grade > 5 AND (SELECT count(*) FROM friend WHERE friend.student_id = highschooler.id) >= 2
after:
SELECT name FROM Highschooler WHERE grade > 5 AND ID IN (   SELECT student_id   FROM Friend   GROUP BY student_id   HAVING COUNT(*) >= 2 )

index is 912
before:
SELECT COUNT(*) FROM likes WHERE student_id  =  (SELECT id FROM highschooler WHERE name  =  'Kyle')
after:
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')

index is 913
before:
SELECT count(liked_id) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
after:
SELECT count(liked_id) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')

index is 914
before:
SELECT avg(grade) FROM highschooler WHERE id IN (SELECT DISTINCT student_id FROM friend)
after:
SELECT AVG(grade) FROM Highschooler WHERE ID IN (SELECT DISTINCT student_id FROM Friend)

index is 915
before:
SELECT avg(grade) FROM highschooler WHERE id IN (SELECT student_id FROM friend)
after:
SELECT avg(grade)  FROM Highschooler  WHERE ID IN (SELECT student_id FROM Friend)

index is 916
before:
SELECT min(grade) FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)
after:
SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)

index is 917
before:
SELECT min(grade) FROM highschooler WHERE id NOT IN (SELECT DISTINCT student_id FROM friend)
after:
SELECT min(grade)  FROM Highschooler  WHERE ID NOT IN (SELECT DISTINCT student_id FROM Friend)

index is 918
before:
SELECT DISTINCT state FROM owners WHERE state IN (SELECT DISTINCT state FROM professionals)
after:
SELECT DISTINCT state  FROM Owners  WHERE state IN (SELECT DISTINCT state FROM Professionals)

index is 919
before:
SELECT DISTINCT state FROM professionals INTERSECT SELECT DISTINCT state FROM owners
after:
SELECT DISTINCT state FROM Owners INNER JOIN Professionals ON Owners.state = Professionals.state

index is 920
before:
SELECT AVG(age) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id
after:
SELECT AVG(dogs.age) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id

index is 921
before:
SELECT AVG(age) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id
after:
SELECT AVG(dogs.age) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id

index is 922
before:
SELECT professional_id , last_name , cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING count(*) > 2)
after:
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) > 2)

index is 923
before:
SELECT professional_id ,  last_name ,  cell_number FROM professionals WHERE state  =  'Indiana' OR (SELECT count(*) FROM treatments WHERE professional_id = professionals.professional_id)  >  2
after:
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (     SELECT professional_id     FROM Treatments     GROUP BY professional_id     HAVING COUNT(*) > 2 )

index is 924
before:
SELECT name FROM dogs WHERE NOT EXISTS (SELECT * FROM treatments WHERE treatments.dog_id = dogs.dog_id AND treatments.cost_of_treatment > 1000)
after:
SELECT name  FROM Dogs  WHERE dog_id NOT IN (     SELECT dog_id      FROM Treatments      WHERE cost_of_treatment > 1000 )

index is 925
before:
SELECT DISTINCT T1.name FROM dogs AS T1 WHERE NOT EXISTS (SELECT T2.cost_of_treatment FROM treatments AS T2 WHERE T2.owner_id  =  T1.owner_id AND T2.cost_of_treatment  >  1000)
after:
SELECT T1.name  FROM Dogs AS T1  WHERE NOT EXISTS (     SELECT T2.cost_of_treatment      FROM Treatments AS T2      INNER JOIN Dogs AS T3 ON T3.dog_id = T2.dog_id     INNER JOIN Owners AS T4 ON T4.owner_id = T3.owner_id     WHERE T4.owner_id = T1.owner_id AND T2.cost_of_treatment > 1000 )

index is 926
before:
SELECT first_name FROM professionals WHERE first_name NOT IN (SELECT name FROM dogs) UNION SELECT first_name FROM owners WHERE first_name NOT IN (SELECT name FROM dogs)
after:
SELECT first_name FROM professionals WHERE first_name NOT IN (SELECT name FROM dogs)  UNION  SELECT first_name FROM owners WHERE first_name NOT IN (SELECT name FROM dogs)

index is 927
before:
SELECT DISTINCT T1.first_name FROM professionals AS T1 WHERE T1.first_name NOT IN (SELECT T2.name FROM dogs AS T2) OR T1.first_name NOT IN (SELECT T3.first_name FROM owners AS T3)
after:
SELECT DISTINCT T1.first_name  FROM Professionals AS T1  WHERE T1.first_name NOT IN (     SELECT T2.name      FROM Dogs AS T2 ) AND T1.first_name NOT IN (     SELECT T3.first_name      FROM Owners AS T3 )

index is 928
before:
SELECT professional_id ,  role_code ,  email_address FROM professionals WHERE NOT EXISTS (SELECT * FROM treatments WHERE treatments.professional_id = professionals.professional_id)
after:
SELECT professional_id, role_code, email_address FROM Professionals WHERE professional_id NOT IN (     SELECT professional_id     FROM Treatments )

index is 929
before:
SELECT professional_id , role_code , email_address FROM professionals WHERE NOT EXISTS (SELECT * FROM treatments WHERE treatments.professional_id  =  professionals.professional_id)
after:
SELECT professional_id, role_code, email_address  FROM Professionals  WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)

index is 930
before:
SELECT owner_id ,  first_name ,  last_name FROM owners GROUP BY owner_id, first_name, last_name ORDER BY count(*) DESC LIMIT 1
after:
SELECT owner_id, first_name, last_name  FROM Owners  GROUP BY owner_id, first_name, last_name  ORDER BY COUNT(*) DESC  LIMIT 1

index is 931
before:
SELECT owner_id ,  first_name ,  last_name FROM owners GROUP BY owner_id ORDER BY count(*) DESC LIMIT 1
after:
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1

index is 932
before:
SELECT professional_id , role_code , first_name FROM professionals GROUP BY professional_id HAVING count(*)  >=  2
after:
SELECT professional_id, role_code, first_name FROM Professionals GROUP BY professional_id, role_code, first_name HAVING COUNT(*) >= 2

index is 933
before:
SELECT professional_id , role_code , first_name FROM professionals GROUP BY professional_id , role_code , first_name HAVING count(*) >= 2
after:
SELECT professional_id, role_code, first_name FROM Professionals GROUP BY professional_id, role_code, first_name HAVING COUNT(*) >= 2

index is 934
before:
SELECT breed_name FROM breeds GROUP BY breed_name ORDER BY count(*) DESC LIMIT 1
after:
SELECT breed_name  FROM Breeds  GROUP BY breed_name  ORDER BY COUNT(*) DESC  LIMIT 1

index is 935
before:
SELECT breed_name FROM breeds GROUP BY breed_name ORDER BY COUNT(*) DESC LIMIT 1
after:
SELECT breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY breed_name ORDER BY COUNT(*) DESC LIMIT 1

index is 936
before:
SELECT owner_id , last_name FROM owners GROUP BY owner_id , last_name ORDER BY sum(cost_of_treatment) DESC LIMIT 1
after:
SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.last_name ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1

index is 937
before:
SELECT owner_id ,  last_name FROM owners WHERE owner_id  =  (SELECT owner_id FROM dogs JOIN treatments ON treatments.dog_id = dogs.dog_id GROUP BY owner_id ORDER BY sum(cost_of_treatment) DESC LIMIT 1)
after:
SELECT Owners.owner_id, Owners.last_name FROM Owners WHERE owner_id = (   SELECT owner_id   FROM Dogs   JOIN Treatments ON Treatments.dog_id = Dogs.dog_id   GROUP BY Dogs.owner_id   ORDER BY SUM(Treatments.cost_of_treatment) DESC   LIMIT 1 )

index is 938
before:
SELECT treatment_type_description FROM treatment_types ORDER BY (SELECT SUM(cost_of_treatment) FROM treatments WHERE treatment_types.treatment_type_code = treatments.treatment_type_code) ASC LIMIT 1
after:
SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY Treatment_Types.treatment_type_description ORDER BY SUM(Treatments.cost_of_treatment) ASC LIMIT 1

index is 939
before:
SELECT treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code  =  treatment_types.treatment_type_code GROUP BY treatments.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
after:
SELECT treatment_type_description  FROM Treatment_Types  JOIN Treatments ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code  GROUP BY Treatments.treatment_type_code  ORDER BY SUM(cost_of_treatment) ASC  LIMIT 1

index is 940
before:
SELECT owners.owner_id , owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY owners.owner_id ORDER BY sum(treatments.cost_of_treatment) DESC LIMIT 1
after:
SELECT owners.owner_id, owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY owners.owner_id ORDER BY SUM(treatments.cost_of_treatment) DESC LIMIT 1

index is 941
before:
SELECT owners.owner_id ,  owners.zip_code FROM owners WHERE owners.owner_id  =  (SELECT dogs.owner_id FROM treatments JOIN dogs ON treatments.dog_id  =  dogs.dog_id GROUP BY dogs.owner_id ORDER BY sum(cost_of_treatment) DESC LIMIT 1)
after:
SELECT owners.owner_id, owners.zip_code  FROM owners  WHERE owners.owner_id = (     SELECT dogs.owner_id      FROM treatments      JOIN dogs ON treatments.dog_id = dogs.dog_id      GROUP BY dogs.owner_id      ORDER BY SUM(cost_of_treatment) DESC      LIMIT 1 )

index is 942
before:
SELECT professional_id , cell_number FROM professionals GROUP BY professional_id , cell_number HAVING count(DISTINCT treatment_type_code)  >=  2
after:
SELECT professional_id, cell_number  FROM Professionals  JOIN Treatments ON Professionals.professional_id = Treatments.professional_id  GROUP BY Professionals.professional_id, Professionals.cell_number  HAVING COUNT(DISTINCT Treatments.treatment_type_code) >= 2

index is 943
before:
SELECT professional_id ,  cell_number FROM professionals GROUP BY professional_id HAVING count(DISTINCT treatment_type_code)  >  1
after:
SELECT professional_id, cell_number  FROM Professionals  GROUP BY professional_id  HAVING COUNT(DISTINCT treatment_type_code) > 1

index is 944
before:
SELECT first_name ,  last_name FROM professionals WHERE cost_of_treatment  <  (SELECT avg(cost_of_treatment) FROM treatments)
after:
SELECT Professionals.first_name, Professionals.last_name  FROM Professionals  WHERE Professionals.professional_id IN (   SELECT Treatments.professional_id   FROM Treatments   WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments) )

index is 945
before:
SELECT first_name ,  last_name FROM professionals WHERE cost_of_treatment  <  (SELECT avg(cost_of_treatment) FROM treatments)
after:
SELECT professionals.first_name, professionals.last_name FROM professionals INNER JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)

index is 946
before:
SELECT date_of_treatment , first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id
after:
SELECT treatments.date_of_treatment, professionals.first_name  FROM treatments  JOIN professionals ON treatments.professional_id = professionals.professional_id;

index is 947
before:
SELECT date_of_treatment, first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id
after:
SELECT treatments.date_of_treatment, professionals.first_name  FROM treatments  JOIN professionals ON treatments.professional_id = professionals.professional_id

index is 948
before:
SELECT cost_of_treatment ,  treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code  =  treatment_types.treatment_type_code
after:
SELECT cost_of_treatment, treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code

index is 949
before:
SELECT cost_of_treatment ,  treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code  =  treatment_types.treatment_type_code
after:
SELECT treatments.cost_of_treatment, treatment_types.treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code

index is 950
before:
SELECT owners.first_name , owners.last_name , sizes.size_description FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN sizes ON dogs.size_code = sizes.size_code
after:
SELECT owners.first_name, owners.last_name, sizes.size_description  FROM owners  JOIN dogs ON owners.owner_id = dogs.owner_id  JOIN sizes ON dogs.size_code = sizes.size_code

index is 951
before:
SELECT owners.first_name ,  owners.last_name ,  sizes.size_description FROM owners JOIN dogs ON owners.owner_id  =  dogs.owner_id JOIN sizes ON dogs.size_code  =  sizes.size_code
after:
SELECT owners.first_name, owners.last_name, sizes.size_description  FROM owners  JOIN dogs ON owners.owner_id = dogs.owner_id  JOIN sizes ON

index is 952
before:
SELECT owners.first_name , dogs.name FROM owners , dogs WHERE owners.owner_id  =  dogs.owner_id
after:
SELECT owners.first_name, dogs.name  FROM owners  JOIN dogs ON owners.owner_id = dogs.owner_id

index is 953
before:
SELECT owners.first_name , dogs.name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id
after:
SELECT owners.first_name, dogs.name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id

index is 954
before:
SELECT T1.name ,  T2.date_of_treatment FROM dogs AS T1 JOIN treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  (SELECT T3.breed_code FROM breeds AS T3 ORDER BY count(T1.breed_code) ASC LIMIT 1)
after:
SELECT T1.name, T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = (     SELECT T3.breed_code     FROM Breeds AS T3     GROUP BY T3.breed_code     ORDER BY COUNT(T1.breed_code) ASC     LIMIT 1 )

index is 955
before:
SELECT dogs.name , treatments.date_of_treatment FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE breeds.breed_code IN (SELECT breed_code FROM breeds GROUP BY breed_code HAVING COUNT(*) = (SELECT MIN(count(*)) FROM breeds)) GROUP BY dogs.name , treatments.date_of_treatment
after:
SELECT dogs.name, treatments.date_of_treatment FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE breeds.breed_code IN (     SELECT breed_code     FROM breeds     GROUP BY breed_code     HAVING COUNT(*) = (         SELECT MIN(count(*))         FROM breeds     ) ) GROUP BY dogs.name, treatments.date_of_treatment

index is 956
before:
SELECT owners.first_name ,  dogs.name FROM owners JOIN dogs ON owners.owner_id  =  dogs.owner_id WHERE owners.state = 'Virginia'
after:
SELECT owners.first_name, dogs.name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE owners.state = 'Virginia'

index is 957
before:
SELECT owners.first_name, dogs.name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE owners.state = 'Virginia'
after:
SELECT owners.first_name, dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'Virginia'

index is 958
before:
SELECT date_arrived ,  date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)
after:
SELECT date_arrived, date_departed FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)

index is 959
before:
SELECT date_arrived , date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)
after:
SELECT dogs.date_arrived, dogs.date_departed  FROM dogs  INNER JOIN treatments ON dogs.dog_id = treatments.dog_id

index is 960
before:
SELECT last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id ORDER BY dogs.age ASC LIMIT 1
after:
SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id ORDER BY dogs.age DESC LIMIT 1

index is 961
before:
SELECT last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id ORDER BY dogs.date_of_birth LIMIT 1
after:
SELECT owners.last_name  FROM owners  JOIN dogs ON owners.owner_id = dogs.owner_id  ORDER BY dogs.date_of_birth  LIMIT 1

index is 962
before:
SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'
after:
SELECT email_address  FROM Professionals  WHERE state IN ('Hawaii', 'Wisconsin')

index is 963
before:
SELECT email_address FROM professionals WHERE state  IN  ('Hawaii', 'Wisconsin')
after:
SELECT email_address  FROM Professionals  WHERE state IN ('Hawaii', 'Wisconsin')

index is 964
before:
SELECT date_arrived ,  date_departed FROM dogs
after:
SELECT date_arrived, date_departed FROM Dogs

index is 965
before:
SELECT date_arrived ,  date_departed FROM dogs
after:
SELECT date_arrived, date_departed FROM Dogs

index is 966
before:
SELECT count(DISTINCT dog_id) FROM treatments
after:
SELECT COUNT(DISTINCT dog_id) FROM Treatments

index is 967
before:
SELECT count(DISTINCT dog_id) FROM treatments
after:
SELECT COUNT(DISTINCT dog_id) FROM Treatments

index is 968
before:
SELECT count(DISTINCT professional_id) FROM treatments WHERE professional_id IS NOT NULL
after:
SELECT COUNT(DISTINCT professional_id) FROM Treatments WHERE professional_id IS NOT NULL

index is 969
before:

after:
SELECT professionals.professional_id, avg(dogs.age) FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN dogs ON treatments.dog_id = dogs.dog_id GROUP BY professionals.professional_id

index is 970
before:
SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
after:
SELECT role_code, street, city, state  FROM Professionals  WHERE city LIKE '%West%'

index is 971
before:
SELECT role_code , street , city , state FROM professionals WHERE city LIKE '%West%'
after:
SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'

index is 972
before:
SELECT first_name ,  last_name ,  email_address FROM owners WHERE state LIKE '%North%'
after:
SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'

index is 973
before:
SELECT first_name ,  last_name ,  email_address FROM owners WHERE state LIKE '%North%'
after:
SELECT owners.first_name, owners.last_name, owners.email_address  FROM owners  WHERE owners.state LIKE '%North%'

index is 974
before:
SELECT count(*) FROM dogs WHERE age  <  (SELECT avg(age) FROM dogs)
after:
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs)

index is 975
before:
SELECT count(*) FROM dogs WHERE age  <  (SELECT avg(age) FROM dogs)
after:
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs)

index is 976
before:
SELECT MAX(cost_of_treatment) FROM treatments
after:
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1

index is 977
before:
SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1
after:
SELECT Treatments.cost_of_treatment  FROM Treatments  ORDER BY Treatments.date_of_treatment DESC  LIMIT 1

index is 978
before:
SELECT count(*) FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments)
after:
SELECT count(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)

index is 979
before:
SELECT COUNT(DISTINCT dog_id) FROM dogs WHERE NOT EXISTS (SELECT * FROM treatments WHERE dogs.dog_id = treatments.dog_id)
after:
SELECT COUNT(DISTINCT dog_id) FROM Dogs WHERE NOT EXISTS (SELECT * FROM Treatments WHERE Dogs.dog_id = Treatments.dog_id)

index is 980
before:
SELECT count(DISTINCT T1.owner_id) FROM owners AS T1 WHERE T1.owner_id NOT IN (SELECT DISTINCT T2.owner_id FROM dogs AS T2)
after:
SELECT count(DISTINCT T1.owner_id)  FROM Owners AS T1  WHERE T1.owner_id NOT IN (SELECT DISTINCT T2.owner_id FROM Dogs AS T2)

index is 981
before:
SELECT count(DISTINCT T1.owner_id) FROM owners AS T1 WHERE T1.owner_id NOT IN (SELECT DISTINCT T2.owner_id FROM dogs AS T2)
after:
SELECT count(DISTINCT T1.owner_id)  FROM owners AS T1  LEFT JOIN dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.owner_id IS NULL

index is 982
before:
SELECT count(professional_id) FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)
after:
SELECT COUNT(professional_id) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)

index is 983
before:
SELECT count(DISTINCT T1.professional_id) FROM professionals AS T1 WHERE T1.professional_id NOT IN (SELECT professional_id FROM treatments)
after:
SELECT COUNT(DISTINCT T1.professional_id) AS num_professionals FROM Professionals AS T1 WHERE T1.professional_id NOT IN (SELECT professional_id FROM Treatments)

index is 984
before:
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1
after:
SELECT name, age, weight  FROM Dogs  WHERE abandoned_yn = 1

index is 985
before:
SELECT name , age , weight FROM dogs WHERE abandoned_yn = 1
after:
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1

index is 986
before:
SELECT avg(age) FROM dogs
after:
SELECT AVG(age) FROM Dogs

index is 987
before:
SELECT avg(age) FROM dogs
after:
SELECT AVG(age) FROM Dogs

index is 988
before:
SELECT max(age) FROM dogs
after:
SELECT max(age) FROM Dogs

index is 989
before:
SELECT max(age) FROM dogs
after:
SELECT max(age) FROM Dogs

index is 990
before:
SELECT charge_type ,  charge_amount FROM charges
after:
SELECT charge_type, charge_amount FROM Charges

index is 991
before:
SELECT charge_type ,  charge_amount FROM charges
after:
SELECT charge_type, charge_amount FROM Charges

index is 992
before:
SELECT max(charge_amount) FROM charges
after:
SELECT MAX(charge_amount) AS max_charge_amount FROM Charges

index is 993
before:
SELECT charge_amount FROM charges ORDER BY charge_amount DESC LIMIT 1
after:
SELECT charge_amount FROM Charges ORDER BY charge_amount DESC LIMIT 1

index is 994
before:
SELECT email_address ,  cell_number ,  home_phone FROM professionals
after:
SELECT email_address, cell_number, home_phone FROM Professionals

index is 995
before:
SELECT email_address, cell_number, home_phone FROM professionals
after:
SELECT email_address, cell_number, home_phone FROM Professionals

index is 996
before:
SELECT breeds.breed_name , sizes.size_description FROM breeds , sizes
after:
SELECT breeds.breed_name, sizes.size_description FROM breeds CROSS JOIN sizes

index is 997
before:
SELECT DISTINCT breed_code ,  size_code FROM dogs
after:
SELECT DISTINCT breed_code, size_code FROM Dogs

index is 998
before:
SELECT professionals.first_name , treatment_types.treatment_type_description FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code
after:
SELECT professionals.first_name, treatment_types.treatment_type_description  FROM professionals  JOIN treatments ON professionals.professional_id = treatments.professional_id  JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code;

index is 999
before:
SELECT professionals.first_name , treatment_types.treatment_type_description FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code
after:
SELECT professionals.first_name, treatment_types.treatment_type_description FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code

index is 1000
before:
SELECT count(*) FROM singer
after:
SELECT count(DISTINCT Singer_ID) FROM singer

index is 1001
before:
SELECT count(*) FROM singer
after:
SELECT COUNT(*) FROM singer

index is 1002
before:
SELECT name FROM singer ORDER BY net_worth_millions ASC
after:
SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions ASC

index is 1003
before:
SELECT name FROM singer ORDER BY net_worth_millions ASC
after:
SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions ASC

index is 1004
before:
SELECT birth_year ,  citizenship FROM singer
after:
SELECT Birth_Year, Citizenship FROM singer

index is 1005
before:
SELECT birth_year , citizenship FROM singer
after:
SELECT birth_year, citizenship FROM singer

index is 1006
before:
SELECT name FROM singer WHERE citizenship != "France"
after:
SELECT name FROM singer WHERE citizenship <> "France"

index is 1007
before:
SELECT name FROM singer WHERE citizenship != 'French'
after:
SELECT name FROM singer WHERE citizenship <> 'French'

index is 1008
before:
SELECT name FROM singer WHERE birth_year  =  1948 OR birth_year  =  1949
after:
SELECT name FROM singer WHERE birth_year = 1948 OR birth_year = 1949

index is 1009
before:
SELECT name FROM singer WHERE birth_year  =  1948 OR birth_year  =  1949
after:
SELECT name FROM singer WHERE birth_year IN (1948, 1949)

index is 1010
before:
SELECT name FROM singer ORDER BY net_worth_millions DESC LIMIT 1
after:
SELECT name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1

index is 1011
before:
SELECT name FROM singer ORDER BY net_worth_millions DESC LIMIT 1
after:
SELECT name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1

index is 1012
before:
SELECT DISTINCT citizenship , count(*) FROM singer GROUP BY citizenship
after:
SELECT citizenship, COUNT(DISTINCT Singer_ID) FROM singer GROUP BY citizenship

index is 1013
before:
SELECT citizenship ,  COUNT(*) FROM singer GROUP BY citizenship
after:
SELECT citizenship, COUNT(*) FROM singer GROUP BY citizenship

index is 1014
before:
SELECT citizenship ,  COUNT(*) FROM singer GROUP BY citizenship ORDER BY COUNT(*) DESC LIMIT 1
after:
SELECT citizenship, COUNT(*)  FROM singer  GROUP BY citizenship  ORDER BY COUNT(*) DESC  LIMIT 1

index is 1015
before:
SELECT citizenship FROM singer GROUP BY citizenship ORDER BY count(*) DESC LIMIT 1
after:
SELECT citizenship, COUNT(*) AS count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1

index is 1016
before:
SELECT citizenship ,  MAX(net_worth_millions) FROM singer GROUP BY citizenship
after:
SELECT citizenship, MAX(net_worth_millions)  FROM singer  GROUP BY citizenship

index is 1017
before:
SELECT citizenship ,  MAX(net_worth_millions) FROM singer GROUP BY citizenship
after:
SELECT citizenship, MAX(net_worth_millions) AS max_net_worth FROM singer GROUP BY citizenship

index is 1018
before:
SELECT title ,  name FROM song JOIN singer ON song.Singer_ID  =  singer.Singer_ID
after:
SELECT song.Title, singer.Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID

index is 1019
before:
SELECT title, name FROM song JOIN singer ON song.singer_id = singer.Singer_ID
after:
SELECT song.Title, singer.Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID

index is 1020
before:
SELECT DISTINCT name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE sales > 300000
after:
SELECT DISTINCT singer.Name  FROM singer  JOIN song ON singer.Singer_ID = song.Singer_ID  WHERE song.Sales > 300000

index is 1021
before:
SELECT DISTINCT name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE sales > 300000
after:
SELECT name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE Sales > 300000;

index is 1022
before:
SELECT name FROM singer GROUP BY name HAVING count(*)  >  1
after:
SELECT name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.name HAVING COUNT(song.Song_ID) > 1

index is 1023
before:
SELECT name FROM singer GROUP BY name HAVING count(*)  >  1
after:
SELECT name  FROM singer  WHERE Singer_ID IN (     SELECT Singer_ID     FROM song     GROUP BY Singer_ID     HAVING COUNT(*) > 1 )

index is 1024
before:
SELECT name , SUM(sales) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY name
after:
SELECT name, SUM(sales) AS total_sales FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY name

index is 1025
before:
SELECT singer.name , sum(song.sales) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.name
after:
SELECT singer.Name, SUM(song.Sales) AS Total_Sales FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name

index is 1026
before:
SELECT name FROM singer WHERE NOT EXISTS (SELECT * FROM song WHERE song.singer_id = singer.singer_id)
after:
SELECT name  FROM singer  WHERE singer.Singer_ID NOT IN (SELECT singer.Singer_ID FROM song)

index is 1027
before:
SELECT name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
after:
SELECT name AS sname FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)

index is 1028
before:
SELECT DISTINCT citizenship FROM singer WHERE birth_year < 1945 OR birth_year > 1955
after:
SELECT citizenship  FROM singer  WHERE birth_year < 1945 OR birth_year > 1955

index is 1029
before:
SELECT DISTINCT citizenship FROM singer WHERE birth_year < 1945 AND birth_year > 1955
after:
SELECT The given SQLite SQL query has a logical error. The condition "birth_year < 1945 AND birth_year > 1955" is contradictory because no birth year can be both before 1945 and after 1955. Therefore, it's impossible for singers to have a birth year that satisfies this condition.  To fix the query and retrieve the citizenships shared by singers with a birth year before 1945 or after 1955, you can use the OR operator instead of the AND operator. Here's the corrected SQLite SQL query:  ```sql SELECT DISTINCT citizenship FROM singer WHERE birth_year < 1945 OR birth_year > 1955; ```  This query will return the distinct citizenship values of singers who were born before 1945 or after 1955.

index is 1030
before:
SELECT count(*) FROM other_available_features
after:
SELECT count(*) FROM Other_Available_Features

index is 1031
before:
SELECT feature_type_name FROM ref_feature_types WHERE feature_type_code  =  (SELECT feature_type_code FROM other_available_features WHERE feature_name  =  'AirCon')
after:
SELECT feature_type_name  FROM Ref_Feature_Types  WHERE feature_type_code = (     SELECT feature_type_code      FROM Other_Available_Features      WHERE feature_name = 'AirCon' )

index is 1032
before:
SELECT property_type_description FROM ref_property_types WHERE property_type_code  =  (SELECT property_type_code FROM properties)
after:
SELECT property_type_description FROM ref_property_types JOIN properties ON ref_property_types.property_type_code = properties.property_type_code WHERE properties.property_id = 'property_code'

index is 1033
before:
SELECT property_name FROM properties WHERE (property_type_code = 'Apartment' OR property_type_code = 'House') AND room_count > 1
after:
SELECT properties.property_name FROM properties WHERE (properties.property_type_code = 'Apartment' OR properties.property_type_code = 'House') AND properties.room_count > 1

